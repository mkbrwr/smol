ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
  20              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_PWR_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_PWR_DeInit:
  28              	.LFB134:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * Copyright (c) 2017 STMicroelectronics.
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the root directory of this software component.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  29              		.loc 1 91 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  41              		.loc 1 92 3
  42 0004 084B     		ldr	r3, .L2
  43 0006 1B6A     		ldr	r3, [r3, #32]
  44 0008 074A     		ldr	r2, .L2
  45 000a 43F08053 		orr	r3, r3, #268435456
  46 000e 1362     		str	r3, [r2, #32]
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  47              		.loc 1 93 3
  48 0010 054B     		ldr	r3, .L2
  49 0012 1B6A     		ldr	r3, [r3, #32]
  50 0014 044A     		ldr	r2, .L2
  51 0016 23F08053 		bic	r3, r3, #268435456
  52 001a 1362     		str	r3, [r2, #32]
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  53              		.loc 1 94 1
  54 001c 00BF     		nop
  55 001e BD46     		mov	sp, r7
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 0020 5DF8047B 		ldr	r7, [sp], #4
  60              	.LCFI3:
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 0024 7047     		bx	lr
  64              	.L3:
  65 0026 00BF     		.align	2
  66              	.L2:
  67 0028 00380240 		.word	1073887232
  68              		.cfi_endproc
  69              	.LFE134:
  71              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  72              		.align	1
  73              		.global	HAL_PWR_EnableBkUpAccess
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	HAL_PWR_EnableBkUpAccess:
  79              	.LFB135:
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 4


  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective enabling  of the backup domain.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  80              		.loc 1 109 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 80B4     		push	{r7}
  86              	.LCFI4:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              	.LCFI5:
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              	.LCFI6:
  94              		.cfi_def_cfa_register 7
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  95              		.loc 1 111 3
  96 0006 064B     		ldr	r3, .L5
  97              		.loc 1 111 32
  98 0008 0122     		movs	r2, #1
  99 000a 1A60     		str	r2, [r3]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 100              		.loc 1 112 18
 101 000c 054B     		ldr	r3, .L5+4
 102 000e 1B68     		ldr	r3, [r3]
 103              		.loc 1 112 13
 104 0010 7B60     		str	r3, [r7, #4]
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 105              		.loc 1 113 3
 106 0012 7B68     		ldr	r3, [r7, #4]
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 107              		.loc 1 114 1
 108 0014 00BF     		nop
 109 0016 0C37     		adds	r7, r7, #12
 110              	.LCFI7:
 111              		.cfi_def_cfa_offset 4
 112 0018 BD46     		mov	sp, r7
 113              	.LCFI8:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 001a 5DF8047B 		ldr	r7, [sp], #4
 117              	.LCFI9:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 5


 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 001e 7047     		bx	lr
 121              	.L6:
 122              		.align	2
 123              	.L5:
 124 0020 20000E42 		.word	1108213792
 125 0024 00700040 		.word	1073770496
 126              		.cfi_endproc
 127              	.LFE135:
 129              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_PWR_DisableBkUpAccess
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 136              	HAL_PWR_DisableBkUpAccess:
 137              	.LFB136:
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective disabling  of the backup domain.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 138              		.loc 1 129 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0000 80B4     		push	{r7}
 144              	.LCFI10:
 145              		.cfi_def_cfa_offset 4
 146              		.cfi_offset 7, -4
 147 0002 83B0     		sub	sp, sp, #12
 148              	.LCFI11:
 149              		.cfi_def_cfa_offset 16
 150 0004 00AF     		add	r7, sp, #0
 151              	.LCFI12:
 152              		.cfi_def_cfa_register 7
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 153              		.loc 1 131 3
 154 0006 064B     		ldr	r3, .L8
 155              		.loc 1 131 32
 156 0008 0022     		movs	r2, #0
 157 000a 1A60     		str	r2, [r3]
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 158              		.loc 1 132 18
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 6


 159 000c 054B     		ldr	r3, .L8+4
 160 000e 1B68     		ldr	r3, [r3]
 161              		.loc 1 132 13
 162 0010 7B60     		str	r3, [r7, #4]
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 163              		.loc 1 133 3
 164 0012 7B68     		ldr	r3, [r7, #4]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 165              		.loc 1 134 1
 166 0014 00BF     		nop
 167 0016 0C37     		adds	r7, r7, #12
 168              	.LCFI13:
 169              		.cfi_def_cfa_offset 4
 170 0018 BD46     		mov	sp, r7
 171              	.LCFI14:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 001a 5DF8047B 		ldr	r7, [sp], #4
 175              	.LCFI15:
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 001e 7047     		bx	lr
 179              	.L9:
 180              		.align	2
 181              	.L8:
 182 0020 20000E42 		.word	1108213792
 183 0024 00700040 		.word	1073770496
 184              		.cfi_endproc
 185              	.LFE136:
 187              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 188              		.align	1
 189              		.global	HAL_PWR_ConfigPVD
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	HAL_PWR_ConfigPVD:
 195              	.LFB137:
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 7


 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(Regulator, SLEEPEntry)
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR: Enter SLEEP mode with WFE instruction and
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                 no clear of pending event before.
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(Regulator, STOPEntry) 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        (++) Regulator:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 8


 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) Main regulator ON.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) Low Power regulator ON.
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        (++) STOPEntry:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFI              : Enter STOP mode with WFI instruction.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFE              : Enter STOP mode with WFE instruction and
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                clear of pending events before.
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) PWR_STOPENTRY_WFE_NO_EVT_CLEAR : Enter STOP mode with WFE instruction and
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                                                no clear of pending event before.
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 9


 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 196              		.loc 1 276 1
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201 0000 80B4     		push	{r7}
 202              	.LCFI16:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 7, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI17:
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI18:
 210              		.cfi_def_cfa_register 7
 211 0006 7860     		str	r0, [r7, #4]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 212              		.loc 1 282 3
 213 0008 2B4B     		ldr	r3, .L16
 214 000a 1B68     		ldr	r3, [r3]
 215 000c 23F0E002 		bic	r2, r3, #224
 216 0010 7B68     		ldr	r3, [r7, #4]
 217 0012 1B68     		ldr	r3, [r3]
 218 0014 2849     		ldr	r1, .L16
 219 0016 1343     		orrs	r3, r3, r2
 220 0018 0B60     		str	r3, [r1]
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 221              		.loc 1 285 3
 222 001a 284B     		ldr	r3, .L16+4
 223 001c 5B68     		ldr	r3, [r3, #4]
 224 001e 274A     		ldr	r2, .L16+4
 225 0020 23F48033 		bic	r3, r3, #65536
 226 0024 5360     		str	r3, [r2, #4]
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 227              		.loc 1 286 3
 228 0026 254B     		ldr	r3, .L16+4
 229 0028 1B68     		ldr	r3, [r3]
 230 002a 244A     		ldr	r2, .L16+4
 231 002c 23F48033 		bic	r3, r3, #65536
 232 0030 1360     		str	r3, [r2]
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 233              		.loc 1 287 3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 10


 234 0032 224B     		ldr	r3, .L16+4
 235 0034 9B68     		ldr	r3, [r3, #8]
 236 0036 214A     		ldr	r2, .L16+4
 237 0038 23F48033 		bic	r3, r3, #65536
 238 003c 9360     		str	r3, [r2, #8]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 239              		.loc 1 288 3
 240 003e 1F4B     		ldr	r3, .L16+4
 241 0040 DB68     		ldr	r3, [r3, #12]
 242 0042 1E4A     		ldr	r2, .L16+4
 243 0044 23F48033 		bic	r3, r3, #65536
 244 0048 D360     		str	r3, [r2, #12]
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 245              		.loc 1 291 17
 246 004a 7B68     		ldr	r3, [r7, #4]
 247 004c 5B68     		ldr	r3, [r3, #4]
 248              		.loc 1 291 24
 249 004e 03F48033 		and	r3, r3, #65536
 250              		.loc 1 291 5
 251 0052 002B     		cmp	r3, #0
 252 0054 05D0     		beq	.L11
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 253              		.loc 1 293 5
 254 0056 194B     		ldr	r3, .L16+4
 255 0058 1B68     		ldr	r3, [r3]
 256 005a 184A     		ldr	r2, .L16+4
 257 005c 43F48033 		orr	r3, r3, #65536
 258 0060 1360     		str	r3, [r2]
 259              	.L11:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 260              		.loc 1 297 17
 261 0062 7B68     		ldr	r3, [r7, #4]
 262 0064 5B68     		ldr	r3, [r3, #4]
 263              		.loc 1 297 24
 264 0066 03F40033 		and	r3, r3, #131072
 265              		.loc 1 297 5
 266 006a 002B     		cmp	r3, #0
 267 006c 05D0     		beq	.L12
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 268              		.loc 1 299 5
 269 006e 134B     		ldr	r3, .L16+4
 270 0070 5B68     		ldr	r3, [r3, #4]
 271 0072 124A     		ldr	r2, .L16+4
 272 0074 43F48033 		orr	r3, r3, #65536
 273 0078 5360     		str	r3, [r2, #4]
 274              	.L12:
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 11


 275              		.loc 1 303 17
 276 007a 7B68     		ldr	r3, [r7, #4]
 277 007c 5B68     		ldr	r3, [r3, #4]
 278              		.loc 1 303 24
 279 007e 03F00103 		and	r3, r3, #1
 280              		.loc 1 303 5
 281 0082 002B     		cmp	r3, #0
 282 0084 05D0     		beq	.L13
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 283              		.loc 1 305 5
 284 0086 0D4B     		ldr	r3, .L16+4
 285 0088 9B68     		ldr	r3, [r3, #8]
 286 008a 0C4A     		ldr	r2, .L16+4
 287 008c 43F48033 		orr	r3, r3, #65536
 288 0090 9360     		str	r3, [r2, #8]
 289              	.L13:
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 290              		.loc 1 308 17
 291 0092 7B68     		ldr	r3, [r7, #4]
 292 0094 5B68     		ldr	r3, [r3, #4]
 293              		.loc 1 308 24
 294 0096 03F00203 		and	r3, r3, #2
 295              		.loc 1 308 5
 296 009a 002B     		cmp	r3, #0
 297 009c 05D0     		beq	.L15
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 298              		.loc 1 310 5
 299 009e 074B     		ldr	r3, .L16+4
 300 00a0 DB68     		ldr	r3, [r3, #12]
 301 00a2 064A     		ldr	r2, .L16+4
 302 00a4 43F48033 		orr	r3, r3, #65536
 303 00a8 D360     		str	r3, [r2, #12]
 304              	.L15:
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 305              		.loc 1 312 1
 306 00aa 00BF     		nop
 307 00ac 0C37     		adds	r7, r7, #12
 308              	.LCFI19:
 309              		.cfi_def_cfa_offset 4
 310 00ae BD46     		mov	sp, r7
 311              	.LCFI20:
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 00b0 5DF8047B 		ldr	r7, [sp], #4
 315              	.LCFI21:
 316              		.cfi_restore 7
 317              		.cfi_def_cfa_offset 0
 318 00b4 7047     		bx	lr
 319              	.L17:
 320 00b6 00BF     		.align	2
 321              	.L16:
 322 00b8 00700040 		.word	1073770496
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 12


 323 00bc 003C0140 		.word	1073822720
 324              		.cfi_endproc
 325              	.LFE137:
 327              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 328              		.align	1
 329              		.global	HAL_PWR_EnablePVD
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 334              	HAL_PWR_EnablePVD:
 335              	.LFB138:
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 336              		.loc 1 319 1
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              	.LCFI22:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 00AF     		add	r7, sp, #0
 346              	.LCFI23:
 347              		.cfi_def_cfa_register 7
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 348              		.loc 1 320 3
 349 0004 034B     		ldr	r3, .L19
 350              		.loc 1 320 33
 351 0006 0122     		movs	r2, #1
 352 0008 1A60     		str	r2, [r3]
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 353              		.loc 1 321 1
 354 000a 00BF     		nop
 355 000c BD46     		mov	sp, r7
 356              	.LCFI24:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 000e 5DF8047B 		ldr	r7, [sp], #4
 360              	.LCFI25:
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0012 7047     		bx	lr
 364              	.L20:
 365              		.align	2
 366              	.L19:
 367 0014 10000E42 		.word	1108213776
 368              		.cfi_endproc
 369              	.LFE138:
 371              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 372              		.align	1
 373              		.global	HAL_PWR_DisablePVD
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 13


 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	HAL_PWR_DisablePVD:
 379              	.LFB139:
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 380              		.loc 1 328 1
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              	.LCFI26:
 387              		.cfi_def_cfa_offset 4
 388              		.cfi_offset 7, -4
 389 0002 00AF     		add	r7, sp, #0
 390              	.LCFI27:
 391              		.cfi_def_cfa_register 7
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 392              		.loc 1 329 3
 393 0004 034B     		ldr	r3, .L22
 394              		.loc 1 329 33
 395 0006 0022     		movs	r2, #0
 396 0008 1A60     		str	r2, [r3]
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 397              		.loc 1 330 1
 398 000a 00BF     		nop
 399 000c BD46     		mov	sp, r7
 400              	.LCFI28:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 000e 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI29:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0012 7047     		bx	lr
 408              	.L23:
 409              		.align	2
 410              	.L22:
 411 0014 10000E42 		.word	1108213776
 412              		.cfi_endproc
 413              	.LFE139:
 415              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 416              		.align	1
 417              		.global	HAL_PWR_EnableWakeUpPin
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	HAL_PWR_EnableWakeUpPin:
 423              	.LFB140:
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 14


 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 424              		.loc 1 342 1
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI30:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI31:
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI32:
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 440              		.loc 1 347 3
 441 0008 054B     		ldr	r3, .L25
 442 000a 5A68     		ldr	r2, [r3, #4]
 443 000c 0449     		ldr	r1, .L25
 444 000e 7B68     		ldr	r3, [r7, #4]
 445 0010 1343     		orrs	r3, r3, r2
 446 0012 4B60     		str	r3, [r1, #4]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 447              		.loc 1 348 1
 448 0014 00BF     		nop
 449 0016 0C37     		adds	r7, r7, #12
 450              	.LCFI33:
 451              		.cfi_def_cfa_offset 4
 452 0018 BD46     		mov	sp, r7
 453              	.LCFI34:
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 001a 5DF8047B 		ldr	r7, [sp], #4
 457              	.LCFI35:
 458              		.cfi_restore 7
 459              		.cfi_def_cfa_offset 0
 460 001e 7047     		bx	lr
 461              	.L26:
 462              		.align	2
 463              	.L25:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 15


 464 0020 00700040 		.word	1073770496
 465              		.cfi_endproc
 466              	.LFE140:
 468              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 469              		.align	1
 470              		.global	HAL_PWR_DisableWakeUpPin
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	HAL_PWR_DisableWakeUpPin:
 476              	.LFB141:
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 477              		.loc 1 360 1
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 8
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 80B4     		push	{r7}
 483              	.LCFI36:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 0002 83B0     		sub	sp, sp, #12
 487              	.LCFI37:
 488              		.cfi_def_cfa_offset 16
 489 0004 00AF     		add	r7, sp, #0
 490              	.LCFI38:
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 493              		.loc 1 365 3
 494 0008 064B     		ldr	r3, .L28
 495 000a 5A68     		ldr	r2, [r3, #4]
 496 000c 7B68     		ldr	r3, [r7, #4]
 497 000e DB43     		mvns	r3, r3
 498 0010 0449     		ldr	r1, .L28
 499 0012 1340     		ands	r3, r3, r2
 500 0014 4B60     		str	r3, [r1, #4]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 501              		.loc 1 366 1
 502 0016 00BF     		nop
 503 0018 0C37     		adds	r7, r7, #12
 504              	.LCFI39:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 16


 505              		.cfi_def_cfa_offset 4
 506 001a BD46     		mov	sp, r7
 507              	.LCFI40:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 001c 5DF8047B 		ldr	r7, [sp], #4
 511              	.LCFI41:
 512              		.cfi_restore 7
 513              		.cfi_def_cfa_offset 0
 514 0020 7047     		bx	lr
 515              	.L29:
 516 0022 00BF     		.align	2
 517              	.L28:
 518 0024 00700040 		.word	1073770496
 519              		.cfi_endproc
 520              	.LFE141:
 522              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 523              		.align	1
 524              		.global	HAL_PWR_EnterSLEEPMode
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	HAL_PWR_EnterSLEEPMode:
 530              	.LFB142:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI              : Enter SLEEP mode with WFI instruction
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE              : Enter SLEEP mode with WFE instruction and
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                   clear of pending events before.
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR : Enter SLEEP mode with WFE instruction and
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                   no clear of pending event before.
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 531              		.loc 1 392 1
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              	.LCFI42:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 17


 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 83B0     		sub	sp, sp, #12
 541              	.LCFI43:
 542              		.cfi_def_cfa_offset 16
 543 0004 00AF     		add	r7, sp, #0
 544              	.LCFI44:
 545              		.cfi_def_cfa_register 7
 546 0006 7860     		str	r0, [r7, #4]
 547 0008 0B46     		mov	r3, r1
 548 000a FB70     		strb	r3, [r7, #3]
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Prevent unused argument(s) compilation warning */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(Regulator);
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 549              		.loc 1 401 3
 550 000c 0B4B     		ldr	r3, .L35
 551 000e 1B69     		ldr	r3, [r3, #16]
 552 0010 0A4A     		ldr	r2, .L35
 553 0012 23F00403 		bic	r3, r3, #4
 554 0016 1361     		str	r3, [r2, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 555              		.loc 1 404 5
 556 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 557 001a 012B     		cmp	r3, #1
 558 001c 01D1     		bne	.L31
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 559              		.loc 1 407 5
 560              		.syntax unified
 561              	@ 407 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 562 001e 30BF     		wfi
 563              	@ 0 "" 2
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     if(SLEEPEntry != PWR_SLEEPENTRY_WFE_NO_EVT_CLEAR)
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       /* Clear all pending event */
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __SEV();
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __WFE();
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     }
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 564              		.loc 1 421 1
 565              		.thumb
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 18


 566              		.syntax unified
 567 0020 05E0     		b	.L34
 568              	.L31:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     {
 569              		.loc 1 411 7
 570 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 571 0024 032B     		cmp	r3, #3
 572 0026 01D0     		beq	.L33
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __WFE();
 573              		.loc 1 414 7
 574              		.syntax unified
 575              	@ 414 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 576 0028 40BF     		sev
 577              	@ 0 "" 2
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     }
 578              		.loc 1 415 7
 579              	@ 415 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 580 002a 20BF     		wfe
 581              	@ 0 "" 2
 582              		.thumb
 583              		.syntax unified
 584              	.L33:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 585              		.loc 1 419 5
 586              		.syntax unified
 587              	@ 419 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 588 002c 20BF     		wfe
 589              	@ 0 "" 2
 590              		.thumb
 591              		.syntax unified
 592              	.L34:
 593              		.loc 1 421 1
 594 002e 00BF     		nop
 595 0030 0C37     		adds	r7, r7, #12
 596              	.LCFI45:
 597              		.cfi_def_cfa_offset 4
 598 0032 BD46     		mov	sp, r7
 599              	.LCFI46:
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 0034 5DF8047B 		ldr	r7, [sp], #4
 603              	.LCFI47:
 604              		.cfi_restore 7
 605              		.cfi_def_cfa_offset 0
 606 0038 7047     		bx	lr
 607              	.L36:
 608 003a 00BF     		.align	2
 609              	.L35:
 610 003c 00ED00E0 		.word	-536810240
 611              		.cfi_endproc
 612              	.LFE142:
 614              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 615              		.align	1
 616              		.global	HAL_PWR_EnterSTOPMode
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 19


 621              	HAL_PWR_EnterSTOPMode:
 622              	.LFB143:
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI              : Enter Stop mode with WFI instruction 
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE              : Enter Stop mode with WFE instruction and
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                  clear of pending events before.
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE_NO_EVT_CLEAR : Enter STOP mode with WFE instruction and
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                                                  no clear of pending event before.
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 623              		.loc 1 446 1
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI48:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              	.LCFI49:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              	.LCFI50:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 639 0008 0B46     		mov	r3, r1
 640 000a FB70     		strb	r3, [r7, #3]
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 641              		.loc 1 452 3
 642 000c 124B     		ldr	r3, .L41
 643 000e 1B68     		ldr	r3, [r3]
 644 0010 23F00302 		bic	r2, r3, #3
 645 0014 1049     		ldr	r1, .L41
 646 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 20


 647 0018 1343     		orrs	r3, r3, r2
 648 001a 0B60     		str	r3, [r1]
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 649              		.loc 1 455 3
 650 001c 0F4B     		ldr	r3, .L41+4
 651 001e 1B69     		ldr	r3, [r3, #16]
 652 0020 0E4A     		ldr	r2, .L41+4
 653 0022 43F00403 		orr	r3, r3, #4
 654 0026 1361     		str	r3, [r2, #16]
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 655              		.loc 1 458 5
 656 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 657 002a 012B     		cmp	r3, #1
 658 002c 01D1     		bne	.L38
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 659              		.loc 1 461 5
 660              		.syntax unified
 661              	@ 461 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 662 002e 30BF     		wfi
 663              	@ 0 "" 2
 664              		.thumb
 665              		.syntax unified
 666 0030 05E0     		b	.L39
 667              	.L38:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     if(STOPEntry != PWR_STOPENTRY_WFE_NO_EVT_CLEAR)
 668              		.loc 1 465 7
 669 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 670 0034 032B     		cmp	r3, #3
 671 0036 01D0     		beq	.L40
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       /* Clear all pending event */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __SEV();
 672              		.loc 1 468 7
 673              		.syntax unified
 674              	@ 468 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 675 0038 40BF     		sev
 676              	@ 0 "" 2
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       __WFE();
 677              		.loc 1 469 7
 678              	@ 469 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 679 003a 20BF     		wfe
 680              	@ 0 "" 2
 681              		.thumb
 682              		.syntax unified
 683              	.L40:
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     }
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 21


 684              		.loc 1 472 5
 685              		.syntax unified
 686              	@ 472 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 687 003c 20BF     		wfe
 688              	@ 0 "" 2
 689              		.thumb
 690              		.syntax unified
 691              	.L39:
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 692              		.loc 1 475 3
 693 003e 074B     		ldr	r3, .L41+4
 694 0040 1B69     		ldr	r3, [r3, #16]
 695 0042 064A     		ldr	r2, .L41+4
 696 0044 23F00403 		bic	r3, r3, #4
 697 0048 1361     		str	r3, [r2, #16]
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 698              		.loc 1 476 1
 699 004a 00BF     		nop
 700 004c 0C37     		adds	r7, r7, #12
 701              	.LCFI51:
 702              		.cfi_def_cfa_offset 4
 703 004e BD46     		mov	sp, r7
 704              	.LCFI52:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 0050 5DF8047B 		ldr	r7, [sp], #4
 708              	.LCFI53:
 709              		.cfi_restore 7
 710              		.cfi_def_cfa_offset 0
 711 0054 7047     		bx	lr
 712              	.L42:
 713 0056 00BF     		.align	2
 714              	.L41:
 715 0058 00700040 		.word	1073770496
 716 005c 00ED00E0 		.word	-536810240
 717              		.cfi_endproc
 718              	.LFE143:
 720              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 721              		.align	1
 722              		.global	HAL_PWR_EnterSTANDBYMode
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 727              	HAL_PWR_EnterSTANDBYMode:
 728              	.LFB144:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 22


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 729              		.loc 1 489 1
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 1, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734 0000 80B4     		push	{r7}
 735              	.LCFI54:
 736              		.cfi_def_cfa_offset 4
 737              		.cfi_offset 7, -4
 738 0002 00AF     		add	r7, sp, #0
 739              	.LCFI55:
 740              		.cfi_def_cfa_register 7
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 741              		.loc 1 491 3
 742 0004 084B     		ldr	r3, .L44
 743 0006 1B68     		ldr	r3, [r3]
 744 0008 074A     		ldr	r2, .L44
 745 000a 43F00203 		orr	r3, r3, #2
 746 000e 1360     		str	r3, [r2]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 747              		.loc 1 494 3
 748 0010 064B     		ldr	r3, .L44+4
 749 0012 1B69     		ldr	r3, [r3, #16]
 750 0014 054A     		ldr	r2, .L44+4
 751 0016 43F00403 		orr	r3, r3, #4
 752 001a 1361     		str	r3, [r2, #16]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 753              		.loc 1 501 3
 754              		.syntax unified
 755              	@ 501 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 756 001c 30BF     		wfi
 757              	@ 0 "" 2
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 758              		.loc 1 502 1
 759              		.thumb
 760              		.syntax unified
 761 001e 00BF     		nop
 762 0020 BD46     		mov	sp, r7
 763              	.LCFI56:
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 0022 5DF8047B 		ldr	r7, [sp], #4
 767              	.LCFI57:
 768              		.cfi_restore 7
 769              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 23


 770 0026 7047     		bx	lr
 771              	.L45:
 772              		.align	2
 773              	.L44:
 774 0028 00700040 		.word	1073770496
 775 002c 00ED00E0 		.word	-536810240
 776              		.cfi_endproc
 777              	.LFE144:
 779              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 780              		.align	1
 781              		.global	HAL_PWR_PVD_IRQHandler
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	HAL_PWR_PVD_IRQHandler:
 787              	.LFB145:
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 788              		.loc 1 510 1
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792 0000 80B5     		push	{r7, lr}
 793              	.LCFI58:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 00AF     		add	r7, sp, #0
 798              	.LCFI59:
 799              		.cfi_def_cfa_register 7
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 800              		.loc 1 512 6
 801 0004 064B     		ldr	r3, .L49
 802 0006 5B69     		ldr	r3, [r3, #20]
 803 0008 03F48033 		and	r3, r3, #65536
 804              		.loc 1 512 5
 805 000c 002B     		cmp	r3, #0
 806 000e 05D0     		beq	.L48
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 807              		.loc 1 515 5
 808 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 809              		.loc 1 518 5
 810 0014 024B     		ldr	r3, .L49
 811 0016 4FF48032 		mov	r2, #65536
 812 001a 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 24


 813              	.L48:
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 814              		.loc 1 520 1
 815 001c 00BF     		nop
 816 001e 80BD     		pop	{r7, pc}
 817              	.L50:
 818              		.align	2
 819              	.L49:
 820 0020 003C0140 		.word	1073822720
 821              		.cfi_endproc
 822              	.LFE145:
 824              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 825              		.align	1
 826              		.weak	HAL_PWR_PVDCallback
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	HAL_PWR_PVDCallback:
 832              	.LFB146:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 833              		.loc 1 527 1
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838 0000 80B4     		push	{r7}
 839              	.LCFI60:
 840              		.cfi_def_cfa_offset 4
 841              		.cfi_offset 7, -4
 842 0002 00AF     		add	r7, sp, #0
 843              	.LCFI61:
 844              		.cfi_def_cfa_register 7
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 845              		.loc 1 531 1
 846 0004 00BF     		nop
 847 0006 BD46     		mov	sp, r7
 848              	.LCFI62:
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
 851 0008 5DF8047B 		ldr	r7, [sp], #4
 852              	.LCFI63:
 853              		.cfi_restore 7
 854              		.cfi_def_cfa_offset 0
 855 000c 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE146:
 859              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 25


 860              		.align	1
 861              		.global	HAL_PWR_EnableSleepOnExit
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 866              	HAL_PWR_EnableSleepOnExit:
 867              	.LFB147:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 868              		.loc 1 542 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              	.LCFI64:
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 00AF     		add	r7, sp, #0
 878              	.LCFI65:
 879              		.cfi_def_cfa_register 7
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 880              		.loc 1 544 3
 881 0004 054B     		ldr	r3, .L53
 882 0006 1B69     		ldr	r3, [r3, #16]
 883 0008 044A     		ldr	r2, .L53
 884 000a 43F00203 		orr	r3, r3, #2
 885 000e 1361     		str	r3, [r2, #16]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 886              		.loc 1 545 1
 887 0010 00BF     		nop
 888 0012 BD46     		mov	sp, r7
 889              	.LCFI66:
 890              		.cfi_def_cfa_register 13
 891              		@ sp needed
 892 0014 5DF8047B 		ldr	r7, [sp], #4
 893              	.LCFI67:
 894              		.cfi_restore 7
 895              		.cfi_def_cfa_offset 0
 896 0018 7047     		bx	lr
 897              	.L54:
 898 001a 00BF     		.align	2
 899              	.L53:
 900 001c 00ED00E0 		.word	-536810240
 901              		.cfi_endproc
 902              	.LFE147:
 904              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 26


 905              		.align	1
 906              		.global	HAL_PWR_DisableSleepOnExit
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	HAL_PWR_DisableSleepOnExit:
 912              	.LFB148:
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 913              		.loc 1 554 1
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918 0000 80B4     		push	{r7}
 919              	.LCFI68:
 920              		.cfi_def_cfa_offset 4
 921              		.cfi_offset 7, -4
 922 0002 00AF     		add	r7, sp, #0
 923              	.LCFI69:
 924              		.cfi_def_cfa_register 7
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 925              		.loc 1 556 3
 926 0004 054B     		ldr	r3, .L56
 927 0006 1B69     		ldr	r3, [r3, #16]
 928 0008 044A     		ldr	r2, .L56
 929 000a 23F00203 		bic	r3, r3, #2
 930 000e 1361     		str	r3, [r2, #16]
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 931              		.loc 1 557 1
 932 0010 00BF     		nop
 933 0012 BD46     		mov	sp, r7
 934              	.LCFI70:
 935              		.cfi_def_cfa_register 13
 936              		@ sp needed
 937 0014 5DF8047B 		ldr	r7, [sp], #4
 938              	.LCFI71:
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0018 7047     		bx	lr
 942              	.L57:
 943 001a 00BF     		.align	2
 944              	.L56:
 945 001c 00ED00E0 		.word	-536810240
 946              		.cfi_endproc
 947              	.LFE148:
 949              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 950              		.align	1
 951              		.global	HAL_PWR_EnableSEVOnPend
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 27


 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 956              	HAL_PWR_EnableSEVOnPend:
 957              	.LFB149:
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 958              		.loc 1 566 1
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              	.LCFI72:
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 00AF     		add	r7, sp, #0
 968              	.LCFI73:
 969              		.cfi_def_cfa_register 7
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 970              		.loc 1 568 3
 971 0004 054B     		ldr	r3, .L59
 972 0006 1B69     		ldr	r3, [r3, #16]
 973 0008 044A     		ldr	r2, .L59
 974 000a 43F01003 		orr	r3, r3, #16
 975 000e 1361     		str	r3, [r2, #16]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 976              		.loc 1 569 1
 977 0010 00BF     		nop
 978 0012 BD46     		mov	sp, r7
 979              	.LCFI74:
 980              		.cfi_def_cfa_register 13
 981              		@ sp needed
 982 0014 5DF8047B 		ldr	r7, [sp], #4
 983              	.LCFI75:
 984              		.cfi_restore 7
 985              		.cfi_def_cfa_offset 0
 986 0018 7047     		bx	lr
 987              	.L60:
 988 001a 00BF     		.align	2
 989              	.L59:
 990 001c 00ED00E0 		.word	-536810240
 991              		.cfi_endproc
 992              	.LFE149:
 994              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 995              		.align	1
 996              		.global	HAL_PWR_DisableSEVOnPend
 997              		.syntax unified
 998              		.thumb
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 28


 999              		.thumb_func
 1001              	HAL_PWR_DisableSEVOnPend:
 1002              	.LFB150:
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 1003              		.loc 1 578 1
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008 0000 80B4     		push	{r7}
 1009              	.LCFI76:
 1010              		.cfi_def_cfa_offset 4
 1011              		.cfi_offset 7, -4
 1012 0002 00AF     		add	r7, sp, #0
 1013              	.LCFI77:
 1014              		.cfi_def_cfa_register 7
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 1015              		.loc 1 580 3
 1016 0004 054B     		ldr	r3, .L62
 1017 0006 1B69     		ldr	r3, [r3, #16]
 1018 0008 044A     		ldr	r2, .L62
 1019 000a 23F01003 		bic	r3, r3, #16
 1020 000e 1361     		str	r3, [r2, #16]
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1021              		.loc 1 581 1
 1022 0010 00BF     		nop
 1023 0012 BD46     		mov	sp, r7
 1024              	.LCFI78:
 1025              		.cfi_def_cfa_register 13
 1026              		@ sp needed
 1027 0014 5DF8047B 		ldr	r7, [sp], #4
 1028              	.LCFI79:
 1029              		.cfi_restore 7
 1030              		.cfi_def_cfa_offset 0
 1031 0018 7047     		bx	lr
 1032              	.L63:
 1033 001a 00BF     		.align	2
 1034              	.L62:
 1035 001c 00ED00E0 		.word	-536810240
 1036              		.cfi_endproc
 1037              	.LFE150:
 1039              		.text
 1040              	.Letext0:
 1041              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1042              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1043              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1044              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 1045              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 29


 1046              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_pwr.c
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:21     .text.HAL_PWR_DeInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:27     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:67     .text.HAL_PWR_DeInit:00000028 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:72     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:78     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:124    .text.HAL_PWR_EnableBkUpAccess:00000020 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:130    .text.HAL_PWR_DisableBkUpAccess:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:136    .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:182    .text.HAL_PWR_DisableBkUpAccess:00000020 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:188    .text.HAL_PWR_ConfigPVD:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:194    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:322    .text.HAL_PWR_ConfigPVD:000000b8 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:328    .text.HAL_PWR_EnablePVD:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:334    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:367    .text.HAL_PWR_EnablePVD:00000014 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:372    .text.HAL_PWR_DisablePVD:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:378    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:411    .text.HAL_PWR_DisablePVD:00000014 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:416    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:422    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:464    .text.HAL_PWR_EnableWakeUpPin:00000020 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:469    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:475    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:518    .text.HAL_PWR_DisableWakeUpPin:00000024 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:523    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:529    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:610    .text.HAL_PWR_EnterSLEEPMode:0000003c $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:615    .text.HAL_PWR_EnterSTOPMode:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:621    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:715    .text.HAL_PWR_EnterSTOPMode:00000058 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:721    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:727    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:774    .text.HAL_PWR_EnterSTANDBYMode:00000028 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:780    .text.HAL_PWR_PVD_IRQHandler:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:786    .text.HAL_PWR_PVD_IRQHandler:00000000 HAL_PWR_PVD_IRQHandler
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:831    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:820    .text.HAL_PWR_PVD_IRQHandler:00000020 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:825    .text.HAL_PWR_PVDCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:860    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:866    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:900    .text.HAL_PWR_EnableSleepOnExit:0000001c $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:905    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:911    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:945    .text.HAL_PWR_DisableSleepOnExit:0000001c $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:950    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:956    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:990    .text.HAL_PWR_EnableSEVOnPend:0000001c $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:995    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:1001   .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//cc7RfG7q.s:1035   .text.HAL_PWR_DisableSEVOnPend:0000001c $d

NO UNDEFINED SYMBOLS
