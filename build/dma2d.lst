ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"dma2d.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/dma2d.c"
  20              		.global	hdma2d
  21              		.section	.bss.hdma2d,"aw",%nobits
  22              		.align	2
  25              	hdma2d:
  26 0000 00000000 		.space	64
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.section	.text.MX_DMA2D_Init,"ax",%progbits
  28              		.align	1
  29              		.global	MX_DMA2D_Init
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	MX_DMA2D_Init:
  35              	.LFB137:
   1:Core/Src/dma2d.c **** /* USER CODE BEGIN Header */
   2:Core/Src/dma2d.c **** /**
   3:Core/Src/dma2d.c ****   ******************************************************************************
   4:Core/Src/dma2d.c ****   * @file    dma2d.c
   5:Core/Src/dma2d.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/dma2d.c ****   *          of the DMA2D instances.
   7:Core/Src/dma2d.c ****   ******************************************************************************
   8:Core/Src/dma2d.c ****   * @attention
   9:Core/Src/dma2d.c ****   *
  10:Core/Src/dma2d.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/dma2d.c ****   * All rights reserved.
  12:Core/Src/dma2d.c ****   *
  13:Core/Src/dma2d.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/dma2d.c ****   * in the root directory of this software component.
  15:Core/Src/dma2d.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/dma2d.c ****   *
  17:Core/Src/dma2d.c ****   ******************************************************************************
  18:Core/Src/dma2d.c ****   */
  19:Core/Src/dma2d.c **** /* USER CODE END Header */
  20:Core/Src/dma2d.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/dma2d.c **** #include "dma2d.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 2


  22:Core/Src/dma2d.c **** 
  23:Core/Src/dma2d.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/dma2d.c **** 
  25:Core/Src/dma2d.c **** /* USER CODE END 0 */
  26:Core/Src/dma2d.c **** 
  27:Core/Src/dma2d.c **** DMA2D_HandleTypeDef hdma2d;
  28:Core/Src/dma2d.c **** 
  29:Core/Src/dma2d.c **** /* DMA2D init function */
  30:Core/Src/dma2d.c **** void MX_DMA2D_Init(void)
  31:Core/Src/dma2d.c **** {
  36              		.loc 1 31 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              	.LCFI1:
  47              		.cfi_def_cfa_register 7
  32:Core/Src/dma2d.c **** 
  33:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_Init 0 */
  34:Core/Src/dma2d.c **** 
  35:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_Init 0 */
  36:Core/Src/dma2d.c **** 
  37:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_Init 1 */
  38:Core/Src/dma2d.c **** 
  39:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_Init 1 */
  40:Core/Src/dma2d.c ****   hdma2d.Instance = DMA2D;
  48              		.loc 1 40 19
  49 0004 154B     		ldr	r3, .L5
  50 0006 164A     		ldr	r2, .L5+4
  51 0008 1A60     		str	r2, [r3]
  41:Core/Src/dma2d.c ****   hdma2d.Init.Mode = DMA2D_M2M;
  52              		.loc 1 41 20
  53 000a 144B     		ldr	r3, .L5
  54 000c 0022     		movs	r2, #0
  55 000e 5A60     		str	r2, [r3, #4]
  42:Core/Src/dma2d.c ****   hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
  56              		.loc 1 42 25
  57 0010 124B     		ldr	r3, .L5
  58 0012 0022     		movs	r2, #0
  59 0014 9A60     		str	r2, [r3, #8]
  43:Core/Src/dma2d.c ****   hdma2d.Init.OutputOffset = 0;
  60              		.loc 1 43 28
  61 0016 114B     		ldr	r3, .L5
  62 0018 0022     		movs	r2, #0
  63 001a DA60     		str	r2, [r3, #12]
  44:Core/Src/dma2d.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
  64              		.loc 1 44 34
  65 001c 0F4B     		ldr	r3, .L5
  66 001e 0022     		movs	r2, #0
  67 0020 9A62     		str	r2, [r3, #40]
  45:Core/Src/dma2d.c ****   hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
  68              		.loc 1 45 37
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 3


  69 0022 0E4B     		ldr	r3, .L5
  70 0024 0022     		movs	r2, #0
  71 0026 DA62     		str	r2, [r3, #44]
  46:Core/Src/dma2d.c ****   hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
  72              		.loc 1 46 32
  73 0028 0C4B     		ldr	r3, .L5
  74 002a 0022     		movs	r2, #0
  75 002c 1A63     		str	r2, [r3, #48]
  47:Core/Src/dma2d.c ****   hdma2d.LayerCfg[1].InputAlpha = 0;
  76              		.loc 1 47 33
  77 002e 0B4B     		ldr	r3, .L5
  78 0030 0022     		movs	r2, #0
  79 0032 5A63     		str	r2, [r3, #52]
  48:Core/Src/dma2d.c ****   if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
  80              		.loc 1 48 7
  81 0034 0948     		ldr	r0, .L5
  82 0036 FFF7FEFF 		bl	HAL_DMA2D_Init
  83 003a 0346     		mov	r3, r0
  84              		.loc 1 48 6 discriminator 1
  85 003c 002B     		cmp	r3, #0
  86 003e 01D0     		beq	.L2
  49:Core/Src/dma2d.c ****   {
  50:Core/Src/dma2d.c ****     Error_Handler();
  87              		.loc 1 50 5
  88 0040 FFF7FEFF 		bl	Error_Handler
  89              	.L2:
  51:Core/Src/dma2d.c ****   }
  52:Core/Src/dma2d.c ****   if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
  90              		.loc 1 52 7
  91 0044 0121     		movs	r1, #1
  92 0046 0548     		ldr	r0, .L5
  93 0048 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
  94 004c 0346     		mov	r3, r0
  95              		.loc 1 52 6 discriminator 1
  96 004e 002B     		cmp	r3, #0
  97 0050 01D0     		beq	.L4
  53:Core/Src/dma2d.c ****   {
  54:Core/Src/dma2d.c ****     Error_Handler();
  98              		.loc 1 54 5
  99 0052 FFF7FEFF 		bl	Error_Handler
 100              	.L4:
  55:Core/Src/dma2d.c ****   }
  56:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_Init 2 */
  57:Core/Src/dma2d.c **** 
  58:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_Init 2 */
  59:Core/Src/dma2d.c **** 
  60:Core/Src/dma2d.c **** }
 101              		.loc 1 60 1
 102 0056 00BF     		nop
 103 0058 80BD     		pop	{r7, pc}
 104              	.L6:
 105 005a 00BF     		.align	2
 106              	.L5:
 107 005c 00000000 		.word	hdma2d
 108 0060 00B00240 		.word	1073917952
 109              		.cfi_endproc
 110              	.LFE137:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 4


 112              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 113              		.align	1
 114              		.global	HAL_DMA2D_MspInit
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	HAL_DMA2D_MspInit:
 120              	.LFB138:
  61:Core/Src/dma2d.c **** 
  62:Core/Src/dma2d.c **** void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
  63:Core/Src/dma2d.c **** {
 121              		.loc 1 63 1
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 16
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 84B0     		sub	sp, sp, #16
 131              	.LCFI3:
 132              		.cfi_def_cfa_offset 24
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI4:
 135              		.cfi_def_cfa_register 7
 136 0006 7860     		str	r0, [r7, #4]
  64:Core/Src/dma2d.c **** 
  65:Core/Src/dma2d.c ****   if(dma2dHandle->Instance==DMA2D)
 137              		.loc 1 65 17
 138 0008 7B68     		ldr	r3, [r7, #4]
 139 000a 1B68     		ldr	r3, [r3]
 140              		.loc 1 65 5
 141 000c 0E4A     		ldr	r2, .L10
 142 000e 9342     		cmp	r3, r2
 143 0010 15D1     		bne	.L9
 144              	.LBB2:
  66:Core/Src/dma2d.c ****   {
  67:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_MspInit 0 */
  68:Core/Src/dma2d.c **** 
  69:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_MspInit 0 */
  70:Core/Src/dma2d.c ****     /* DMA2D clock enable */
  71:Core/Src/dma2d.c ****     __HAL_RCC_DMA2D_CLK_ENABLE();
 145              		.loc 1 71 5
 146 0012 0023     		movs	r3, #0
 147 0014 FB60     		str	r3, [r7, #12]
 148 0016 0D4B     		ldr	r3, .L10+4
 149 0018 1B6B     		ldr	r3, [r3, #48]
 150 001a 0C4A     		ldr	r2, .L10+4
 151 001c 43F40003 		orr	r3, r3, #8388608
 152 0020 1363     		str	r3, [r2, #48]
 153 0022 0A4B     		ldr	r3, .L10+4
 154 0024 1B6B     		ldr	r3, [r3, #48]
 155 0026 03F40003 		and	r3, r3, #8388608
 156 002a FB60     		str	r3, [r7, #12]
 157 002c FB68     		ldr	r3, [r7, #12]
 158              	.LBE2:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 5


  72:Core/Src/dma2d.c **** 
  73:Core/Src/dma2d.c ****     /* DMA2D interrupt Init */
  74:Core/Src/dma2d.c ****     HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 159              		.loc 1 74 5
 160 002e 0022     		movs	r2, #0
 161 0030 0021     		movs	r1, #0
 162 0032 5A20     		movs	r0, #90
 163 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  75:Core/Src/dma2d.c ****     HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 164              		.loc 1 75 5
 165 0038 5A20     		movs	r0, #90
 166 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 167              	.L9:
  76:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_MspInit 1 */
  77:Core/Src/dma2d.c **** 
  78:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_MspInit 1 */
  79:Core/Src/dma2d.c ****   }
  80:Core/Src/dma2d.c **** }
 168              		.loc 1 80 1
 169 003e 00BF     		nop
 170 0040 1037     		adds	r7, r7, #16
 171              	.LCFI5:
 172              		.cfi_def_cfa_offset 8
 173 0042 BD46     		mov	sp, r7
 174              	.LCFI6:
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0044 80BD     		pop	{r7, pc}
 178              	.L11:
 179 0046 00BF     		.align	2
 180              	.L10:
 181 0048 00B00240 		.word	1073917952
 182 004c 00380240 		.word	1073887232
 183              		.cfi_endproc
 184              	.LFE138:
 186              		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 187              		.align	1
 188              		.global	HAL_DMA2D_MspDeInit
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	HAL_DMA2D_MspDeInit:
 194              	.LFB139:
  81:Core/Src/dma2d.c **** 
  82:Core/Src/dma2d.c **** void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* dma2dHandle)
  83:Core/Src/dma2d.c **** {
 195              		.loc 1 83 1
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 82B0     		sub	sp, sp, #8
 205              	.LCFI8:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 6


 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI9:
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
  84:Core/Src/dma2d.c **** 
  85:Core/Src/dma2d.c ****   if(dma2dHandle->Instance==DMA2D)
 211              		.loc 1 85 17
 212 0008 7B68     		ldr	r3, [r7, #4]
 213 000a 1B68     		ldr	r3, [r3]
 214              		.loc 1 85 5
 215 000c 074A     		ldr	r2, .L15
 216 000e 9342     		cmp	r3, r2
 217 0010 08D1     		bne	.L14
  86:Core/Src/dma2d.c ****   {
  87:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_MspDeInit 0 */
  88:Core/Src/dma2d.c **** 
  89:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_MspDeInit 0 */
  90:Core/Src/dma2d.c ****     /* Peripheral clock disable */
  91:Core/Src/dma2d.c ****     __HAL_RCC_DMA2D_CLK_DISABLE();
 218              		.loc 1 91 5
 219 0012 074B     		ldr	r3, .L15+4
 220 0014 1B6B     		ldr	r3, [r3, #48]
 221 0016 064A     		ldr	r2, .L15+4
 222 0018 23F40003 		bic	r3, r3, #8388608
 223 001c 1363     		str	r3, [r2, #48]
  92:Core/Src/dma2d.c **** 
  93:Core/Src/dma2d.c ****     /* DMA2D interrupt Deinit */
  94:Core/Src/dma2d.c ****     HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 224              		.loc 1 94 5
 225 001e 5A20     		movs	r0, #90
 226 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 227              	.L14:
  95:Core/Src/dma2d.c ****   /* USER CODE BEGIN DMA2D_MspDeInit 1 */
  96:Core/Src/dma2d.c **** 
  97:Core/Src/dma2d.c ****   /* USER CODE END DMA2D_MspDeInit 1 */
  98:Core/Src/dma2d.c ****   }
  99:Core/Src/dma2d.c **** }
 228              		.loc 1 99 1
 229 0024 00BF     		nop
 230 0026 0837     		adds	r7, r7, #8
 231              	.LCFI10:
 232              		.cfi_def_cfa_offset 8
 233 0028 BD46     		mov	sp, r7
 234              	.LCFI11:
 235              		.cfi_def_cfa_register 13
 236              		@ sp needed
 237 002a 80BD     		pop	{r7, pc}
 238              	.L16:
 239              		.align	2
 240              	.L15:
 241 002c 00B00240 		.word	1073917952
 242 0030 00380240 		.word	1073887232
 243              		.cfi_endproc
 244              	.LFE139:
 246              		.text
 247              	.Letext0:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 7


 248              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 249              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 250              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 251              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 252              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma2d.h"
 253              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 254              		.file 8 "Core/Inc/dma2d.h"
 255              		.file 9 "Core/Inc/main.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 dma2d.c
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:25     .bss.hdma2d:00000000 hdma2d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:22     .bss.hdma2d:00000000 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:28     .text.MX_DMA2D_Init:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:34     .text.MX_DMA2D_Init:00000000 MX_DMA2D_Init
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:107    .text.MX_DMA2D_Init:0000005c $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:113    .text.HAL_DMA2D_MspInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:119    .text.HAL_DMA2D_MspInit:00000000 HAL_DMA2D_MspInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:181    .text.HAL_DMA2D_MspInit:00000048 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:187    .text.HAL_DMA2D_MspDeInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:193    .text.HAL_DMA2D_MspDeInit:00000000 HAL_DMA2D_MspDeInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccu2PHiU.s:241    .text.HAL_DMA2D_MspDeInit:0000002c $d

UNDEFINED SYMBOLS
HAL_DMA2D_Init
Error_Handler
HAL_DMA2D_ConfigLayer
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
