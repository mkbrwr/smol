ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
  20              		.section	.text.HAL_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_UART_Init:
  28              	.LFB134:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 358 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 8


  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 360 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 362 12
  50 000e 0123     		movs	r3, #1
  51 0010 42E0     		b	.L3
  52              	.L2:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 381 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F84130 		ldrb	r3, [r3, #65]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 381 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 384 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F84020 		strb	r2, [r3, #64]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 9


 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 398 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 402 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F84120 		strb	r2, [r3, #65]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 405 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 408 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 413 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 414 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 10


 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 417 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 420 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e 5A64     		str	r2, [r3, #68]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 421 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F84120 		strb	r2, [r3, #65]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 422 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F84220 		strb	r2, [r3, #66]
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 119              		.loc 1 423 22
 120 0090 7B68     		ldr	r3, [r7, #4]
 121 0092 0022     		movs	r2, #0
 122 0094 5A63     		str	r2, [r3, #52]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 123              		.loc 1 425 10
 124 0096 0023     		movs	r3, #0
 125              	.L3:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 126              		.loc 1 426 1
 127 0098 1846     		mov	r0, r3
 128 009a 0837     		adds	r7, r7, #8
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 009c BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 009e 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE134:
 139              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_HalfDuplex_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	HAL_HalfDuplex_Init:
 147              	.LFB135:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 11


 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 148              		.loc 1 436 1
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI7:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 164              		.loc 1 438 6
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 002B     		cmp	r3, #0
 167 000c 01D1     		bne	.L6
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 168              		.loc 1 440 12
 169 000e 0123     		movs	r3, #1
 170 0010 4AE0     		b	.L7
 171              	.L6:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 172              		.loc 1 448 12
 173 0012 7B68     		ldr	r3, [r7, #4]
 174 0014 93F84130 		ldrb	r3, [r3, #65]
 175 0018 DBB2     		uxtb	r3, r3
 176              		.loc 1 448 6
 177 001a 002B     		cmp	r3, #0
 178 001c 06D1     		bne	.L8
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 179              		.loc 1 451 17
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 12


 180 001e 7B68     		ldr	r3, [r7, #4]
 181 0020 0022     		movs	r2, #0
 182 0022 83F84020 		strb	r2, [r3, #64]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 183              		.loc 1 465 5
 184 0026 7868     		ldr	r0, [r7, #4]
 185 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 186              	.L8:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 187              		.loc 1 469 17
 188 002c 7B68     		ldr	r3, [r7, #4]
 189 002e 2422     		movs	r2, #36
 190 0030 83F84120 		strb	r2, [r3, #65]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 191              		.loc 1 472 3
 192 0034 7B68     		ldr	r3, [r7, #4]
 193 0036 1B68     		ldr	r3, [r3]
 194 0038 DA68     		ldr	r2, [r3, #12]
 195 003a 7B68     		ldr	r3, [r7, #4]
 196 003c 1B68     		ldr	r3, [r3]
 197 003e 22F40052 		bic	r2, r2, #8192
 198 0042 DA60     		str	r2, [r3, #12]
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 199              		.loc 1 475 3
 200 0044 7868     		ldr	r0, [r7, #4]
 201 0046 FFF7FEFF 		bl	UART_SetConfig
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 202              		.loc 1 480 3
 203 004a 7B68     		ldr	r3, [r7, #4]
 204 004c 1B68     		ldr	r3, [r3]
 205 004e 1A69     		ldr	r2, [r3, #16]
 206 0050 7B68     		ldr	r3, [r7, #4]
 207 0052 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 13


 208 0054 22F49042 		bic	r2, r2, #18432
 209 0058 1A61     		str	r2, [r3, #16]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 210              		.loc 1 481 3
 211 005a 7B68     		ldr	r3, [r7, #4]
 212 005c 1B68     		ldr	r3, [r3]
 213 005e 5A69     		ldr	r2, [r3, #20]
 214 0060 7B68     		ldr	r3, [r7, #4]
 215 0062 1B68     		ldr	r3, [r3]
 216 0064 22F02202 		bic	r2, r2, #34
 217 0068 5A61     		str	r2, [r3, #20]
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 218              		.loc 1 484 3
 219 006a 7B68     		ldr	r3, [r7, #4]
 220 006c 1B68     		ldr	r3, [r3]
 221 006e 5A69     		ldr	r2, [r3, #20]
 222 0070 7B68     		ldr	r3, [r7, #4]
 223 0072 1B68     		ldr	r3, [r3]
 224 0074 42F00802 		orr	r2, r2, #8
 225 0078 5A61     		str	r2, [r3, #20]
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 226              		.loc 1 487 3
 227 007a 7B68     		ldr	r3, [r7, #4]
 228 007c 1B68     		ldr	r3, [r3]
 229 007e DA68     		ldr	r2, [r3, #12]
 230 0080 7B68     		ldr	r3, [r7, #4]
 231 0082 1B68     		ldr	r3, [r3]
 232 0084 42F40052 		orr	r2, r2, #8192
 233 0088 DA60     		str	r2, [r3, #12]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 234              		.loc 1 490 20
 235 008a 7B68     		ldr	r3, [r7, #4]
 236 008c 0022     		movs	r2, #0
 237 008e 5A64     		str	r2, [r3, #68]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 238              		.loc 1 491 17
 239 0090 7B68     		ldr	r3, [r7, #4]
 240 0092 2022     		movs	r2, #32
 241 0094 83F84120 		strb	r2, [r3, #65]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 242              		.loc 1 492 18
 243 0098 7B68     		ldr	r3, [r7, #4]
 244 009a 2022     		movs	r2, #32
 245 009c 83F84220 		strb	r2, [r3, #66]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 246              		.loc 1 493 22
 247 00a0 7B68     		ldr	r3, [r7, #4]
 248 00a2 0022     		movs	r2, #0
 249 00a4 5A63     		str	r2, [r3, #52]
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 14


 250              		.loc 1 495 10
 251 00a6 0023     		movs	r3, #0
 252              	.L7:
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 253              		.loc 1 496 1
 254 00a8 1846     		mov	r0, r3
 255 00aa 0837     		adds	r7, r7, #8
 256              	.LCFI8:
 257              		.cfi_def_cfa_offset 8
 258 00ac BD46     		mov	sp, r7
 259              	.LCFI9:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 00ae 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE135:
 266              		.section	.text.HAL_LIN_Init,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_LIN_Init
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	HAL_LIN_Init:
 274              	.LFB136:
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 275              		.loc 1 510 1
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI10:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              	.LCFI11:
 286              		.cfi_def_cfa_offset 16
 287 0004 00AF     		add	r7, sp, #0
 288              	.LCFI12:
 289              		.cfi_def_cfa_register 7
 290 0006 7860     		str	r0, [r7, #4]
 291 0008 3960     		str	r1, [r7]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 15


 292              		.loc 1 512 6
 293 000a 7B68     		ldr	r3, [r7, #4]
 294 000c 002B     		cmp	r3, #0
 295 000e 01D1     		bne	.L10
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 296              		.loc 1 514 12
 297 0010 0123     		movs	r3, #1
 298 0012 5AE0     		b	.L11
 299              	.L10:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 300              		.loc 1 525 12
 301 0014 7B68     		ldr	r3, [r7, #4]
 302 0016 93F84130 		ldrb	r3, [r3, #65]
 303 001a DBB2     		uxtb	r3, r3
 304              		.loc 1 525 6
 305 001c 002B     		cmp	r3, #0
 306 001e 06D1     		bne	.L12
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 307              		.loc 1 528 17
 308 0020 7B68     		ldr	r3, [r7, #4]
 309 0022 0022     		movs	r2, #0
 310 0024 83F84020 		strb	r2, [r3, #64]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 311              		.loc 1 542 5
 312 0028 7868     		ldr	r0, [r7, #4]
 313 002a FFF7FEFF 		bl	HAL_UART_MspInit
 314              	.L12:
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 16


 315              		.loc 1 546 17
 316 002e 7B68     		ldr	r3, [r7, #4]
 317 0030 2422     		movs	r2, #36
 318 0032 83F84120 		strb	r2, [r3, #65]
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 319              		.loc 1 549 3
 320 0036 7B68     		ldr	r3, [r7, #4]
 321 0038 1B68     		ldr	r3, [r3]
 322 003a DA68     		ldr	r2, [r3, #12]
 323 003c 7B68     		ldr	r3, [r7, #4]
 324 003e 1B68     		ldr	r3, [r3]
 325 0040 22F40052 		bic	r2, r2, #8192
 326 0044 DA60     		str	r2, [r3, #12]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 327              		.loc 1 552 3
 328 0046 7868     		ldr	r0, [r7, #4]
 329 0048 FFF7FEFF 		bl	UART_SetConfig
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 330              		.loc 1 557 3
 331 004c 7B68     		ldr	r3, [r7, #4]
 332 004e 1B68     		ldr	r3, [r3]
 333 0050 1A69     		ldr	r2, [r3, #16]
 334 0052 7B68     		ldr	r3, [r7, #4]
 335 0054 1B68     		ldr	r3, [r3]
 336 0056 22F40062 		bic	r2, r2, #2048
 337 005a 1A61     		str	r2, [r3, #16]
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 338              		.loc 1 558 3
 339 005c 7B68     		ldr	r3, [r7, #4]
 340 005e 1B68     		ldr	r3, [r3]
 341 0060 5A69     		ldr	r2, [r3, #20]
 342 0062 7B68     		ldr	r3, [r7, #4]
 343 0064 1B68     		ldr	r3, [r3]
 344 0066 22F02A02 		bic	r2, r2, #42
 345 006a 5A61     		str	r2, [r3, #20]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 346              		.loc 1 561 3
 347 006c 7B68     		ldr	r3, [r7, #4]
 348 006e 1B68     		ldr	r3, [r3]
 349 0070 1A69     		ldr	r2, [r3, #16]
 350 0072 7B68     		ldr	r3, [r7, #4]
 351 0074 1B68     		ldr	r3, [r3]
 352 0076 42F48042 		orr	r2, r2, #16384
 353 007a 1A61     		str	r2, [r3, #16]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 17


 354              		.loc 1 564 3
 355 007c 7B68     		ldr	r3, [r7, #4]
 356 007e 1B68     		ldr	r3, [r3]
 357 0080 1A69     		ldr	r2, [r3, #16]
 358 0082 7B68     		ldr	r3, [r7, #4]
 359 0084 1B68     		ldr	r3, [r3]
 360 0086 22F02002 		bic	r2, r2, #32
 361 008a 1A61     		str	r2, [r3, #16]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 362              		.loc 1 565 3
 363 008c 7B68     		ldr	r3, [r7, #4]
 364 008e 1B68     		ldr	r3, [r3]
 365 0090 1969     		ldr	r1, [r3, #16]
 366 0092 7B68     		ldr	r3, [r7, #4]
 367 0094 1B68     		ldr	r3, [r3]
 368 0096 3A68     		ldr	r2, [r7]
 369 0098 0A43     		orrs	r2, r2, r1
 370 009a 1A61     		str	r2, [r3, #16]
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 371              		.loc 1 568 3
 372 009c 7B68     		ldr	r3, [r7, #4]
 373 009e 1B68     		ldr	r3, [r3]
 374 00a0 DA68     		ldr	r2, [r3, #12]
 375 00a2 7B68     		ldr	r3, [r7, #4]
 376 00a4 1B68     		ldr	r3, [r3]
 377 00a6 42F40052 		orr	r2, r2, #8192
 378 00aa DA60     		str	r2, [r3, #12]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 379              		.loc 1 571 20
 380 00ac 7B68     		ldr	r3, [r7, #4]
 381 00ae 0022     		movs	r2, #0
 382 00b0 5A64     		str	r2, [r3, #68]
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 383              		.loc 1 572 17
 384 00b2 7B68     		ldr	r3, [r7, #4]
 385 00b4 2022     		movs	r2, #32
 386 00b6 83F84120 		strb	r2, [r3, #65]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 387              		.loc 1 573 18
 388 00ba 7B68     		ldr	r3, [r7, #4]
 389 00bc 2022     		movs	r2, #32
 390 00be 83F84220 		strb	r2, [r3, #66]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 391              		.loc 1 574 22
 392 00c2 7B68     		ldr	r3, [r7, #4]
 393 00c4 0022     		movs	r2, #0
 394 00c6 5A63     		str	r2, [r3, #52]
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 395              		.loc 1 576 10
 396 00c8 0023     		movs	r3, #0
 397              	.L11:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 18


 398              		.loc 1 577 1
 399 00ca 1846     		mov	r0, r3
 400 00cc 0837     		adds	r7, r7, #8
 401              	.LCFI13:
 402              		.cfi_def_cfa_offset 8
 403 00ce BD46     		mov	sp, r7
 404              	.LCFI14:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 00d0 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE136:
 411              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_MultiProcessor_Init
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	HAL_MultiProcessor_Init:
 419              	.LFB137:
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 420              		.loc 1 592 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 16
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI15:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 84B0     		sub	sp, sp, #16
 430              	.LCFI16:
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              	.LCFI17:
 434              		.cfi_def_cfa_register 7
 435 0006 F860     		str	r0, [r7, #12]
 436 0008 0B46     		mov	r3, r1
 437 000a 7A60     		str	r2, [r7, #4]
 438 000c FB72     		strb	r3, [r7, #11]
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 439              		.loc 1 594 6
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 19


 440 000e FB68     		ldr	r3, [r7, #12]
 441 0010 002B     		cmp	r3, #0
 442 0012 01D1     		bne	.L14
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 443              		.loc 1 596 12
 444 0014 0123     		movs	r3, #1
 445 0016 62E0     		b	.L15
 446              	.L14:
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 447              		.loc 1 608 12
 448 0018 FB68     		ldr	r3, [r7, #12]
 449 001a 93F84130 		ldrb	r3, [r3, #65]
 450 001e DBB2     		uxtb	r3, r3
 451              		.loc 1 608 6
 452 0020 002B     		cmp	r3, #0
 453 0022 06D1     		bne	.L16
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 454              		.loc 1 611 17
 455 0024 FB68     		ldr	r3, [r7, #12]
 456 0026 0022     		movs	r2, #0
 457 0028 83F84020 		strb	r2, [r3, #64]
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 458              		.loc 1 625 5
 459 002c F868     		ldr	r0, [r7, #12]
 460 002e FFF7FEFF 		bl	HAL_UART_MspInit
 461              	.L16:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 20


 462              		.loc 1 629 17
 463 0032 FB68     		ldr	r3, [r7, #12]
 464 0034 2422     		movs	r2, #36
 465 0036 83F84120 		strb	r2, [r3, #65]
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 466              		.loc 1 632 3
 467 003a FB68     		ldr	r3, [r7, #12]
 468 003c 1B68     		ldr	r3, [r3]
 469 003e DA68     		ldr	r2, [r3, #12]
 470 0040 FB68     		ldr	r3, [r7, #12]
 471 0042 1B68     		ldr	r3, [r3]
 472 0044 22F40052 		bic	r2, r2, #8192
 473 0048 DA60     		str	r2, [r3, #12]
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 474              		.loc 1 635 3
 475 004a F868     		ldr	r0, [r7, #12]
 476 004c FFF7FEFF 		bl	UART_SetConfig
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 477              		.loc 1 640 3
 478 0050 FB68     		ldr	r3, [r7, #12]
 479 0052 1B68     		ldr	r3, [r3]
 480 0054 1A69     		ldr	r2, [r3, #16]
 481 0056 FB68     		ldr	r3, [r7, #12]
 482 0058 1B68     		ldr	r3, [r3]
 483 005a 22F49042 		bic	r2, r2, #18432
 484 005e 1A61     		str	r2, [r3, #16]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 485              		.loc 1 641 3
 486 0060 FB68     		ldr	r3, [r7, #12]
 487 0062 1B68     		ldr	r3, [r3]
 488 0064 5A69     		ldr	r2, [r3, #20]
 489 0066 FB68     		ldr	r3, [r7, #12]
 490 0068 1B68     		ldr	r3, [r3]
 491 006a 22F02A02 		bic	r2, r2, #42
 492 006e 5A61     		str	r2, [r3, #20]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 493              		.loc 1 644 3
 494 0070 FB68     		ldr	r3, [r7, #12]
 495 0072 1B68     		ldr	r3, [r3]
 496 0074 1A69     		ldr	r2, [r3, #16]
 497 0076 FB68     		ldr	r3, [r7, #12]
 498 0078 1B68     		ldr	r3, [r3]
 499 007a 22F00F02 		bic	r2, r2, #15
 500 007e 1A61     		str	r2, [r3, #16]
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 501              		.loc 1 645 3
 502 0080 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 21


 503 0082 1B68     		ldr	r3, [r3]
 504 0084 1969     		ldr	r1, [r3, #16]
 505 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 506 0088 FB68     		ldr	r3, [r7, #12]
 507 008a 1B68     		ldr	r3, [r3]
 508 008c 0A43     		orrs	r2, r2, r1
 509 008e 1A61     		str	r2, [r3, #16]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 510              		.loc 1 648 3
 511 0090 FB68     		ldr	r3, [r7, #12]
 512 0092 1B68     		ldr	r3, [r3]
 513 0094 DA68     		ldr	r2, [r3, #12]
 514 0096 FB68     		ldr	r3, [r7, #12]
 515 0098 1B68     		ldr	r3, [r3]
 516 009a 22F40062 		bic	r2, r2, #2048
 517 009e DA60     		str	r2, [r3, #12]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 518              		.loc 1 649 3
 519 00a0 FB68     		ldr	r3, [r7, #12]
 520 00a2 1B68     		ldr	r3, [r3]
 521 00a4 D968     		ldr	r1, [r3, #12]
 522 00a6 FB68     		ldr	r3, [r7, #12]
 523 00a8 1B68     		ldr	r3, [r3]
 524 00aa 7A68     		ldr	r2, [r7, #4]
 525 00ac 0A43     		orrs	r2, r2, r1
 526 00ae DA60     		str	r2, [r3, #12]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 527              		.loc 1 652 3
 528 00b0 FB68     		ldr	r3, [r7, #12]
 529 00b2 1B68     		ldr	r3, [r3]
 530 00b4 DA68     		ldr	r2, [r3, #12]
 531 00b6 FB68     		ldr	r3, [r7, #12]
 532 00b8 1B68     		ldr	r3, [r3]
 533 00ba 42F40052 		orr	r2, r2, #8192
 534 00be DA60     		str	r2, [r3, #12]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 535              		.loc 1 655 20
 536 00c0 FB68     		ldr	r3, [r7, #12]
 537 00c2 0022     		movs	r2, #0
 538 00c4 5A64     		str	r2, [r3, #68]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 539              		.loc 1 656 17
 540 00c6 FB68     		ldr	r3, [r7, #12]
 541 00c8 2022     		movs	r2, #32
 542 00ca 83F84120 		strb	r2, [r3, #65]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 543              		.loc 1 657 18
 544 00ce FB68     		ldr	r3, [r7, #12]
 545 00d0 2022     		movs	r2, #32
 546 00d2 83F84220 		strb	r2, [r3, #66]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 22


 547              		.loc 1 658 22
 548 00d6 FB68     		ldr	r3, [r7, #12]
 549 00d8 0022     		movs	r2, #0
 550 00da 5A63     		str	r2, [r3, #52]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 551              		.loc 1 660 10
 552 00dc 0023     		movs	r3, #0
 553              	.L15:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 554              		.loc 1 661 1
 555 00de 1846     		mov	r0, r3
 556 00e0 1037     		adds	r7, r7, #16
 557              	.LCFI18:
 558              		.cfi_def_cfa_offset 8
 559 00e2 BD46     		mov	sp, r7
 560              	.LCFI19:
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 00e4 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE137:
 567              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_UART_DeInit
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 574              	HAL_UART_DeInit:
 575              	.LFB138:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 576              		.loc 1 670 1
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI20:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 82B0     		sub	sp, sp, #8
 586              	.LCFI21:
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI22:
 590              		.cfi_def_cfa_register 7
 591 0006 7860     		str	r0, [r7, #4]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 23


 592              		.loc 1 672 6
 593 0008 7B68     		ldr	r3, [r7, #4]
 594 000a 002B     		cmp	r3, #0
 595 000c 01D1     		bne	.L18
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 596              		.loc 1 674 12
 597 000e 0123     		movs	r3, #1
 598 0010 24E0     		b	.L19
 599              	.L18:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 600              		.loc 1 680 17
 601 0012 7B68     		ldr	r3, [r7, #4]
 602 0014 2422     		movs	r2, #36
 603 0016 83F84120 		strb	r2, [r3, #65]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 604              		.loc 1 683 3
 605 001a 7B68     		ldr	r3, [r7, #4]
 606 001c 1B68     		ldr	r3, [r3]
 607 001e DA68     		ldr	r2, [r3, #12]
 608 0020 7B68     		ldr	r3, [r7, #4]
 609 0022 1B68     		ldr	r3, [r3]
 610 0024 22F40052 		bic	r2, r2, #8192
 611 0028 DA60     		str	r2, [r3, #12]
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 612              		.loc 1 694 3
 613 002a 7868     		ldr	r0, [r7, #4]
 614 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 615              		.loc 1 697 20
 616 0030 7B68     		ldr	r3, [r7, #4]
 617 0032 0022     		movs	r2, #0
 618 0034 5A64     		str	r2, [r3, #68]
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 619              		.loc 1 698 17
 620 0036 7B68     		ldr	r3, [r7, #4]
 621 0038 0022     		movs	r2, #0
 622 003a 83F84120 		strb	r2, [r3, #65]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 24


 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 623              		.loc 1 699 18
 624 003e 7B68     		ldr	r3, [r7, #4]
 625 0040 0022     		movs	r2, #0
 626 0042 83F84220 		strb	r2, [r3, #66]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 627              		.loc 1 700 24
 628 0046 7B68     		ldr	r3, [r7, #4]
 629 0048 0022     		movs	r2, #0
 630 004a 1A63     		str	r2, [r3, #48]
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 631              		.loc 1 701 22
 632 004c 7B68     		ldr	r3, [r7, #4]
 633 004e 0022     		movs	r2, #0
 634 0050 5A63     		str	r2, [r3, #52]
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 635              		.loc 1 704 3
 636 0052 7B68     		ldr	r3, [r7, #4]
 637 0054 0022     		movs	r2, #0
 638 0056 83F84020 		strb	r2, [r3, #64]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 639              		.loc 1 706 10
 640 005a 0023     		movs	r3, #0
 641              	.L19:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 642              		.loc 1 707 1
 643 005c 1846     		mov	r0, r3
 644 005e 0837     		adds	r7, r7, #8
 645              	.LCFI23:
 646              		.cfi_def_cfa_offset 8
 647 0060 BD46     		mov	sp, r7
 648              	.LCFI24:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 0062 80BD     		pop	{r7, pc}
 652              		.cfi_endproc
 653              	.LFE138:
 655              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 656              		.align	1
 657              		.weak	HAL_UART_MspInit
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	HAL_UART_MspInit:
 663              	.LFB139:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 25


 664              		.loc 1 716 1
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 8
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              	.LCFI25:
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 83B0     		sub	sp, sp, #12
 674              	.LCFI26:
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI27:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 680              		.loc 1 722 1
 681 0008 00BF     		nop
 682 000a 0C37     		adds	r7, r7, #12
 683              	.LCFI28:
 684              		.cfi_def_cfa_offset 4
 685 000c BD46     		mov	sp, r7
 686              	.LCFI29:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 000e 5DF8047B 		ldr	r7, [sp], #4
 690              	.LCFI30:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0012 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE139:
 697              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 698              		.align	1
 699              		.weak	HAL_UART_MspDeInit
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 704              	HAL_UART_MspDeInit:
 705              	.LFB140:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 706              		.loc 1 731 1
 707              		.cfi_startproc
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 26


 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              	.LCFI31:
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 83B0     		sub	sp, sp, #12
 716              	.LCFI32:
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              	.LCFI33:
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 722              		.loc 1 737 1
 723 0008 00BF     		nop
 724 000a 0C37     		adds	r7, r7, #12
 725              	.LCFI34:
 726              		.cfi_def_cfa_offset 4
 727 000c BD46     		mov	sp, r7
 728              	.LCFI35:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 000e 5DF8047B 		ldr	r7, [sp], #4
 732              	.LCFI36:
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 0012 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE140:
 739              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 740              		.align	1
 741              		.global	HAL_UART_Transmit
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 746              	HAL_UART_Transmit:
 747              	.LFB141:
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_MultiProcessor_Init() to register callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 27


 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 28


 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() to un-register callbacks for HAL_UART_MSPINIT
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 29


 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and HAL_UART_MSPDEINIT_CB_ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 30


 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 31


 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 32


1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 33


1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 748              		.loc 1 1136 1
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 32
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              	.LCFI37:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 8AB0     		sub	sp, sp, #40
 758              	.LCFI38:
 759              		.cfi_def_cfa_offset 48
 760 0004 02AF     		add	r7, sp, #8
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 34


 761              	.LCFI39:
 762              		.cfi_def_cfa 7, 40
 763 0006 F860     		str	r0, [r7, #12]
 764 0008 B960     		str	r1, [r7, #8]
 765 000a 3B60     		str	r3, [r7]
 766 000c 1346     		mov	r3, r2	@ movhi
 767 000e FB80     		strh	r3, [r7, #6]	@ movhi
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 768              		.loc 1 1139 12
 769 0010 0023     		movs	r3, #0
 770 0012 7B61     		str	r3, [r7, #20]
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 771              		.loc 1 1142 12
 772 0014 FB68     		ldr	r3, [r7, #12]
 773 0016 93F84130 		ldrb	r3, [r3, #65]
 774 001a DBB2     		uxtb	r3, r3
 775              		.loc 1 1142 6
 776 001c 202B     		cmp	r3, #32
 777 001e 75D1     		bne	.L23
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 778              		.loc 1 1144 8
 779 0020 BB68     		ldr	r3, [r7, #8]
 780 0022 002B     		cmp	r3, #0
 781 0024 02D0     		beq	.L24
 782              		.loc 1 1144 25 discriminator 1
 783 0026 FB88     		ldrh	r3, [r7, #6]
 784 0028 002B     		cmp	r3, #0
 785 002a 01D1     		bne	.L25
 786              	.L24:
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 787              		.loc 1 1146 15
 788 002c 0123     		movs	r3, #1
 789 002e 6EE0     		b	.L26
 790              	.L25:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 791              		.loc 1 1149 22
 792 0030 FB68     		ldr	r3, [r7, #12]
 793 0032 0022     		movs	r2, #0
 794 0034 5A64     		str	r2, [r3, #68]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 795              		.loc 1 1150 19
 796 0036 FB68     		ldr	r3, [r7, #12]
 797 0038 2122     		movs	r2, #33
 798 003a 83F84120 		strb	r2, [r3, #65]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 799              		.loc 1 1153 17
 800 003e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 35


 801 0042 7861     		str	r0, [r7, #20]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 802              		.loc 1 1155 23
 803 0044 FB68     		ldr	r3, [r7, #12]
 804 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 805 0048 9A84     		strh	r2, [r3, #36]	@ movhi
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 806              		.loc 1 1156 24
 807 004a FB68     		ldr	r3, [r7, #12]
 808 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 809 004e DA84     		strh	r2, [r3, #38]	@ movhi
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 810              		.loc 1 1159 21
 811 0050 FB68     		ldr	r3, [r7, #12]
 812 0052 9B68     		ldr	r3, [r3, #8]
 813              		.loc 1 1159 8
 814 0054 B3F5805F 		cmp	r3, #4096
 815 0058 08D1     		bne	.L27
 816              		.loc 1 1159 71 discriminator 1
 817 005a FB68     		ldr	r3, [r7, #12]
 818 005c 1B69     		ldr	r3, [r3, #16]
 819              		.loc 1 1159 56 discriminator 1
 820 005e 002B     		cmp	r3, #0
 821 0060 04D1     		bne	.L27
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 822              		.loc 1 1161 19
 823 0062 0023     		movs	r3, #0
 824 0064 FB61     		str	r3, [r7, #28]
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 825              		.loc 1 1162 19
 826 0066 BB68     		ldr	r3, [r7, #8]
 827 0068 BB61     		str	r3, [r7, #24]
 828 006a 03E0     		b	.L28
 829              	.L27:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 830              		.loc 1 1166 19
 831 006c BB68     		ldr	r3, [r7, #8]
 832 006e FB61     		str	r3, [r7, #28]
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 833              		.loc 1 1167 19
 834 0070 0023     		movs	r3, #0
 835 0072 BB61     		str	r3, [r7, #24]
 836              	.L28:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 837              		.loc 1 1170 11
 838 0074 2EE0     		b	.L29
 839              	.L33:
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 36


1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 840              		.loc 1 1172 11
 841 0076 3B68     		ldr	r3, [r7]
 842 0078 0093     		str	r3, [sp]
 843 007a 7B69     		ldr	r3, [r7, #20]
 844 007c 0022     		movs	r2, #0
 845 007e 8021     		movs	r1, #128
 846 0080 F868     		ldr	r0, [r7, #12]
 847 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 848 0086 0346     		mov	r3, r0
 849              		.loc 1 1172 10 discriminator 1
 850 0088 002B     		cmp	r3, #0
 851 008a 05D0     		beq	.L30
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 852              		.loc 1 1174 23
 853 008c FB68     		ldr	r3, [r7, #12]
 854 008e 2022     		movs	r2, #32
 855 0090 83F84120 		strb	r2, [r3, #65]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 856              		.loc 1 1176 16
 857 0094 0323     		movs	r3, #3
 858 0096 3AE0     		b	.L26
 859              	.L30:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 860              		.loc 1 1178 10
 861 0098 FB69     		ldr	r3, [r7, #28]
 862 009a 002B     		cmp	r3, #0
 863 009c 0BD1     		bne	.L31
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 864              		.loc 1 1180 42
 865 009e BB69     		ldr	r3, [r7, #24]
 866 00a0 1B88     		ldrh	r3, [r3]
 867              		.loc 1 1180 31
 868 00a2 1A46     		mov	r2, r3
 869              		.loc 1 1180 14
 870 00a4 FB68     		ldr	r3, [r7, #12]
 871 00a6 1B68     		ldr	r3, [r3]
 872              		.loc 1 1180 31
 873 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 874              		.loc 1 1180 29
 875 00ac 5A60     		str	r2, [r3, #4]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 876              		.loc 1 1181 20
 877 00ae BB69     		ldr	r3, [r7, #24]
 878 00b0 0233     		adds	r3, r3, #2
 879 00b2 BB61     		str	r3, [r7, #24]
 880 00b4 07E0     		b	.L32
 881              	.L31:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 882              		.loc 1 1185 41
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 37


 883 00b6 FB69     		ldr	r3, [r7, #28]
 884 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 885              		.loc 1 1185 14
 886 00ba FB68     		ldr	r3, [r7, #12]
 887 00bc 1B68     		ldr	r3, [r3]
 888              		.loc 1 1185 29
 889 00be 5A60     		str	r2, [r3, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 890              		.loc 1 1186 19
 891 00c0 FB69     		ldr	r3, [r7, #28]
 892 00c2 0133     		adds	r3, r3, #1
 893 00c4 FB61     		str	r3, [r7, #28]
 894              	.L32:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 895              		.loc 1 1188 12
 896 00c6 FB68     		ldr	r3, [r7, #12]
 897 00c8 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 898 00ca 9BB2     		uxth	r3, r3
 899              		.loc 1 1188 25
 900 00cc 013B     		subs	r3, r3, #1
 901 00ce 9AB2     		uxth	r2, r3
 902 00d0 FB68     		ldr	r3, [r7, #12]
 903 00d2 DA84     		strh	r2, [r3, #38]	@ movhi
 904              	.L29:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 905              		.loc 1 1170 17
 906 00d4 FB68     		ldr	r3, [r7, #12]
 907 00d6 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 908 00d8 9BB2     		uxth	r3, r3
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 909              		.loc 1 1170 31
 910 00da 002B     		cmp	r3, #0
 911 00dc CBD1     		bne	.L33
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 912              		.loc 1 1191 9
 913 00de 3B68     		ldr	r3, [r7]
 914 00e0 0093     		str	r3, [sp]
 915 00e2 7B69     		ldr	r3, [r7, #20]
 916 00e4 0022     		movs	r2, #0
 917 00e6 4021     		movs	r1, #64
 918 00e8 F868     		ldr	r0, [r7, #12]
 919 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 920 00ee 0346     		mov	r3, r0
 921              		.loc 1 1191 8 discriminator 1
 922 00f0 002B     		cmp	r3, #0
 923 00f2 05D0     		beq	.L34
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 924              		.loc 1 1193 21
 925 00f4 FB68     		ldr	r3, [r7, #12]
 926 00f6 2022     		movs	r2, #32
 927 00f8 83F84120 		strb	r2, [r3, #65]
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 38


 928              		.loc 1 1195 14
 929 00fc 0323     		movs	r3, #3
 930 00fe 06E0     		b	.L26
 931              	.L34:
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 932              		.loc 1 1199 19
 933 0100 FB68     		ldr	r3, [r7, #12]
 934 0102 2022     		movs	r2, #32
 935 0104 83F84120 		strb	r2, [r3, #65]
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 936              		.loc 1 1201 12
 937 0108 0023     		movs	r3, #0
 938 010a 00E0     		b	.L26
 939              	.L23:
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 940              		.loc 1 1205 12
 941 010c 0223     		movs	r3, #2
 942              	.L26:
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 943              		.loc 1 1207 1
 944 010e 1846     		mov	r0, r3
 945 0110 2037     		adds	r7, r7, #32
 946              	.LCFI40:
 947              		.cfi_def_cfa_offset 8
 948 0112 BD46     		mov	sp, r7
 949              	.LCFI41:
 950              		.cfi_def_cfa_register 13
 951              		@ sp needed
 952 0114 80BD     		pop	{r7, pc}
 953              		.cfi_endproc
 954              	.LFE141:
 956              		.section	.text.HAL_UART_Receive,"ax",%progbits
 957              		.align	1
 958              		.global	HAL_UART_Receive
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	HAL_UART_Receive:
 964              	.LFB142:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 39


1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 965              		.loc 1 1222 1
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 32
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              	.LCFI42:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 8AB0     		sub	sp, sp, #40
 975              	.LCFI43:
 976              		.cfi_def_cfa_offset 48
 977 0004 02AF     		add	r7, sp, #8
 978              	.LCFI44:
 979              		.cfi_def_cfa 7, 40
 980 0006 F860     		str	r0, [r7, #12]
 981 0008 B960     		str	r1, [r7, #8]
 982 000a 3B60     		str	r3, [r7]
 983 000c 1346     		mov	r3, r2	@ movhi
 984 000e FB80     		strh	r3, [r7, #6]	@ movhi
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 985              		.loc 1 1225 12
 986 0010 0023     		movs	r3, #0
 987 0012 7B61     		str	r3, [r7, #20]
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 988              		.loc 1 1228 12
 989 0014 FB68     		ldr	r3, [r7, #12]
 990 0016 93F84230 		ldrb	r3, [r3, #66]
 991 001a DBB2     		uxtb	r3, r3
 992              		.loc 1 1228 6
 993 001c 202B     		cmp	r3, #32
 994 001e 40F08180 		bne	.L36
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 995              		.loc 1 1230 8
 996 0022 BB68     		ldr	r3, [r7, #8]
 997 0024 002B     		cmp	r3, #0
 998 0026 02D0     		beq	.L37
 999              		.loc 1 1230 25 discriminator 1
 1000 0028 FB88     		ldrh	r3, [r7, #6]
 1001 002a 002B     		cmp	r3, #0
 1002 002c 01D1     		bne	.L38
 1003              	.L37:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1004              		.loc 1 1232 15
 1005 002e 0123     		movs	r3, #1
 1006 0030 79E0     		b	.L39
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 40


 1007              	.L38:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1008              		.loc 1 1235 22
 1009 0032 FB68     		ldr	r3, [r7, #12]
 1010 0034 0022     		movs	r2, #0
 1011 0036 5A64     		str	r2, [r3, #68]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1012              		.loc 1 1236 20
 1013 0038 FB68     		ldr	r3, [r7, #12]
 1014 003a 2222     		movs	r2, #34
 1015 003c 83F84220 		strb	r2, [r3, #66]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1016              		.loc 1 1237 26
 1017 0040 FB68     		ldr	r3, [r7, #12]
 1018 0042 0022     		movs	r2, #0
 1019 0044 1A63     		str	r2, [r3, #48]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1020              		.loc 1 1240 17
 1021 0046 FFF7FEFF 		bl	HAL_GetTick
 1022 004a 7861     		str	r0, [r7, #20]
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1023              		.loc 1 1242 23
 1024 004c FB68     		ldr	r3, [r7, #12]
 1025 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1026 0050 9A85     		strh	r2, [r3, #44]	@ movhi
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1027              		.loc 1 1243 24
 1028 0052 FB68     		ldr	r3, [r7, #12]
 1029 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1030 0056 DA85     		strh	r2, [r3, #46]	@ movhi
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1031              		.loc 1 1246 21
 1032 0058 FB68     		ldr	r3, [r7, #12]
 1033 005a 9B68     		ldr	r3, [r3, #8]
 1034              		.loc 1 1246 8
 1035 005c B3F5805F 		cmp	r3, #4096
 1036 0060 08D1     		bne	.L40
 1037              		.loc 1 1246 71 discriminator 1
 1038 0062 FB68     		ldr	r3, [r7, #12]
 1039 0064 1B69     		ldr	r3, [r3, #16]
 1040              		.loc 1 1246 56 discriminator 1
 1041 0066 002B     		cmp	r3, #0
 1042 0068 04D1     		bne	.L40
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 1043              		.loc 1 1248 19
 1044 006a 0023     		movs	r3, #0
 1045 006c FB61     		str	r3, [r7, #28]
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1046              		.loc 1 1249 19
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 41


 1047 006e BB68     		ldr	r3, [r7, #8]
 1048 0070 BB61     		str	r3, [r7, #24]
 1049 0072 03E0     		b	.L41
 1050              	.L40:
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 1051              		.loc 1 1253 19
 1052 0074 BB68     		ldr	r3, [r7, #8]
 1053 0076 FB61     		str	r3, [r7, #28]
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 1054              		.loc 1 1254 19
 1055 0078 0023     		movs	r3, #0
 1056 007a BB61     		str	r3, [r7, #24]
 1057              	.L41:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1058              		.loc 1 1258 11
 1059 007c 47E0     		b	.L42
 1060              	.L49:
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1061              		.loc 1 1260 11
 1062 007e 3B68     		ldr	r3, [r7]
 1063 0080 0093     		str	r3, [sp]
 1064 0082 7B69     		ldr	r3, [r7, #20]
 1065 0084 0022     		movs	r2, #0
 1066 0086 2021     		movs	r1, #32
 1067 0088 F868     		ldr	r0, [r7, #12]
 1068 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1069 008e 0346     		mov	r3, r0
 1070              		.loc 1 1260 10 discriminator 1
 1071 0090 002B     		cmp	r3, #0
 1072 0092 05D0     		beq	.L43
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1073              		.loc 1 1262 24
 1074 0094 FB68     		ldr	r3, [r7, #12]
 1075 0096 2022     		movs	r2, #32
 1076 0098 83F84220 		strb	r2, [r3, #66]
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1077              		.loc 1 1264 16
 1078 009c 0323     		movs	r3, #3
 1079 009e 42E0     		b	.L39
 1080              	.L43:
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1081              		.loc 1 1266 10
 1082 00a0 FB69     		ldr	r3, [r7, #28]
 1083 00a2 002B     		cmp	r3, #0
 1084 00a4 0CD1     		bne	.L44
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 42


 1085              		.loc 1 1268 40
 1086 00a6 FB68     		ldr	r3, [r7, #12]
 1087 00a8 1B68     		ldr	r3, [r3]
 1088              		.loc 1 1268 50
 1089 00aa 5B68     		ldr	r3, [r3, #4]
 1090              		.loc 1 1268 24
 1091 00ac 9BB2     		uxth	r3, r3
 1092 00ae C3F30803 		ubfx	r3, r3, #0, #9
 1093 00b2 9AB2     		uxth	r2, r3
 1094              		.loc 1 1268 22
 1095 00b4 BB69     		ldr	r3, [r7, #24]
 1096 00b6 1A80     		strh	r2, [r3]	@ movhi
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1097              		.loc 1 1269 20
 1098 00b8 BB69     		ldr	r3, [r7, #24]
 1099 00ba 0233     		adds	r3, r3, #2
 1100 00bc BB61     		str	r3, [r7, #24]
 1101 00be 1FE0     		b	.L45
 1102              	.L44:
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1103              		.loc 1 1273 25
 1104 00c0 FB68     		ldr	r3, [r7, #12]
 1105 00c2 9B68     		ldr	r3, [r3, #8]
 1106              		.loc 1 1273 12
 1107 00c4 B3F5805F 		cmp	r3, #4096
 1108 00c8 07D0     		beq	.L46
 1109              		.loc 1 1273 76 discriminator 1
 1110 00ca FB68     		ldr	r3, [r7, #12]
 1111 00cc 9B68     		ldr	r3, [r3, #8]
 1112              		.loc 1 1273 60 discriminator 1
 1113 00ce 002B     		cmp	r3, #0
 1114 00d0 0AD1     		bne	.L47
 1115              		.loc 1 1273 126 discriminator 2
 1116 00d2 FB68     		ldr	r3, [r7, #12]
 1117 00d4 1B69     		ldr	r3, [r3, #16]
 1118              		.loc 1 1273 111 discriminator 2
 1119 00d6 002B     		cmp	r3, #0
 1120 00d8 06D1     		bne	.L47
 1121              	.L46:
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1122              		.loc 1 1275 40
 1123 00da FB68     		ldr	r3, [r7, #12]
 1124 00dc 1B68     		ldr	r3, [r3]
 1125              		.loc 1 1275 50
 1126 00de 5B68     		ldr	r3, [r3, #4]
 1127              		.loc 1 1275 25
 1128 00e0 DAB2     		uxtb	r2, r3
 1129              		.loc 1 1275 23
 1130 00e2 FB69     		ldr	r3, [r7, #28]
 1131 00e4 1A70     		strb	r2, [r3]
 1132 00e6 08E0     		b	.L48
 1133              	.L47:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 43


1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1134              		.loc 1 1279 40
 1135 00e8 FB68     		ldr	r3, [r7, #12]
 1136 00ea 1B68     		ldr	r3, [r3]
 1137              		.loc 1 1279 50
 1138 00ec 5B68     		ldr	r3, [r3, #4]
 1139              		.loc 1 1279 25
 1140 00ee DBB2     		uxtb	r3, r3
 1141 00f0 03F07F03 		and	r3, r3, #127
 1142 00f4 DAB2     		uxtb	r2, r3
 1143              		.loc 1 1279 23
 1144 00f6 FB69     		ldr	r3, [r7, #28]
 1145 00f8 1A70     		strb	r2, [r3]
 1146              	.L48:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1147              		.loc 1 1281 19
 1148 00fa FB69     		ldr	r3, [r7, #28]
 1149 00fc 0133     		adds	r3, r3, #1
 1150 00fe FB61     		str	r3, [r7, #28]
 1151              	.L45:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1152              		.loc 1 1283 12
 1153 0100 FB68     		ldr	r3, [r7, #12]
 1154 0102 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1155 0104 9BB2     		uxth	r3, r3
 1156              		.loc 1 1283 25
 1157 0106 013B     		subs	r3, r3, #1
 1158 0108 9AB2     		uxth	r2, r3
 1159 010a FB68     		ldr	r3, [r7, #12]
 1160 010c DA85     		strh	r2, [r3, #46]	@ movhi
 1161              	.L42:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1162              		.loc 1 1258 17
 1163 010e FB68     		ldr	r3, [r7, #12]
 1164 0110 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1165 0112 9BB2     		uxth	r3, r3
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1166              		.loc 1 1258 31
 1167 0114 002B     		cmp	r3, #0
 1168 0116 B2D1     		bne	.L49
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1169              		.loc 1 1287 20
 1170 0118 FB68     		ldr	r3, [r7, #12]
 1171 011a 2022     		movs	r2, #32
 1172 011c 83F84220 		strb	r2, [r3, #66]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1173              		.loc 1 1289 12
 1174 0120 0023     		movs	r3, #0
 1175 0122 00E0     		b	.L39
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 44


 1176              	.L36:
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1177              		.loc 1 1293 12
 1178 0124 0223     		movs	r3, #2
 1179              	.L39:
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1180              		.loc 1 1295 1
 1181 0126 1846     		mov	r0, r3
 1182 0128 2037     		adds	r7, r7, #32
 1183              	.LCFI45:
 1184              		.cfi_def_cfa_offset 8
 1185 012a BD46     		mov	sp, r7
 1186              	.LCFI46:
 1187              		.cfi_def_cfa_register 13
 1188              		@ sp needed
 1189 012c 80BD     		pop	{r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE142:
 1193              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1194              		.align	1
 1195              		.global	HAL_UART_Transmit_IT
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1200              	HAL_UART_Transmit_IT:
 1201              	.LFB143:
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1202              		.loc 1 1309 1
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 16
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207 0000 80B4     		push	{r7}
 1208              	.LCFI47:
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 7, -4
 1211 0002 85B0     		sub	sp, sp, #20
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_offset 24
 1214 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 45


 1215              	.LCFI49:
 1216              		.cfi_def_cfa_register 7
 1217 0006 F860     		str	r0, [r7, #12]
 1218 0008 B960     		str	r1, [r7, #8]
 1219 000a 1346     		mov	r3, r2
 1220 000c FB80     		strh	r3, [r7, #6]	@ movhi
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1221              		.loc 1 1311 12
 1222 000e FB68     		ldr	r3, [r7, #12]
 1223 0010 93F84130 		ldrb	r3, [r3, #65]
 1224 0014 DBB2     		uxtb	r3, r3
 1225              		.loc 1 1311 6
 1226 0016 202B     		cmp	r3, #32
 1227 0018 21D1     		bne	.L51
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1228              		.loc 1 1313 8
 1229 001a BB68     		ldr	r3, [r7, #8]
 1230 001c 002B     		cmp	r3, #0
 1231 001e 02D0     		beq	.L52
 1232              		.loc 1 1313 25 discriminator 1
 1233 0020 FB88     		ldrh	r3, [r7, #6]
 1234 0022 002B     		cmp	r3, #0
 1235 0024 01D1     		bne	.L53
 1236              	.L52:
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1237              		.loc 1 1315 14
 1238 0026 0123     		movs	r3, #1
 1239 0028 1AE0     		b	.L54
 1240              	.L53:
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1241              		.loc 1 1318 23
 1242 002a FB68     		ldr	r3, [r7, #12]
 1243 002c BA68     		ldr	r2, [r7, #8]
 1244 002e 1A62     		str	r2, [r3, #32]
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1245              		.loc 1 1319 23
 1246 0030 FB68     		ldr	r3, [r7, #12]
 1247 0032 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1248 0034 9A84     		strh	r2, [r3, #36]	@ movhi
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1249              		.loc 1 1320 24
 1250 0036 FB68     		ldr	r3, [r7, #12]
 1251 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1252 003a DA84     		strh	r2, [r3, #38]	@ movhi
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1253              		.loc 1 1322 22
 1254 003c FB68     		ldr	r3, [r7, #12]
 1255 003e 0022     		movs	r2, #0
 1256 0040 5A64     		str	r2, [r3, #68]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1257              		.loc 1 1323 19
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 46


 1258 0042 FB68     		ldr	r3, [r7, #12]
 1259 0044 2122     		movs	r2, #33
 1260 0046 83F84120 		strb	r2, [r3, #65]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1261              		.loc 1 1326 5
 1262 004a FB68     		ldr	r3, [r7, #12]
 1263 004c 1B68     		ldr	r3, [r3]
 1264 004e DA68     		ldr	r2, [r3, #12]
 1265 0050 FB68     		ldr	r3, [r7, #12]
 1266 0052 1B68     		ldr	r3, [r3]
 1267 0054 42F08002 		orr	r2, r2, #128
 1268 0058 DA60     		str	r2, [r3, #12]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1269              		.loc 1 1328 12
 1270 005a 0023     		movs	r3, #0
 1271 005c 00E0     		b	.L54
 1272              	.L51:
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1273              		.loc 1 1332 12
 1274 005e 0223     		movs	r3, #2
 1275              	.L54:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1276              		.loc 1 1334 1
 1277 0060 1846     		mov	r0, r3
 1278 0062 1437     		adds	r7, r7, #20
 1279              	.LCFI50:
 1280              		.cfi_def_cfa_offset 4
 1281 0064 BD46     		mov	sp, r7
 1282              	.LCFI51:
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 0066 5DF8047B 		ldr	r7, [sp], #4
 1286              	.LCFI52:
 1287              		.cfi_restore 7
 1288              		.cfi_def_cfa_offset 0
 1289 006a 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE143:
 1293              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1294              		.align	1
 1295              		.global	HAL_UART_Receive_IT
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	HAL_UART_Receive_IT:
 1301              	.LFB144:
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 47


1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1302              		.loc 1 1348 1
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 16
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306 0000 80B5     		push	{r7, lr}
 1307              	.LCFI53:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 84B0     		sub	sp, sp, #16
 1312              	.LCFI54:
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              	.LCFI55:
 1316              		.cfi_def_cfa_register 7
 1317 0006 F860     		str	r0, [r7, #12]
 1318 0008 B960     		str	r1, [r7, #8]
 1319 000a 1346     		mov	r3, r2
 1320 000c FB80     		strh	r3, [r7, #6]	@ movhi
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1321              		.loc 1 1350 12
 1322 000e FB68     		ldr	r3, [r7, #12]
 1323 0010 93F84230 		ldrb	r3, [r3, #66]
 1324 0014 DBB2     		uxtb	r3, r3
 1325              		.loc 1 1350 6
 1326 0016 202B     		cmp	r3, #32
 1327 0018 12D1     		bne	.L56
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1328              		.loc 1 1352 8
 1329 001a BB68     		ldr	r3, [r7, #8]
 1330 001c 002B     		cmp	r3, #0
 1331 001e 02D0     		beq	.L57
 1332              		.loc 1 1352 25 discriminator 1
 1333 0020 FB88     		ldrh	r3, [r7, #6]
 1334 0022 002B     		cmp	r3, #0
 1335 0024 01D1     		bne	.L58
 1336              	.L57:
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1337              		.loc 1 1354 14
 1338 0026 0123     		movs	r3, #1
 1339 0028 0BE0     		b	.L59
 1340              	.L58:
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 48


1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1341              		.loc 1 1358 26
 1342 002a FB68     		ldr	r3, [r7, #12]
 1343 002c 0022     		movs	r2, #0
 1344 002e 1A63     		str	r2, [r3, #48]
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1345              		.loc 1 1360 13
 1346 0030 FB88     		ldrh	r3, [r7, #6]
 1347 0032 1A46     		mov	r2, r3
 1348 0034 B968     		ldr	r1, [r7, #8]
 1349 0036 F868     		ldr	r0, [r7, #12]
 1350 0038 FFF7FEFF 		bl	UART_Start_Receive_IT
 1351 003c 0346     		mov	r3, r0
 1352 003e 00E0     		b	.L59
 1353              	.L56:
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1354              		.loc 1 1364 12
 1355 0040 0223     		movs	r3, #2
 1356              	.L59:
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1357              		.loc 1 1366 1
 1358 0042 1846     		mov	r0, r3
 1359 0044 1037     		adds	r7, r7, #16
 1360              	.LCFI56:
 1361              		.cfi_def_cfa_offset 8
 1362 0046 BD46     		mov	sp, r7
 1363              	.LCFI57:
 1364              		.cfi_def_cfa_register 13
 1365              		@ sp needed
 1366 0048 80BD     		pop	{r7, pc}
 1367              		.cfi_endproc
 1368              	.LFE144:
 1370              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1371              		.align	1
 1372              		.global	HAL_UART_Transmit_DMA
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1377              	HAL_UART_Transmit_DMA:
 1378              	.LFB145:
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 49


1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1379              		.loc 1 1380 1
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 48
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383 0000 80B5     		push	{r7, lr}
 1384              	.LCFI58:
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 8CB0     		sub	sp, sp, #48
 1389              	.LCFI59:
 1390              		.cfi_def_cfa_offset 56
 1391 0004 00AF     		add	r7, sp, #0
 1392              	.LCFI60:
 1393              		.cfi_def_cfa_register 7
 1394 0006 F860     		str	r0, [r7, #12]
 1395 0008 B960     		str	r1, [r7, #8]
 1396 000a 1346     		mov	r3, r2
 1397 000c FB80     		strh	r3, [r7, #6]	@ movhi
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1398              		.loc 1 1384 12
 1399 000e FB68     		ldr	r3, [r7, #12]
 1400 0010 93F84130 		ldrb	r3, [r3, #65]
 1401 0014 DBB2     		uxtb	r3, r3
 1402              		.loc 1 1384 6
 1403 0016 202B     		cmp	r3, #32
 1404 0018 56D1     		bne	.L61
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1405              		.loc 1 1386 16
 1406 001a BB68     		ldr	r3, [r7, #8]
 1407              		.loc 1 1386 8
 1408 001c 002B     		cmp	r3, #0
 1409 001e 02D0     		beq	.L62
 1410              		.loc 1 1386 25 discriminator 1
 1411 0020 FB88     		ldrh	r3, [r7, #6]
 1412 0022 002B     		cmp	r3, #0
 1413 0024 01D1     		bne	.L63
 1414              	.L62:
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1415              		.loc 1 1388 14
 1416 0026 0123     		movs	r3, #1
 1417 0028 4FE0     		b	.L64
 1418              	.L63:
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1419              		.loc 1 1391 23
 1420 002a BA68     		ldr	r2, [r7, #8]
 1421 002c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 50


 1422 002e 1A62     		str	r2, [r3, #32]
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1423              		.loc 1 1392 23
 1424 0030 FB68     		ldr	r3, [r7, #12]
 1425 0032 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1426 0034 9A84     		strh	r2, [r3, #36]	@ movhi
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1427              		.loc 1 1393 24
 1428 0036 FB68     		ldr	r3, [r7, #12]
 1429 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1430 003a DA84     		strh	r2, [r3, #38]	@ movhi
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1431              		.loc 1 1395 22
 1432 003c FB68     		ldr	r3, [r7, #12]
 1433 003e 0022     		movs	r2, #0
 1434 0040 5A64     		str	r2, [r3, #68]
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1435              		.loc 1 1396 19
 1436 0042 FB68     		ldr	r3, [r7, #12]
 1437 0044 2122     		movs	r2, #33
 1438 0046 83F84120 		strb	r2, [r3, #65]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1439              		.loc 1 1399 10
 1440 004a FB68     		ldr	r3, [r7, #12]
 1441 004c 9B6B     		ldr	r3, [r3, #56]
 1442              		.loc 1 1399 37
 1443 004e 214A     		ldr	r2, .L68
 1444 0050 DA63     		str	r2, [r3, #60]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1445              		.loc 1 1402 10
 1446 0052 FB68     		ldr	r3, [r7, #12]
 1447 0054 9B6B     		ldr	r3, [r3, #56]
 1448              		.loc 1 1402 41
 1449 0056 204A     		ldr	r2, .L68+4
 1450 0058 1A64     		str	r2, [r3, #64]
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1451              		.loc 1 1405 10
 1452 005a FB68     		ldr	r3, [r7, #12]
 1453 005c 9B6B     		ldr	r3, [r3, #56]
 1454              		.loc 1 1405 38
 1455 005e 1F4A     		ldr	r2, .L68+8
 1456 0060 DA64     		str	r2, [r3, #76]
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1457              		.loc 1 1408 10
 1458 0062 FB68     		ldr	r3, [r7, #12]
 1459 0064 9B6B     		ldr	r3, [r3, #56]
 1460              		.loc 1 1408 38
 1461 0066 0022     		movs	r2, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 51


 1462 0068 1A65     		str	r2, [r3, #80]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
 1463              		.loc 1 1411 9
 1464 006a 07F10803 		add	r3, r7, #8
 1465 006e FB62     		str	r3, [r7, #44]
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1466              		.loc 1 1412 5
 1467 0070 FB68     		ldr	r3, [r7, #12]
 1468 0072 986B     		ldr	r0, [r3, #56]
 1469 0074 FB6A     		ldr	r3, [r7, #44]
 1470 0076 1968     		ldr	r1, [r3]
 1471              		.loc 1 1412 77
 1472 0078 FB68     		ldr	r3, [r7, #12]
 1473 007a 1B68     		ldr	r3, [r3]
 1474              		.loc 1 1412 71
 1475 007c 0433     		adds	r3, r3, #4
 1476              		.loc 1 1412 5
 1477 007e 1A46     		mov	r2, r3
 1478 0080 FB88     		ldrh	r3, [r7, #6]
 1479 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1480              		.loc 1 1415 5
 1481 0086 FB68     		ldr	r3, [r7, #12]
 1482 0088 1B68     		ldr	r3, [r3]
 1483 008a 6FF04002 		mvn	r2, #64
 1484 008e 1A60     		str	r2, [r3]
 1485              	.L67:
 1486              	.LBB310:
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1487              		.loc 1 1419 5 discriminator 1
 1488 0090 FB68     		ldr	r3, [r7, #12]
 1489 0092 1B68     		ldr	r3, [r3]
 1490 0094 1433     		adds	r3, r3, #20
 1491 0096 BB61     		str	r3, [r7, #24]
 1492              	.LBB311:
 1493              	.LBB312:
 1494              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 52


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 53


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 54


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 55


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 56


 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 57


 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 58


 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 59


 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 60


 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1495              		.loc 2 480 4
 1496 0098 BB69     		ldr	r3, [r7, #24]
 1497              		.syntax unified
 1498              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1499 009a 53E8003F 		ldrex r3, [r3]
 1500              	@ 0 "" 2
 1501              		.thumb
 1502              		.syntax unified
 1503 009e 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1504              		.loc 2 481 10
 1505 00a0 7B69     		ldr	r3, [r7, #20]
 1506              	.LBE312:
 1507              	.LBE311:
 1508              		.loc 1 1419 5 discriminator 1
 1509 00a2 43F08003 		orr	r3, r3, #128
 1510 00a6 BB62     		str	r3, [r7, #40]
 1511 00a8 FB68     		ldr	r3, [r7, #12]
 1512 00aa 1B68     		ldr	r3, [r3]
 1513 00ac 1433     		adds	r3, r3, #20
 1514 00ae BA6A     		ldr	r2, [r7, #40]
 1515 00b0 7A62     		str	r2, [r7, #36]
 1516 00b2 3B62     		str	r3, [r7, #32]
 1517              	.LBB313:
 1518              	.LBB314:
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 61


 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1519              		.loc 2 531 4
 1520 00b4 396A     		ldr	r1, [r7, #32]
 1521 00b6 7A6A     		ldr	r2, [r7, #36]
 1522              		.syntax unified
 1523              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1524 00b8 41E80023 		strex r3, r2, [r1]
 1525              	@ 0 "" 2
 1526              		.thumb
 1527              		.syntax unified
 1528 00bc FB61     		str	r3, [r7, #28]
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1529              		.loc 2 532 10
 1530 00be FB69     		ldr	r3, [r7, #28]
 1531              	.LBE314:
 1532              	.LBE313:
 1533              		.loc 1 1419 5 discriminator 1
 1534 00c0 002B     		cmp	r3, #0
 1535 00c2 E5D1     		bne	.L67
 1536              	.LBE310:
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1537              		.loc 1 1421 12
 1538 00c4 0023     		movs	r3, #0
 1539 00c6 00E0     		b	.L64
 1540              	.L61:
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 62


1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1541              		.loc 1 1425 12
 1542 00c8 0223     		movs	r3, #2
 1543              	.L64:
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1544              		.loc 1 1427 1
 1545 00ca 1846     		mov	r0, r3
 1546 00cc 3037     		adds	r7, r7, #48
 1547              	.LCFI61:
 1548              		.cfi_def_cfa_offset 8
 1549 00ce BD46     		mov	sp, r7
 1550              	.LCFI62:
 1551              		.cfi_def_cfa_register 13
 1552              		@ sp needed
 1553 00d0 80BD     		pop	{r7, pc}
 1554              	.L69:
 1555 00d2 00BF     		.align	2
 1556              	.L68:
 1557 00d4 00000000 		.word	UART_DMATransmitCplt
 1558 00d8 00000000 		.word	UART_DMATxHalfCplt
 1559 00dc 00000000 		.word	UART_DMAError
 1560              		.cfi_endproc
 1561              	.LFE145:
 1563              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1564              		.align	1
 1565              		.global	HAL_UART_Receive_DMA
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1570              	HAL_UART_Receive_DMA:
 1571              	.LFB146:
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1572              		.loc 1 1442 1
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 16
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576 0000 80B5     		push	{r7, lr}
 1577              	.LCFI63:
 1578              		.cfi_def_cfa_offset 8
 1579              		.cfi_offset 7, -8
 1580              		.cfi_offset 14, -4
 1581 0002 84B0     		sub	sp, sp, #16
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 63


 1582              	.LCFI64:
 1583              		.cfi_def_cfa_offset 24
 1584 0004 00AF     		add	r7, sp, #0
 1585              	.LCFI65:
 1586              		.cfi_def_cfa_register 7
 1587 0006 F860     		str	r0, [r7, #12]
 1588 0008 B960     		str	r1, [r7, #8]
 1589 000a 1346     		mov	r3, r2
 1590 000c FB80     		strh	r3, [r7, #6]	@ movhi
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1591              		.loc 1 1444 12
 1592 000e FB68     		ldr	r3, [r7, #12]
 1593 0010 93F84230 		ldrb	r3, [r3, #66]
 1594 0014 DBB2     		uxtb	r3, r3
 1595              		.loc 1 1444 6
 1596 0016 202B     		cmp	r3, #32
 1597 0018 12D1     		bne	.L71
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1598              		.loc 1 1446 8
 1599 001a BB68     		ldr	r3, [r7, #8]
 1600 001c 002B     		cmp	r3, #0
 1601 001e 02D0     		beq	.L72
 1602              		.loc 1 1446 25 discriminator 1
 1603 0020 FB88     		ldrh	r3, [r7, #6]
 1604 0022 002B     		cmp	r3, #0
 1605 0024 01D1     		bne	.L73
 1606              	.L72:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1607              		.loc 1 1448 14
 1608 0026 0123     		movs	r3, #1
 1609 0028 0BE0     		b	.L74
 1610              	.L73:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1611              		.loc 1 1452 26
 1612 002a FB68     		ldr	r3, [r7, #12]
 1613 002c 0022     		movs	r2, #0
 1614 002e 1A63     		str	r2, [r3, #48]
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1615              		.loc 1 1454 13
 1616 0030 FB88     		ldrh	r3, [r7, #6]
 1617 0032 1A46     		mov	r2, r3
 1618 0034 B968     		ldr	r1, [r7, #8]
 1619 0036 F868     		ldr	r0, [r7, #12]
 1620 0038 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1621 003c 0346     		mov	r3, r0
 1622 003e 00E0     		b	.L74
 1623              	.L71:
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 64


1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1624              		.loc 1 1458 12
 1625 0040 0223     		movs	r3, #2
 1626              	.L74:
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1627              		.loc 1 1460 1
 1628 0042 1846     		mov	r0, r3
 1629 0044 1037     		adds	r7, r7, #16
 1630              	.LCFI66:
 1631              		.cfi_def_cfa_offset 8
 1632 0046 BD46     		mov	sp, r7
 1633              	.LCFI67:
 1634              		.cfi_def_cfa_register 13
 1635              		@ sp needed
 1636 0048 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
 1638              	.LFE146:
 1640              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1641              		.align	1
 1642              		.global	HAL_UART_DMAPause
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1647              	HAL_UART_DMAPause:
 1648              	.LFB147:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1649              		.loc 1 1469 1
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 112
 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 1654 0000 80B4     		push	{r7}
 1655              	.LCFI68:
 1656              		.cfi_def_cfa_offset 4
 1657              		.cfi_offset 7, -4
 1658 0002 9DB0     		sub	sp, sp, #116
 1659              	.LCFI69:
 1660              		.cfi_def_cfa_offset 120
 1661 0004 00AF     		add	r7, sp, #0
 1662              	.LCFI70:
 1663              		.cfi_def_cfa_register 7
 1664 0006 7860     		str	r0, [r7, #4]
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1665              		.loc 1 1470 12
 1666 0008 0023     		movs	r3, #0
 1667 000a FB66     		str	r3, [r7, #108]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 65


 1668              		.loc 1 1472 16
 1669 000c 7B68     		ldr	r3, [r7, #4]
 1670 000e 1B68     		ldr	r3, [r3]
 1671 0010 5B69     		ldr	r3, [r3, #20]
 1672 0012 03F08003 		and	r3, r3, #128
 1673 0016 802B     		cmp	r3, #128
 1674 0018 0CBF     		ite	eq
 1675 001a 0123     		moveq	r3, #1
 1676 001c 0023     		movne	r3, #0
 1677 001e DBB2     		uxtb	r3, r3
 1678              		.loc 1 1472 14
 1679 0020 FB66     		str	r3, [r7, #108]
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1680              		.loc 1 1473 13
 1681 0022 7B68     		ldr	r3, [r7, #4]
 1682 0024 93F84130 		ldrb	r3, [r3, #65]
 1683 0028 DBB2     		uxtb	r3, r3
 1684              		.loc 1 1473 6
 1685 002a 212B     		cmp	r3, #33
 1686 002c 1CD1     		bne	.L76
 1687              		.loc 1 1473 49 discriminator 1
 1688 002e FB6E     		ldr	r3, [r7, #108]
 1689 0030 002B     		cmp	r3, #0
 1690 0032 19D0     		beq	.L76
 1691              	.L79:
 1692              	.LBB315:
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1693              		.loc 1 1476 5 discriminator 1
 1694 0034 7B68     		ldr	r3, [r7, #4]
 1695 0036 1B68     		ldr	r3, [r3]
 1696 0038 1433     		adds	r3, r3, #20
 1697 003a FB64     		str	r3, [r7, #76]
 1698              	.LBB316:
 1699              	.LBB317:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1700              		.loc 2 480 4
 1701 003c FB6C     		ldr	r3, [r7, #76]
 1702              		.syntax unified
 1703              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1704 003e 53E8003F 		ldrex r3, [r3]
 1705              	@ 0 "" 2
 1706              		.thumb
 1707              		.syntax unified
 1708 0042 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1709              		.loc 2 481 10
 1710 0044 BB6C     		ldr	r3, [r7, #72]
 1711              	.LBE317:
 1712              	.LBE316:
 1713              		.loc 1 1476 5 discriminator 1
 1714 0046 23F08003 		bic	r3, r3, #128
 1715 004a BB66     		str	r3, [r7, #104]
 1716 004c 7B68     		ldr	r3, [r7, #4]
 1717 004e 1B68     		ldr	r3, [r3]
 1718 0050 1433     		adds	r3, r3, #20
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 66


 1719 0052 BA6E     		ldr	r2, [r7, #104]
 1720 0054 BA65     		str	r2, [r7, #88]
 1721 0056 7B65     		str	r3, [r7, #84]
 1722              	.LBB318:
 1723              	.LBB319:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1724              		.loc 2 531 4
 1725 0058 796D     		ldr	r1, [r7, #84]
 1726 005a BA6D     		ldr	r2, [r7, #88]
 1727              		.syntax unified
 1728              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1729 005c 41E80023 		strex r3, r2, [r1]
 1730              	@ 0 "" 2
 1731              		.thumb
 1732              		.syntax unified
 1733 0060 3B65     		str	r3, [r7, #80]
 1734              		.loc 2 532 10
 1735 0062 3B6D     		ldr	r3, [r7, #80]
 1736              	.LBE319:
 1737              	.LBE318:
 1738              		.loc 1 1476 5 discriminator 1
 1739 0064 002B     		cmp	r3, #0
 1740 0066 E5D1     		bne	.L79
 1741              	.L76:
 1742              	.LBE315:
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1743              		.loc 1 1479 16
 1744 0068 7B68     		ldr	r3, [r7, #4]
 1745 006a 1B68     		ldr	r3, [r3]
 1746 006c 5B69     		ldr	r3, [r3, #20]
 1747 006e 03F04003 		and	r3, r3, #64
 1748 0072 402B     		cmp	r3, #64
 1749 0074 0CBF     		ite	eq
 1750 0076 0123     		moveq	r3, #1
 1751 0078 0023     		movne	r3, #0
 1752 007a DBB2     		uxtb	r3, r3
 1753              		.loc 1 1479 14
 1754 007c FB66     		str	r3, [r7, #108]
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1755              		.loc 1 1480 13
 1756 007e 7B68     		ldr	r3, [r7, #4]
 1757 0080 93F84230 		ldrb	r3, [r3, #66]
 1758 0084 DBB2     		uxtb	r3, r3
 1759              		.loc 1 1480 6
 1760 0086 222B     		cmp	r3, #34
 1761 0088 50D1     		bne	.L80
 1762              		.loc 1 1480 50 discriminator 1
 1763 008a FB6E     		ldr	r3, [r7, #108]
 1764 008c 002B     		cmp	r3, #0
 1765 008e 4DD0     		beq	.L80
 1766              	.L83:
 1767              	.LBB320:
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 67


 1768              		.loc 1 1483 5 discriminator 1
 1769 0090 7B68     		ldr	r3, [r7, #4]
 1770 0092 1B68     		ldr	r3, [r3]
 1771 0094 0C33     		adds	r3, r3, #12
 1772 0096 BB63     		str	r3, [r7, #56]
 1773              	.LBB321:
 1774              	.LBB322:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1775              		.loc 2 480 4
 1776 0098 BB6B     		ldr	r3, [r7, #56]
 1777              		.syntax unified
 1778              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1779 009a 53E8003F 		ldrex r3, [r3]
 1780              	@ 0 "" 2
 1781              		.thumb
 1782              		.syntax unified
 1783 009e 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1784              		.loc 2 481 10
 1785 00a0 7B6B     		ldr	r3, [r7, #52]
 1786              	.LBE322:
 1787              	.LBE321:
 1788              		.loc 1 1483 5 discriminator 1
 1789 00a2 23F48073 		bic	r3, r3, #256
 1790 00a6 7B66     		str	r3, [r7, #100]
 1791 00a8 7B68     		ldr	r3, [r7, #4]
 1792 00aa 1B68     		ldr	r3, [r3]
 1793 00ac 0C33     		adds	r3, r3, #12
 1794 00ae 7A6E     		ldr	r2, [r7, #100]
 1795 00b0 7A64     		str	r2, [r7, #68]
 1796 00b2 3B64     		str	r3, [r7, #64]
 1797              	.LBB323:
 1798              	.LBB324:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1799              		.loc 2 531 4
 1800 00b4 396C     		ldr	r1, [r7, #64]
 1801 00b6 7A6C     		ldr	r2, [r7, #68]
 1802              		.syntax unified
 1803              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1804 00b8 41E80023 		strex r3, r2, [r1]
 1805              	@ 0 "" 2
 1806              		.thumb
 1807              		.syntax unified
 1808 00bc FB63     		str	r3, [r7, #60]
 1809              		.loc 2 532 10
 1810 00be FB6B     		ldr	r3, [r7, #60]
 1811              	.LBE324:
 1812              	.LBE323:
 1813              		.loc 1 1483 5 discriminator 1
 1814 00c0 002B     		cmp	r3, #0
 1815 00c2 E5D1     		bne	.L83
 1816              	.L86:
 1817              	.LBE320:
 1818              	.LBB325:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1819              		.loc 1 1484 5 discriminator 1
 1820 00c4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 68


 1821 00c6 1B68     		ldr	r3, [r3]
 1822 00c8 1433     		adds	r3, r3, #20
 1823 00ca 7B62     		str	r3, [r7, #36]
 1824              	.LBB326:
 1825              	.LBB327:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1826              		.loc 2 480 4
 1827 00cc 7B6A     		ldr	r3, [r7, #36]
 1828              		.syntax unified
 1829              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1830 00ce 53E8003F 		ldrex r3, [r3]
 1831              	@ 0 "" 2
 1832              		.thumb
 1833              		.syntax unified
 1834 00d2 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1835              		.loc 2 481 10
 1836 00d4 3B6A     		ldr	r3, [r7, #32]
 1837              	.LBE327:
 1838              	.LBE326:
 1839              		.loc 1 1484 5 discriminator 1
 1840 00d6 23F00103 		bic	r3, r3, #1
 1841 00da 3B66     		str	r3, [r7, #96]
 1842 00dc 7B68     		ldr	r3, [r7, #4]
 1843 00de 1B68     		ldr	r3, [r3]
 1844 00e0 1433     		adds	r3, r3, #20
 1845 00e2 3A6E     		ldr	r2, [r7, #96]
 1846 00e4 3A63     		str	r2, [r7, #48]
 1847 00e6 FB62     		str	r3, [r7, #44]
 1848              	.LBB328:
 1849              	.LBB329:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1850              		.loc 2 531 4
 1851 00e8 F96A     		ldr	r1, [r7, #44]
 1852 00ea 3A6B     		ldr	r2, [r7, #48]
 1853              		.syntax unified
 1854              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1855 00ec 41E80023 		strex r3, r2, [r1]
 1856              	@ 0 "" 2
 1857              		.thumb
 1858              		.syntax unified
 1859 00f0 BB62     		str	r3, [r7, #40]
 1860              		.loc 2 532 10
 1861 00f2 BB6A     		ldr	r3, [r7, #40]
 1862              	.LBE329:
 1863              	.LBE328:
 1864              		.loc 1 1484 5 discriminator 1
 1865 00f4 002B     		cmp	r3, #0
 1866 00f6 E5D1     		bne	.L86
 1867              	.L89:
 1868              	.LBE325:
 1869              	.LBB330:
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1870              		.loc 1 1487 5 discriminator 1
 1871 00f8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 69


 1872 00fa 1B68     		ldr	r3, [r3]
 1873 00fc 1433     		adds	r3, r3, #20
 1874 00fe 3B61     		str	r3, [r7, #16]
 1875              	.LBB331:
 1876              	.LBB332:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1877              		.loc 2 480 4
 1878 0100 3B69     		ldr	r3, [r7, #16]
 1879              		.syntax unified
 1880              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1881 0102 53E8003F 		ldrex r3, [r3]
 1882              	@ 0 "" 2
 1883              		.thumb
 1884              		.syntax unified
 1885 0106 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1886              		.loc 2 481 10
 1887 0108 FB68     		ldr	r3, [r7, #12]
 1888              	.LBE332:
 1889              	.LBE331:
 1890              		.loc 1 1487 5 discriminator 1
 1891 010a 23F04003 		bic	r3, r3, #64
 1892 010e FB65     		str	r3, [r7, #92]
 1893 0110 7B68     		ldr	r3, [r7, #4]
 1894 0112 1B68     		ldr	r3, [r3]
 1895 0114 1433     		adds	r3, r3, #20
 1896 0116 FA6D     		ldr	r2, [r7, #92]
 1897 0118 FA61     		str	r2, [r7, #28]
 1898 011a BB61     		str	r3, [r7, #24]
 1899              	.LBB333:
 1900              	.LBB334:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1901              		.loc 2 531 4
 1902 011c B969     		ldr	r1, [r7, #24]
 1903 011e FA69     		ldr	r2, [r7, #28]
 1904              		.syntax unified
 1905              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1906 0120 41E80023 		strex r3, r2, [r1]
 1907              	@ 0 "" 2
 1908              		.thumb
 1909              		.syntax unified
 1910 0124 7B61     		str	r3, [r7, #20]
 1911              		.loc 2 532 10
 1912 0126 7B69     		ldr	r3, [r7, #20]
 1913              	.LBE334:
 1914              	.LBE333:
 1915              		.loc 1 1487 5 discriminator 1
 1916 0128 002B     		cmp	r3, #0
 1917 012a E5D1     		bne	.L89
 1918              	.L80:
 1919              	.LBE330:
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1920              		.loc 1 1490 10
 1921 012c 0023     		movs	r3, #0
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 70


 1922              		.loc 1 1491 1
 1923 012e 1846     		mov	r0, r3
 1924 0130 7437     		adds	r7, r7, #116
 1925              	.LCFI71:
 1926              		.cfi_def_cfa_offset 4
 1927 0132 BD46     		mov	sp, r7
 1928              	.LCFI72:
 1929              		.cfi_def_cfa_register 13
 1930              		@ sp needed
 1931 0134 5DF8047B 		ldr	r7, [sp], #4
 1932              	.LCFI73:
 1933              		.cfi_restore 7
 1934              		.cfi_def_cfa_offset 0
 1935 0138 7047     		bx	lr
 1936              		.cfi_endproc
 1937              	.LFE147:
 1939              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1940              		.align	1
 1941              		.global	HAL_UART_DMAResume
 1942              		.syntax unified
 1943              		.thumb
 1944              		.thumb_func
 1946              	HAL_UART_DMAResume:
 1947              	.LFB148:
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1948              		.loc 1 1500 1
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 112
 1951              		@ frame_needed = 1, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
 1953 0000 80B4     		push	{r7}
 1954              	.LCFI74:
 1955              		.cfi_def_cfa_offset 4
 1956              		.cfi_offset 7, -4
 1957 0002 9DB0     		sub	sp, sp, #116
 1958              	.LCFI75:
 1959              		.cfi_def_cfa_offset 120
 1960 0004 00AF     		add	r7, sp, #0
 1961              	.LCFI76:
 1962              		.cfi_def_cfa_register 7
 1963 0006 7860     		str	r0, [r7, #4]
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1964              		.loc 1 1502 12
 1965 0008 7B68     		ldr	r3, [r7, #4]
 1966 000a 93F84130 		ldrb	r3, [r3, #65]
 1967 000e DBB2     		uxtb	r3, r3
 1968              		.loc 1 1502 6
 1969 0010 212B     		cmp	r3, #33
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 71


 1970 0012 19D1     		bne	.L92
 1971              	.L95:
 1972              	.LBB335:
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1973              		.loc 1 1505 5 discriminator 1
 1974 0014 7B68     		ldr	r3, [r7, #4]
 1975 0016 1B68     		ldr	r3, [r3]
 1976 0018 1433     		adds	r3, r3, #20
 1977 001a 3B65     		str	r3, [r7, #80]
 1978              	.LBB336:
 1979              	.LBB337:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1980              		.loc 2 480 4
 1981 001c 3B6D     		ldr	r3, [r7, #80]
 1982              		.syntax unified
 1983              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1984 001e 53E8003F 		ldrex r3, [r3]
 1985              	@ 0 "" 2
 1986              		.thumb
 1987              		.syntax unified
 1988 0022 FB64     		str	r3, [r7, #76]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1989              		.loc 2 481 10
 1990 0024 FB6C     		ldr	r3, [r7, #76]
 1991              	.LBE337:
 1992              	.LBE336:
 1993              		.loc 1 1505 5 discriminator 1
 1994 0026 43F08003 		orr	r3, r3, #128
 1995 002a FB66     		str	r3, [r7, #108]
 1996 002c 7B68     		ldr	r3, [r7, #4]
 1997 002e 1B68     		ldr	r3, [r3]
 1998 0030 1433     		adds	r3, r3, #20
 1999 0032 FA6E     		ldr	r2, [r7, #108]
 2000 0034 FA65     		str	r2, [r7, #92]
 2001 0036 BB65     		str	r3, [r7, #88]
 2002              	.LBB338:
 2003              	.LBB339:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2004              		.loc 2 531 4
 2005 0038 B96D     		ldr	r1, [r7, #88]
 2006 003a FA6D     		ldr	r2, [r7, #92]
 2007              		.syntax unified
 2008              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2009 003c 41E80023 		strex r3, r2, [r1]
 2010              	@ 0 "" 2
 2011              		.thumb
 2012              		.syntax unified
 2013 0040 7B65     		str	r3, [r7, #84]
 2014              		.loc 2 532 10
 2015 0042 7B6D     		ldr	r3, [r7, #84]
 2016              	.LBE339:
 2017              	.LBE338:
 2018              		.loc 1 1505 5 discriminator 1
 2019 0044 002B     		cmp	r3, #0
 2020 0046 E5D1     		bne	.L95
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 72


 2021              	.L92:
 2022              	.LBE335:
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2023              		.loc 1 1508 12
 2024 0048 7B68     		ldr	r3, [r7, #4]
 2025 004a 93F84230 		ldrb	r3, [r3, #66]
 2026 004e DBB2     		uxtb	r3, r3
 2027              		.loc 1 1508 6
 2028 0050 222B     		cmp	r3, #34
 2029 0052 5CD1     		bne	.L96
 2030              	.LBB340:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2031              		.loc 1 1511 5
 2032 0054 0023     		movs	r3, #0
 2033 0056 FB60     		str	r3, [r7, #12]
 2034 0058 7B68     		ldr	r3, [r7, #4]
 2035 005a 1B68     		ldr	r3, [r3]
 2036 005c 1B68     		ldr	r3, [r3]
 2037 005e FB60     		str	r3, [r7, #12]
 2038 0060 7B68     		ldr	r3, [r7, #4]
 2039 0062 1B68     		ldr	r3, [r3]
 2040 0064 5B68     		ldr	r3, [r3, #4]
 2041 0066 FB60     		str	r3, [r7, #12]
 2042 0068 FB68     		ldr	r3, [r7, #12]
 2043              	.LBE340:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2044              		.loc 1 1514 20
 2045 006a 7B68     		ldr	r3, [r7, #4]
 2046 006c 1B69     		ldr	r3, [r3, #16]
 2047              		.loc 1 1514 8
 2048 006e 002B     		cmp	r3, #0
 2049 0070 19D0     		beq	.L103
 2050              	.L100:
 2051              	.LBB341:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2052              		.loc 1 1516 7 discriminator 1
 2053 0072 7B68     		ldr	r3, [r7, #4]
 2054 0074 1B68     		ldr	r3, [r3]
 2055 0076 0C33     		adds	r3, r3, #12
 2056 0078 FB63     		str	r3, [r7, #60]
 2057              	.LBB342:
 2058              	.LBB343:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2059              		.loc 2 480 4
 2060 007a FB6B     		ldr	r3, [r7, #60]
 2061              		.syntax unified
 2062              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2063 007c 53E8003F 		ldrex r3, [r3]
 2064              	@ 0 "" 2
 2065              		.thumb
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 73


 2066              		.syntax unified
 2067 0080 BB63     		str	r3, [r7, #56]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2068              		.loc 2 481 10
 2069 0082 BB6B     		ldr	r3, [r7, #56]
 2070              	.LBE343:
 2071              	.LBE342:
 2072              		.loc 1 1516 7 discriminator 1
 2073 0084 43F48073 		orr	r3, r3, #256
 2074 0088 BB66     		str	r3, [r7, #104]
 2075 008a 7B68     		ldr	r3, [r7, #4]
 2076 008c 1B68     		ldr	r3, [r3]
 2077 008e 0C33     		adds	r3, r3, #12
 2078 0090 BA6E     		ldr	r2, [r7, #104]
 2079 0092 BA64     		str	r2, [r7, #72]
 2080 0094 7B64     		str	r3, [r7, #68]
 2081              	.LBB344:
 2082              	.LBB345:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2083              		.loc 2 531 4
 2084 0096 796C     		ldr	r1, [r7, #68]
 2085 0098 BA6C     		ldr	r2, [r7, #72]
 2086              		.syntax unified
 2087              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2088 009a 41E80023 		strex r3, r2, [r1]
 2089              	@ 0 "" 2
 2090              		.thumb
 2091              		.syntax unified
 2092 009e 3B64     		str	r3, [r7, #64]
 2093              		.loc 2 532 10
 2094 00a0 3B6C     		ldr	r3, [r7, #64]
 2095              	.LBE345:
 2096              	.LBE344:
 2097              		.loc 1 1516 7 discriminator 1
 2098 00a2 002B     		cmp	r3, #0
 2099 00a4 E5D1     		bne	.L100
 2100              	.L103:
 2101              	.LBE341:
 2102              	.LBB346:
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2103              		.loc 1 1518 5 discriminator 1
 2104 00a6 7B68     		ldr	r3, [r7, #4]
 2105 00a8 1B68     		ldr	r3, [r3]
 2106 00aa 1433     		adds	r3, r3, #20
 2107 00ac BB62     		str	r3, [r7, #40]
 2108              	.LBB347:
 2109              	.LBB348:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2110              		.loc 2 480 4
 2111 00ae BB6A     		ldr	r3, [r7, #40]
 2112              		.syntax unified
 2113              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2114 00b0 53E8003F 		ldrex r3, [r3]
 2115              	@ 0 "" 2
 2116              		.thumb
 2117              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 74


 2118 00b4 7B62     		str	r3, [r7, #36]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2119              		.loc 2 481 10
 2120 00b6 7B6A     		ldr	r3, [r7, #36]
 2121              	.LBE348:
 2122              	.LBE347:
 2123              		.loc 1 1518 5 discriminator 1
 2124 00b8 43F00103 		orr	r3, r3, #1
 2125 00bc 7B66     		str	r3, [r7, #100]
 2126 00be 7B68     		ldr	r3, [r7, #4]
 2127 00c0 1B68     		ldr	r3, [r3]
 2128 00c2 1433     		adds	r3, r3, #20
 2129 00c4 7A6E     		ldr	r2, [r7, #100]
 2130 00c6 7A63     		str	r2, [r7, #52]
 2131 00c8 3B63     		str	r3, [r7, #48]
 2132              	.LBB349:
 2133              	.LBB350:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2134              		.loc 2 531 4
 2135 00ca 396B     		ldr	r1, [r7, #48]
 2136 00cc 7A6B     		ldr	r2, [r7, #52]
 2137              		.syntax unified
 2138              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2139 00ce 41E80023 		strex r3, r2, [r1]
 2140              	@ 0 "" 2
 2141              		.thumb
 2142              		.syntax unified
 2143 00d2 FB62     		str	r3, [r7, #44]
 2144              		.loc 2 532 10
 2145 00d4 FB6A     		ldr	r3, [r7, #44]
 2146              	.LBE350:
 2147              	.LBE349:
 2148              		.loc 1 1518 5 discriminator 1
 2149 00d6 002B     		cmp	r3, #0
 2150 00d8 E5D1     		bne	.L103
 2151              	.L106:
 2152              	.LBE346:
 2153              	.LBB351:
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2154              		.loc 1 1521 5 discriminator 1
 2155 00da 7B68     		ldr	r3, [r7, #4]
 2156 00dc 1B68     		ldr	r3, [r3]
 2157 00de 1433     		adds	r3, r3, #20
 2158 00e0 7B61     		str	r3, [r7, #20]
 2159              	.LBB352:
 2160              	.LBB353:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2161              		.loc 2 480 4
 2162 00e2 7B69     		ldr	r3, [r7, #20]
 2163              		.syntax unified
 2164              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2165 00e4 53E8003F 		ldrex r3, [r3]
 2166              	@ 0 "" 2
 2167              		.thumb
 2168              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 75


 2169 00e8 3B61     		str	r3, [r7, #16]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2170              		.loc 2 481 10
 2171 00ea 3B69     		ldr	r3, [r7, #16]
 2172              	.LBE353:
 2173              	.LBE352:
 2174              		.loc 1 1521 5 discriminator 1
 2175 00ec 43F04003 		orr	r3, r3, #64
 2176 00f0 3B66     		str	r3, [r7, #96]
 2177 00f2 7B68     		ldr	r3, [r7, #4]
 2178 00f4 1B68     		ldr	r3, [r3]
 2179 00f6 1433     		adds	r3, r3, #20
 2180 00f8 3A6E     		ldr	r2, [r7, #96]
 2181 00fa 3A62     		str	r2, [r7, #32]
 2182 00fc FB61     		str	r3, [r7, #28]
 2183              	.LBB354:
 2184              	.LBB355:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2185              		.loc 2 531 4
 2186 00fe F969     		ldr	r1, [r7, #28]
 2187 0100 3A6A     		ldr	r2, [r7, #32]
 2188              		.syntax unified
 2189              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2190 0102 41E80023 		strex r3, r2, [r1]
 2191              	@ 0 "" 2
 2192              		.thumb
 2193              		.syntax unified
 2194 0106 BB61     		str	r3, [r7, #24]
 2195              		.loc 2 532 10
 2196 0108 BB69     		ldr	r3, [r7, #24]
 2197              	.LBE355:
 2198              	.LBE354:
 2199              		.loc 1 1521 5 discriminator 1
 2200 010a 002B     		cmp	r3, #0
 2201 010c E5D1     		bne	.L106
 2202              	.L96:
 2203              	.LBE351:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2204              		.loc 1 1524 10
 2205 010e 0023     		movs	r3, #0
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2206              		.loc 1 1525 1
 2207 0110 1846     		mov	r0, r3
 2208 0112 7437     		adds	r7, r7, #116
 2209              	.LCFI77:
 2210              		.cfi_def_cfa_offset 4
 2211 0114 BD46     		mov	sp, r7
 2212              	.LCFI78:
 2213              		.cfi_def_cfa_register 13
 2214              		@ sp needed
 2215 0116 5DF8047B 		ldr	r7, [sp], #4
 2216              	.LCFI79:
 2217              		.cfi_restore 7
 2218              		.cfi_def_cfa_offset 0
 2219 011a 7047     		bx	lr
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 76


 2220              		.cfi_endproc
 2221              	.LFE148:
 2223              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2224              		.align	1
 2225              		.global	HAL_UART_DMAStop
 2226              		.syntax unified
 2227              		.thumb
 2228              		.thumb_func
 2230              	HAL_UART_DMAStop:
 2231              	.LFB149:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2232              		.loc 1 1534 1
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 64
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236 0000 80B5     		push	{r7, lr}
 2237              	.LCFI80:
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 7, -8
 2240              		.cfi_offset 14, -4
 2241 0002 90B0     		sub	sp, sp, #64
 2242              	.LCFI81:
 2243              		.cfi_def_cfa_offset 72
 2244 0004 00AF     		add	r7, sp, #0
 2245              	.LCFI82:
 2246              		.cfi_def_cfa_register 7
 2247 0006 7860     		str	r0, [r7, #4]
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2248              		.loc 1 1535 12
 2249 0008 0023     		movs	r3, #0
 2250 000a FB63     		str	r3, [r7, #60]
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2251              		.loc 1 1543 16
 2252 000c 7B68     		ldr	r3, [r7, #4]
 2253 000e 1B68     		ldr	r3, [r3]
 2254 0010 5B69     		ldr	r3, [r3, #20]
 2255 0012 03F08003 		and	r3, r3, #128
 2256 0016 802B     		cmp	r3, #128
 2257 0018 0CBF     		ite	eq
 2258 001a 0123     		moveq	r3, #1
 2259 001c 0023     		movne	r3, #0
 2260 001e DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 77


 2261              		.loc 1 1543 14
 2262 0020 FB63     		str	r3, [r7, #60]
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2263              		.loc 1 1544 13
 2264 0022 7B68     		ldr	r3, [r7, #4]
 2265 0024 93F84130 		ldrb	r3, [r3, #65]
 2266 0028 DBB2     		uxtb	r3, r3
 2267              		.loc 1 1544 6
 2268 002a 212B     		cmp	r3, #33
 2269 002c 28D1     		bne	.L109
 2270              		.loc 1 1544 49 discriminator 1
 2271 002e FB6B     		ldr	r3, [r7, #60]
 2272 0030 002B     		cmp	r3, #0
 2273 0032 25D0     		beq	.L109
 2274              	.L112:
 2275              	.LBB356:
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2276              		.loc 1 1546 5 discriminator 1
 2277 0034 7B68     		ldr	r3, [r7, #4]
 2278 0036 1B68     		ldr	r3, [r3]
 2279 0038 1433     		adds	r3, r3, #20
 2280 003a 7B62     		str	r3, [r7, #36]
 2281              	.LBB357:
 2282              	.LBB358:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2283              		.loc 2 480 4
 2284 003c 7B6A     		ldr	r3, [r7, #36]
 2285              		.syntax unified
 2286              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2287 003e 53E8003F 		ldrex r3, [r3]
 2288              	@ 0 "" 2
 2289              		.thumb
 2290              		.syntax unified
 2291 0042 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2292              		.loc 2 481 10
 2293 0044 3B6A     		ldr	r3, [r7, #32]
 2294              	.LBE358:
 2295              	.LBE357:
 2296              		.loc 1 1546 5 discriminator 1
 2297 0046 23F08003 		bic	r3, r3, #128
 2298 004a BB63     		str	r3, [r7, #56]
 2299 004c 7B68     		ldr	r3, [r7, #4]
 2300 004e 1B68     		ldr	r3, [r3]
 2301 0050 1433     		adds	r3, r3, #20
 2302 0052 BA6B     		ldr	r2, [r7, #56]
 2303 0054 3A63     		str	r2, [r7, #48]
 2304 0056 FB62     		str	r3, [r7, #44]
 2305              	.LBB359:
 2306              	.LBB360:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2307              		.loc 2 531 4
 2308 0058 F96A     		ldr	r1, [r7, #44]
 2309 005a 3A6B     		ldr	r2, [r7, #48]
 2310              		.syntax unified
 2311              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 78


 2312 005c 41E80023 		strex r3, r2, [r1]
 2313              	@ 0 "" 2
 2314              		.thumb
 2315              		.syntax unified
 2316 0060 BB62     		str	r3, [r7, #40]
 2317              		.loc 2 532 10
 2318 0062 BB6A     		ldr	r3, [r7, #40]
 2319              	.LBE360:
 2320              	.LBE359:
 2321              		.loc 1 1546 5 discriminator 1
 2322 0064 002B     		cmp	r3, #0
 2323 0066 E5D1     		bne	.L112
 2324              	.LBE356:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2325              		.loc 1 1549 14
 2326 0068 7B68     		ldr	r3, [r7, #4]
 2327 006a 9B6B     		ldr	r3, [r3, #56]
 2328              		.loc 1 1549 8
 2329 006c 002B     		cmp	r3, #0
 2330 006e 04D0     		beq	.L113
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2331              		.loc 1 1551 7
 2332 0070 7B68     		ldr	r3, [r7, #4]
 2333 0072 9B6B     		ldr	r3, [r3, #56]
 2334 0074 1846     		mov	r0, r3
 2335 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 2336              	.L113:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2337              		.loc 1 1553 5
 2338 007a 7868     		ldr	r0, [r7, #4]
 2339 007c FFF7FEFF 		bl	UART_EndTxTransfer
 2340              	.L109:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2341              		.loc 1 1557 16
 2342 0080 7B68     		ldr	r3, [r7, #4]
 2343 0082 1B68     		ldr	r3, [r3]
 2344 0084 5B69     		ldr	r3, [r3, #20]
 2345 0086 03F04003 		and	r3, r3, #64
 2346 008a 402B     		cmp	r3, #64
 2347 008c 0CBF     		ite	eq
 2348 008e 0123     		moveq	r3, #1
 2349 0090 0023     		movne	r3, #0
 2350 0092 DBB2     		uxtb	r3, r3
 2351              		.loc 1 1557 14
 2352 0094 FB63     		str	r3, [r7, #60]
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2353              		.loc 1 1558 13
 2354 0096 7B68     		ldr	r3, [r7, #4]
 2355 0098 93F84230 		ldrb	r3, [r3, #66]
 2356 009c DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 79


 2357              		.loc 1 1558 6
 2358 009e 222B     		cmp	r3, #34
 2359 00a0 28D1     		bne	.L114
 2360              		.loc 1 1558 50 discriminator 1
 2361 00a2 FB6B     		ldr	r3, [r7, #60]
 2362 00a4 002B     		cmp	r3, #0
 2363 00a6 25D0     		beq	.L114
 2364              	.L117:
 2365              	.LBB361:
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2366              		.loc 1 1560 5 discriminator 1
 2367 00a8 7B68     		ldr	r3, [r7, #4]
 2368 00aa 1B68     		ldr	r3, [r3]
 2369 00ac 1433     		adds	r3, r3, #20
 2370 00ae 3B61     		str	r3, [r7, #16]
 2371              	.LBB362:
 2372              	.LBB363:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2373              		.loc 2 480 4
 2374 00b0 3B69     		ldr	r3, [r7, #16]
 2375              		.syntax unified
 2376              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2377 00b2 53E8003F 		ldrex r3, [r3]
 2378              	@ 0 "" 2
 2379              		.thumb
 2380              		.syntax unified
 2381 00b6 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2382              		.loc 2 481 10
 2383 00b8 FB68     		ldr	r3, [r7, #12]
 2384              	.LBE363:
 2385              	.LBE362:
 2386              		.loc 1 1560 5 discriminator 1
 2387 00ba 23F04003 		bic	r3, r3, #64
 2388 00be 7B63     		str	r3, [r7, #52]
 2389 00c0 7B68     		ldr	r3, [r7, #4]
 2390 00c2 1B68     		ldr	r3, [r3]
 2391 00c4 1433     		adds	r3, r3, #20
 2392 00c6 7A6B     		ldr	r2, [r7, #52]
 2393 00c8 FA61     		str	r2, [r7, #28]
 2394 00ca BB61     		str	r3, [r7, #24]
 2395              	.LBB364:
 2396              	.LBB365:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2397              		.loc 2 531 4
 2398 00cc B969     		ldr	r1, [r7, #24]
 2399 00ce FA69     		ldr	r2, [r7, #28]
 2400              		.syntax unified
 2401              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2402 00d0 41E80023 		strex r3, r2, [r1]
 2403              	@ 0 "" 2
 2404              		.thumb
 2405              		.syntax unified
 2406 00d4 7B61     		str	r3, [r7, #20]
 2407              		.loc 2 532 10
 2408 00d6 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 80


 2409              	.LBE365:
 2410              	.LBE364:
 2411              		.loc 1 1560 5 discriminator 1
 2412 00d8 002B     		cmp	r3, #0
 2413 00da E5D1     		bne	.L117
 2414              	.LBE361:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2415              		.loc 1 1563 14
 2416 00dc 7B68     		ldr	r3, [r7, #4]
 2417 00de DB6B     		ldr	r3, [r3, #60]
 2418              		.loc 1 1563 8
 2419 00e0 002B     		cmp	r3, #0
 2420 00e2 04D0     		beq	.L118
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2421              		.loc 1 1565 7
 2422 00e4 7B68     		ldr	r3, [r7, #4]
 2423 00e6 DB6B     		ldr	r3, [r3, #60]
 2424 00e8 1846     		mov	r0, r3
 2425 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 2426              	.L118:
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2427              		.loc 1 1567 5
 2428 00ee 7868     		ldr	r0, [r7, #4]
 2429 00f0 FFF7FEFF 		bl	UART_EndRxTransfer
 2430              	.L114:
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2431              		.loc 1 1570 10
 2432 00f4 0023     		movs	r3, #0
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2433              		.loc 1 1571 1
 2434 00f6 1846     		mov	r0, r3
 2435 00f8 4037     		adds	r7, r7, #64
 2436              	.LCFI83:
 2437              		.cfi_def_cfa_offset 8
 2438 00fa BD46     		mov	sp, r7
 2439              	.LCFI84:
 2440              		.cfi_def_cfa_register 13
 2441              		@ sp needed
 2442 00fc 80BD     		pop	{r7, pc}
 2443              		.cfi_endproc
 2444              	.LFE149:
 2446              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2447              		.align	1
 2448              		.global	HAL_UARTEx_ReceiveToIdle
 2449              		.syntax unified
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_UARTEx_ReceiveToIdle:
 2454              	.LFB150:
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 81


1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2455              		.loc 1 1590 1
 2456              		.cfi_startproc
 2457              		@ args = 4, pretend = 0, frame = 32
 2458              		@ frame_needed = 1, uses_anonymous_args = 0
 2459 0000 80B5     		push	{r7, lr}
 2460              	.LCFI85:
 2461              		.cfi_def_cfa_offset 8
 2462              		.cfi_offset 7, -8
 2463              		.cfi_offset 14, -4
 2464 0002 88B0     		sub	sp, sp, #32
 2465              	.LCFI86:
 2466              		.cfi_def_cfa_offset 40
 2467 0004 00AF     		add	r7, sp, #0
 2468              	.LCFI87:
 2469              		.cfi_def_cfa_register 7
 2470 0006 F860     		str	r0, [r7, #12]
 2471 0008 B960     		str	r1, [r7, #8]
 2472 000a 3B60     		str	r3, [r7]
 2473 000c 1346     		mov	r3, r2	@ movhi
 2474 000e FB80     		strh	r3, [r7, #6]	@ movhi
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2475              		.loc 1 1596 12
 2476 0010 FB68     		ldr	r3, [r7, #12]
 2477 0012 93F84230 		ldrb	r3, [r3, #66]
 2478 0016 DBB2     		uxtb	r3, r3
 2479              		.loc 1 1596 6
 2480 0018 202B     		cmp	r3, #32
 2481 001a 40F0C080 		bne	.L121
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2482              		.loc 1 1598 8
 2483 001e BB68     		ldr	r3, [r7, #8]
 2484 0020 002B     		cmp	r3, #0
 2485 0022 02D0     		beq	.L122
 2486              		.loc 1 1598 25 discriminator 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 82


 2487 0024 FB88     		ldrh	r3, [r7, #6]
 2488 0026 002B     		cmp	r3, #0
 2489 0028 01D1     		bne	.L123
 2490              	.L122:
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 2491              		.loc 1 1600 15
 2492 002a 0123     		movs	r3, #1
 2493 002c B8E0     		b	.L124
 2494              	.L123:
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2495              		.loc 1 1603 22
 2496 002e FB68     		ldr	r3, [r7, #12]
 2497 0030 0022     		movs	r2, #0
 2498 0032 5A64     		str	r2, [r3, #68]
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2499              		.loc 1 1604 20
 2500 0034 FB68     		ldr	r3, [r7, #12]
 2501 0036 2222     		movs	r2, #34
 2502 0038 83F84220 		strb	r2, [r3, #66]
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2503              		.loc 1 1605 26
 2504 003c FB68     		ldr	r3, [r7, #12]
 2505 003e 0122     		movs	r2, #1
 2506 0040 1A63     		str	r2, [r3, #48]
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2507              		.loc 1 1606 24
 2508 0042 FB68     		ldr	r3, [r7, #12]
 2509 0044 0022     		movs	r2, #0
 2510 0046 5A63     		str	r2, [r3, #52]
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2511              		.loc 1 1609 17
 2512 0048 FFF7FEFF 		bl	HAL_GetTick
 2513 004c 7861     		str	r0, [r7, #20]
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2514              		.loc 1 1611 24
 2515 004e FB68     		ldr	r3, [r7, #12]
 2516 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2517 0052 9A85     		strh	r2, [r3, #44]	@ movhi
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2518              		.loc 1 1612 24
 2519 0054 FB68     		ldr	r3, [r7, #12]
 2520 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2521 0058 DA85     		strh	r2, [r3, #46]	@ movhi
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2522              		.loc 1 1615 21
 2523 005a FB68     		ldr	r3, [r7, #12]
 2524 005c 9B68     		ldr	r3, [r3, #8]
 2525              		.loc 1 1615 8
 2526 005e B3F5805F 		cmp	r3, #4096
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 83


 2527 0062 08D1     		bne	.L125
 2528              		.loc 1 1615 71 discriminator 1
 2529 0064 FB68     		ldr	r3, [r7, #12]
 2530 0066 1B69     		ldr	r3, [r3, #16]
 2531              		.loc 1 1615 56 discriminator 1
 2532 0068 002B     		cmp	r3, #0
 2533 006a 04D1     		bne	.L125
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 2534              		.loc 1 1617 19
 2535 006c 0023     		movs	r3, #0
 2536 006e FB61     		str	r3, [r7, #28]
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2537              		.loc 1 1618 19
 2538 0070 BB68     		ldr	r3, [r7, #8]
 2539 0072 BB61     		str	r3, [r7, #24]
 2540 0074 03E0     		b	.L126
 2541              	.L125:
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 2542              		.loc 1 1622 19
 2543 0076 BB68     		ldr	r3, [r7, #8]
 2544 0078 FB61     		str	r3, [r7, #28]
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 2545              		.loc 1 1623 19
 2546 007a 0023     		movs	r3, #0
 2547 007c BB61     		str	r3, [r7, #24]
 2548              	.L126:
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
 2549              		.loc 1 1627 12
 2550 007e 3B68     		ldr	r3, [r7]
 2551 0080 0022     		movs	r2, #0
 2552 0082 1A80     		strh	r2, [r3]	@ movhi
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2553              		.loc 1 1630 11
 2554 0084 77E0     		b	.L127
 2555              	.L137:
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2556              		.loc 1 1633 11
 2557 0086 FB68     		ldr	r3, [r7, #12]
 2558 0088 1B68     		ldr	r3, [r3]
 2559 008a 1B68     		ldr	r3, [r3]
 2560 008c 03F01003 		and	r3, r3, #16
 2561              		.loc 1 1633 10
 2562 0090 102B     		cmp	r3, #16
 2563 0092 17D1     		bne	.L128
 2564              	.LBB366:
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 84


1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2565              		.loc 1 1636 9
 2566 0094 0023     		movs	r3, #0
 2567 0096 3B61     		str	r3, [r7, #16]
 2568 0098 FB68     		ldr	r3, [r7, #12]
 2569 009a 1B68     		ldr	r3, [r3]
 2570 009c 1B68     		ldr	r3, [r3]
 2571 009e 3B61     		str	r3, [r7, #16]
 2572 00a0 FB68     		ldr	r3, [r7, #12]
 2573 00a2 1B68     		ldr	r3, [r3]
 2574 00a4 5B68     		ldr	r3, [r3, #4]
 2575 00a6 3B61     		str	r3, [r7, #16]
 2576 00a8 3B69     		ldr	r3, [r7, #16]
 2577              	.LBE366:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
 2578              		.loc 1 1640 13
 2579 00aa 3B68     		ldr	r3, [r7]
 2580 00ac 1B88     		ldrh	r3, [r3]
 2581              		.loc 1 1640 12
 2582 00ae 002B     		cmp	r3, #0
 2583 00b0 08D0     		beq	.L128
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 2584              		.loc 1 1642 30
 2585 00b2 FB68     		ldr	r3, [r7, #12]
 2586 00b4 0222     		movs	r2, #2
 2587 00b6 5A63     		str	r2, [r3, #52]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2588              		.loc 1 1643 26
 2589 00b8 FB68     		ldr	r3, [r7, #12]
 2590 00ba 2022     		movs	r2, #32
 2591 00bc 83F84220 		strb	r2, [r3, #66]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
 2592              		.loc 1 1645 18
 2593 00c0 0023     		movs	r3, #0
 2594 00c2 6DE0     		b	.L124
 2595              	.L128:
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2596              		.loc 1 1650 11
 2597 00c4 FB68     		ldr	r3, [r7, #12]
 2598 00c6 1B68     		ldr	r3, [r3]
 2599 00c8 1B68     		ldr	r3, [r3]
 2600 00ca 03F02003 		and	r3, r3, #32
 2601              		.loc 1 1650 10
 2602 00ce 202B     		cmp	r3, #32
 2603 00d0 3CD1     		bne	.L129
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 85


 2604              		.loc 1 1652 12
 2605 00d2 FB69     		ldr	r3, [r7, #28]
 2606 00d4 002B     		cmp	r3, #0
 2607 00d6 0CD1     		bne	.L130
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2608              		.loc 1 1654 42
 2609 00d8 FB68     		ldr	r3, [r7, #12]
 2610 00da 1B68     		ldr	r3, [r3]
 2611              		.loc 1 1654 52
 2612 00dc 5B68     		ldr	r3, [r3, #4]
 2613              		.loc 1 1654 26
 2614 00de 9BB2     		uxth	r3, r3
 2615 00e0 C3F30803 		ubfx	r3, r3, #0, #9
 2616 00e4 9AB2     		uxth	r2, r3
 2617              		.loc 1 1654 24
 2618 00e6 BB69     		ldr	r3, [r7, #24]
 2619 00e8 1A80     		strh	r2, [r3]	@ movhi
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2620              		.loc 1 1655 22
 2621 00ea BB69     		ldr	r3, [r7, #24]
 2622 00ec 0233     		adds	r3, r3, #2
 2623 00ee BB61     		str	r3, [r7, #24]
 2624 00f0 1FE0     		b	.L131
 2625              	.L130:
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
 2626              		.loc 1 1659 27
 2627 00f2 FB68     		ldr	r3, [r7, #12]
 2628 00f4 9B68     		ldr	r3, [r3, #8]
 2629              		.loc 1 1659 14
 2630 00f6 B3F5805F 		cmp	r3, #4096
 2631 00fa 07D0     		beq	.L132
 2632              		.loc 1 1659 78 discriminator 1
 2633 00fc FB68     		ldr	r3, [r7, #12]
 2634 00fe 9B68     		ldr	r3, [r3, #8]
 2635              		.loc 1 1659 62 discriminator 1
 2636 0100 002B     		cmp	r3, #0
 2637 0102 0AD1     		bne	.L133
 2638              		.loc 1 1659 128 discriminator 2
 2639 0104 FB68     		ldr	r3, [r7, #12]
 2640 0106 1B69     		ldr	r3, [r3, #16]
 2641              		.loc 1 1659 113 discriminator 2
 2642 0108 002B     		cmp	r3, #0
 2643 010a 06D1     		bne	.L133
 2644              	.L132:
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2645              		.loc 1 1661 42
 2646 010c FB68     		ldr	r3, [r7, #12]
 2647 010e 1B68     		ldr	r3, [r3]
 2648              		.loc 1 1661 52
 2649 0110 5B68     		ldr	r3, [r3, #4]
 2650              		.loc 1 1661 27
 2651 0112 DAB2     		uxtb	r2, r3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 86


 2652              		.loc 1 1661 25
 2653 0114 FB69     		ldr	r3, [r7, #28]
 2654 0116 1A70     		strb	r2, [r3]
 2655 0118 08E0     		b	.L134
 2656              	.L133:
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2657              		.loc 1 1665 42
 2658 011a FB68     		ldr	r3, [r7, #12]
 2659 011c 1B68     		ldr	r3, [r3]
 2660              		.loc 1 1665 52
 2661 011e 5B68     		ldr	r3, [r3, #4]
 2662              		.loc 1 1665 27
 2663 0120 DBB2     		uxtb	r3, r3
 2664 0122 03F07F03 		and	r3, r3, #127
 2665 0126 DAB2     		uxtb	r2, r3
 2666              		.loc 1 1665 25
 2667 0128 FB69     		ldr	r3, [r7, #28]
 2668 012a 1A70     		strb	r2, [r3]
 2669              	.L134:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
 2670              		.loc 1 1668 21
 2671 012c FB69     		ldr	r3, [r7, #28]
 2672 012e 0133     		adds	r3, r3, #1
 2673 0130 FB61     		str	r3, [r7, #28]
 2674              	.L131:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
 2675              		.loc 1 1671 9
 2676 0132 3B68     		ldr	r3, [r7]
 2677 0134 1B88     		ldrh	r3, [r3]
 2678              		.loc 1 1671 16
 2679 0136 0133     		adds	r3, r3, #1
 2680 0138 9AB2     		uxth	r2, r3
 2681 013a 3B68     		ldr	r3, [r7]
 2682 013c 1A80     		strh	r2, [r3]	@ movhi
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
 2683              		.loc 1 1672 14
 2684 013e FB68     		ldr	r3, [r7, #12]
 2685 0140 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2686 0142 9BB2     		uxth	r3, r3
 2687              		.loc 1 1672 27
 2688 0144 013B     		subs	r3, r3, #1
 2689 0146 9AB2     		uxth	r2, r3
 2690 0148 FB68     		ldr	r3, [r7, #12]
 2691 014a DA85     		strh	r2, [r3, #46]	@ movhi
 2692              	.L129:
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2693              		.loc 1 1676 10
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 87


 2694 014c BB6A     		ldr	r3, [r7, #40]
 2695 014e B3F1FF3F 		cmp	r3, #-1
 2696 0152 10D0     		beq	.L127
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2697              		.loc 1 1678 15
 2698 0154 FFF7FEFF 		bl	HAL_GetTick
 2699 0158 0246     		mov	r2, r0
 2700              		.loc 1 1678 29 discriminator 1
 2701 015a 7B69     		ldr	r3, [r7, #20]
 2702 015c D31A     		subs	r3, r2, r3
 2703              		.loc 1 1678 12 discriminator 1
 2704 015e BA6A     		ldr	r2, [r7, #40]
 2705 0160 9A42     		cmp	r2, r3
 2706 0162 02D3     		bcc	.L136
 2707              		.loc 1 1678 53 discriminator 1
 2708 0164 BB6A     		ldr	r3, [r7, #40]
 2709 0166 002B     		cmp	r3, #0
 2710 0168 05D1     		bne	.L127
 2711              	.L136:
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2712              		.loc 1 1680 26
 2713 016a FB68     		ldr	r3, [r7, #12]
 2714 016c 2022     		movs	r2, #32
 2715 016e 83F84220 		strb	r2, [r3, #66]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2716              		.loc 1 1682 18
 2717 0172 0323     		movs	r3, #3
 2718 0174 14E0     		b	.L124
 2719              	.L127:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2720              		.loc 1 1630 17
 2721 0176 FB68     		ldr	r3, [r7, #12]
 2722 0178 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2723 017a 9BB2     		uxth	r3, r3
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2724              		.loc 1 1630 31
 2725 017c 002B     		cmp	r3, #0
 2726 017e 82D1     		bne	.L137
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2727              		.loc 1 1688 19
 2728 0180 FB68     		ldr	r3, [r7, #12]
 2729 0182 9A8D     		ldrh	r2, [r3, #44]
 2730              		.loc 1 1688 39
 2731 0184 FB68     		ldr	r3, [r7, #12]
 2732 0186 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2733 0188 9BB2     		uxth	r3, r3
 2734              		.loc 1 1688 32
 2735 018a D31A     		subs	r3, r2, r3
 2736 018c 9AB2     		uxth	r2, r3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 88


 2737              		.loc 1 1688 12
 2738 018e 3B68     		ldr	r3, [r7]
 2739 0190 1A80     		strh	r2, [r3]	@ movhi
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2740              		.loc 1 1690 20
 2741 0192 FB68     		ldr	r3, [r7, #12]
 2742 0194 2022     		movs	r2, #32
 2743 0196 83F84220 		strb	r2, [r3, #66]
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2744              		.loc 1 1692 12
 2745 019a 0023     		movs	r3, #0
 2746 019c 00E0     		b	.L124
 2747              	.L121:
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2748              		.loc 1 1696 12
 2749 019e 0223     		movs	r3, #2
 2750              	.L124:
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2751              		.loc 1 1698 1
 2752 01a0 1846     		mov	r0, r3
 2753 01a2 2037     		adds	r7, r7, #32
 2754              	.LCFI88:
 2755              		.cfi_def_cfa_offset 8
 2756 01a4 BD46     		mov	sp, r7
 2757              	.LCFI89:
 2758              		.cfi_def_cfa_register 13
 2759              		@ sp needed
 2760 01a6 80BD     		pop	{r7, pc}
 2761              		.cfi_endproc
 2762              	.LFE150:
 2764              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2765              		.align	1
 2766              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2767              		.syntax unified
 2768              		.thumb
 2769              		.thumb_func
 2771              	HAL_UARTEx_ReceiveToIdle_IT:
 2772              	.LFB151:
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 89


1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2773              		.loc 1 1714 1
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 48
 2776              		@ frame_needed = 1, uses_anonymous_args = 0
 2777 0000 80B5     		push	{r7, lr}
 2778              	.LCFI90:
 2779              		.cfi_def_cfa_offset 8
 2780              		.cfi_offset 7, -8
 2781              		.cfi_offset 14, -4
 2782 0002 8CB0     		sub	sp, sp, #48
 2783              	.LCFI91:
 2784              		.cfi_def_cfa_offset 56
 2785 0004 00AF     		add	r7, sp, #0
 2786              	.LCFI92:
 2787              		.cfi_def_cfa_register 7
 2788 0006 F860     		str	r0, [r7, #12]
 2789 0008 B960     		str	r1, [r7, #8]
 2790 000a 1346     		mov	r3, r2
 2791 000c FB80     		strh	r3, [r7, #6]	@ movhi
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2792              		.loc 1 1718 12
 2793 000e FB68     		ldr	r3, [r7, #12]
 2794 0010 93F84230 		ldrb	r3, [r3, #66]
 2795 0014 DBB2     		uxtb	r3, r3
 2796              		.loc 1 1718 6
 2797 0016 202B     		cmp	r3, #32
 2798 0018 4AD1     		bne	.L139
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2799              		.loc 1 1720 8
 2800 001a BB68     		ldr	r3, [r7, #8]
 2801 001c 002B     		cmp	r3, #0
 2802 001e 02D0     		beq	.L140
 2803              		.loc 1 1720 25 discriminator 1
 2804 0020 FB88     		ldrh	r3, [r7, #6]
 2805 0022 002B     		cmp	r3, #0
 2806 0024 01D1     		bne	.L141
 2807              	.L140:
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2808              		.loc 1 1722 14
 2809 0026 0123     		movs	r3, #1
 2810 0028 43E0     		b	.L142
 2811              	.L141:
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2812              		.loc 1 1726 26
 2813 002a FB68     		ldr	r3, [r7, #12]
 2814 002c 0122     		movs	r2, #1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 90


 2815 002e 1A63     		str	r2, [r3, #48]
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2816              		.loc 1 1727 24
 2817 0030 FB68     		ldr	r3, [r7, #12]
 2818 0032 0022     		movs	r2, #0
 2819 0034 5A63     		str	r2, [r3, #52]
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2820              		.loc 1 1729 15
 2821 0036 FB88     		ldrh	r3, [r7, #6]
 2822 0038 1A46     		mov	r2, r3
 2823 003a B968     		ldr	r1, [r7, #8]
 2824 003c F868     		ldr	r0, [r7, #12]
 2825 003e FFF7FEFF 		bl	UART_Start_Receive_IT
 2826 0042 0346     		mov	r3, r0
 2827 0044 87F82F30 		strb	r3, [r7, #47]
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2828              		.loc 1 1732 8
 2829 0048 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2830 004c 002B     		cmp	r3, #0
 2831 004e 2CD1     		bne	.L143
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2832              		.loc 1 1734 16
 2833 0050 FB68     		ldr	r3, [r7, #12]
 2834 0052 1B6B     		ldr	r3, [r3, #48]
 2835              		.loc 1 1734 10
 2836 0054 012B     		cmp	r3, #1
 2837 0056 25D1     		bne	.L144
 2838              	.LBB367:
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2839              		.loc 1 1736 9
 2840 0058 0023     		movs	r3, #0
 2841 005a 3B61     		str	r3, [r7, #16]
 2842 005c FB68     		ldr	r3, [r7, #12]
 2843 005e 1B68     		ldr	r3, [r3]
 2844 0060 1B68     		ldr	r3, [r3]
 2845 0062 3B61     		str	r3, [r7, #16]
 2846 0064 FB68     		ldr	r3, [r7, #12]
 2847 0066 1B68     		ldr	r3, [r3]
 2848 0068 5B68     		ldr	r3, [r3, #4]
 2849 006a 3B61     		str	r3, [r7, #16]
 2850 006c 3B69     		ldr	r3, [r7, #16]
 2851              	.L147:
 2852              	.LBE367:
 2853              	.LBB368:
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2854              		.loc 1 1737 9 discriminator 1
 2855 006e FB68     		ldr	r3, [r7, #12]
 2856 0070 1B68     		ldr	r3, [r3]
 2857 0072 0C33     		adds	r3, r3, #12
 2858 0074 BB61     		str	r3, [r7, #24]
 2859              	.LBB369:
 2860              	.LBB370:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 91


 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2861              		.loc 2 480 4
 2862 0076 BB69     		ldr	r3, [r7, #24]
 2863              		.syntax unified
 2864              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2865 0078 53E8003F 		ldrex r3, [r3]
 2866              	@ 0 "" 2
 2867              		.thumb
 2868              		.syntax unified
 2869 007c 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2870              		.loc 2 481 10
 2871 007e 7B69     		ldr	r3, [r7, #20]
 2872              	.LBE370:
 2873              	.LBE369:
 2874              		.loc 1 1737 9 discriminator 1
 2875 0080 43F01003 		orr	r3, r3, #16
 2876 0084 BB62     		str	r3, [r7, #40]
 2877 0086 FB68     		ldr	r3, [r7, #12]
 2878 0088 1B68     		ldr	r3, [r3]
 2879 008a 0C33     		adds	r3, r3, #12
 2880 008c BA6A     		ldr	r2, [r7, #40]
 2881 008e 7A62     		str	r2, [r7, #36]
 2882 0090 3B62     		str	r3, [r7, #32]
 2883              	.LBB371:
 2884              	.LBB372:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2885              		.loc 2 531 4
 2886 0092 396A     		ldr	r1, [r7, #32]
 2887 0094 7A6A     		ldr	r2, [r7, #36]
 2888              		.syntax unified
 2889              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2890 0096 41E80023 		strex r3, r2, [r1]
 2891              	@ 0 "" 2
 2892              		.thumb
 2893              		.syntax unified
 2894 009a FB61     		str	r3, [r7, #28]
 2895              		.loc 2 532 10
 2896 009c FB69     		ldr	r3, [r7, #28]
 2897              	.LBE372:
 2898              	.LBE371:
 2899              		.loc 1 1737 9 discriminator 1
 2900 009e 002B     		cmp	r3, #0
 2901 00a0 E5D1     		bne	.L147
 2902 00a2 02E0     		b	.L143
 2903              	.L144:
 2904              	.LBE368:
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 2905              		.loc 1 1745 16
 2906 00a4 0123     		movs	r3, #1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 92


 2907 00a6 87F82F30 		strb	r3, [r7, #47]
 2908              	.L143:
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 2909              		.loc 1 1749 12
 2910 00aa 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2911 00ae 00E0     		b	.L142
 2912              	.L139:
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2913              		.loc 1 1753 12
 2914 00b0 0223     		movs	r3, #2
 2915              	.L142:
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2916              		.loc 1 1755 1
 2917 00b2 1846     		mov	r0, r3
 2918 00b4 3037     		adds	r7, r7, #48
 2919              	.LCFI93:
 2920              		.cfi_def_cfa_offset 8
 2921 00b6 BD46     		mov	sp, r7
 2922              	.LCFI94:
 2923              		.cfi_def_cfa_register 13
 2924              		@ sp needed
 2925 00b8 80BD     		pop	{r7, pc}
 2926              		.cfi_endproc
 2927              	.LFE151:
 2929              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 2930              		.align	1
 2931              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 2932              		.syntax unified
 2933              		.thumb
 2934              		.thumb_func
 2936              	HAL_UARTEx_ReceiveToIdle_DMA:
 2937              	.LFB152:
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 93


1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2938              		.loc 1 1774 1
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 48
 2941              		@ frame_needed = 1, uses_anonymous_args = 0
 2942 0000 80B5     		push	{r7, lr}
 2943              	.LCFI95:
 2944              		.cfi_def_cfa_offset 8
 2945              		.cfi_offset 7, -8
 2946              		.cfi_offset 14, -4
 2947 0002 8CB0     		sub	sp, sp, #48
 2948              	.LCFI96:
 2949              		.cfi_def_cfa_offset 56
 2950 0004 00AF     		add	r7, sp, #0
 2951              	.LCFI97:
 2952              		.cfi_def_cfa_register 7
 2953 0006 F860     		str	r0, [r7, #12]
 2954 0008 B960     		str	r1, [r7, #8]
 2955 000a 1346     		mov	r3, r2
 2956 000c FB80     		strh	r3, [r7, #6]	@ movhi
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2957              		.loc 1 1778 12
 2958 000e FB68     		ldr	r3, [r7, #12]
 2959 0010 93F84230 		ldrb	r3, [r3, #66]
 2960 0014 DBB2     		uxtb	r3, r3
 2961              		.loc 1 1778 6
 2962 0016 202B     		cmp	r3, #32
 2963 0018 4AD1     		bne	.L149
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2964              		.loc 1 1780 8
 2965 001a BB68     		ldr	r3, [r7, #8]
 2966 001c 002B     		cmp	r3, #0
 2967 001e 02D0     		beq	.L150
 2968              		.loc 1 1780 25 discriminator 1
 2969 0020 FB88     		ldrh	r3, [r7, #6]
 2970 0022 002B     		cmp	r3, #0
 2971 0024 01D1     		bne	.L151
 2972              	.L150:
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2973              		.loc 1 1782 14
 2974 0026 0123     		movs	r3, #1
 2975 0028 43E0     		b	.L152
 2976              	.L151:
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2977              		.loc 1 1786 26
 2978 002a FB68     		ldr	r3, [r7, #12]
 2979 002c 0122     		movs	r2, #1
 2980 002e 1A63     		str	r2, [r3, #48]
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 94


 2981              		.loc 1 1787 24
 2982 0030 FB68     		ldr	r3, [r7, #12]
 2983 0032 0022     		movs	r2, #0
 2984 0034 5A63     		str	r2, [r3, #52]
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 2985              		.loc 1 1789 15
 2986 0036 FB88     		ldrh	r3, [r7, #6]
 2987 0038 1A46     		mov	r2, r3
 2988 003a B968     		ldr	r1, [r7, #8]
 2989 003c F868     		ldr	r0, [r7, #12]
 2990 003e FFF7FEFF 		bl	UART_Start_Receive_DMA
 2991 0042 0346     		mov	r3, r0
 2992 0044 87F82F30 		strb	r3, [r7, #47]
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2993              		.loc 1 1792 8
 2994 0048 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2995 004c 002B     		cmp	r3, #0
 2996 004e 2CD1     		bne	.L153
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2997              		.loc 1 1794 16
 2998 0050 FB68     		ldr	r3, [r7, #12]
 2999 0052 1B6B     		ldr	r3, [r3, #48]
 3000              		.loc 1 1794 10
 3001 0054 012B     		cmp	r3, #1
 3002 0056 25D1     		bne	.L154
 3003              	.LBB373:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3004              		.loc 1 1796 9
 3005 0058 0023     		movs	r3, #0
 3006 005a 3B61     		str	r3, [r7, #16]
 3007 005c FB68     		ldr	r3, [r7, #12]
 3008 005e 1B68     		ldr	r3, [r3]
 3009 0060 1B68     		ldr	r3, [r3]
 3010 0062 3B61     		str	r3, [r7, #16]
 3011 0064 FB68     		ldr	r3, [r7, #12]
 3012 0066 1B68     		ldr	r3, [r3]
 3013 0068 5B68     		ldr	r3, [r3, #4]
 3014 006a 3B61     		str	r3, [r7, #16]
 3015 006c 3B69     		ldr	r3, [r7, #16]
 3016              	.L157:
 3017              	.LBE373:
 3018              	.LBB374:
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3019              		.loc 1 1797 9 discriminator 1
 3020 006e FB68     		ldr	r3, [r7, #12]
 3021 0070 1B68     		ldr	r3, [r3]
 3022 0072 0C33     		adds	r3, r3, #12
 3023 0074 BB61     		str	r3, [r7, #24]
 3024              	.LBB375:
 3025              	.LBB376:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3026              		.loc 2 480 4
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 95


 3027 0076 BB69     		ldr	r3, [r7, #24]
 3028              		.syntax unified
 3029              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3030 0078 53E8003F 		ldrex r3, [r3]
 3031              	@ 0 "" 2
 3032              		.thumb
 3033              		.syntax unified
 3034 007c 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3035              		.loc 2 481 10
 3036 007e 7B69     		ldr	r3, [r7, #20]
 3037              	.LBE376:
 3038              	.LBE375:
 3039              		.loc 1 1797 9 discriminator 1
 3040 0080 43F01003 		orr	r3, r3, #16
 3041 0084 BB62     		str	r3, [r7, #40]
 3042 0086 FB68     		ldr	r3, [r7, #12]
 3043 0088 1B68     		ldr	r3, [r3]
 3044 008a 0C33     		adds	r3, r3, #12
 3045 008c BA6A     		ldr	r2, [r7, #40]
 3046 008e 7A62     		str	r2, [r7, #36]
 3047 0090 3B62     		str	r3, [r7, #32]
 3048              	.LBB377:
 3049              	.LBB378:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3050              		.loc 2 531 4
 3051 0092 396A     		ldr	r1, [r7, #32]
 3052 0094 7A6A     		ldr	r2, [r7, #36]
 3053              		.syntax unified
 3054              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3055 0096 41E80023 		strex r3, r2, [r1]
 3056              	@ 0 "" 2
 3057              		.thumb
 3058              		.syntax unified
 3059 009a FB61     		str	r3, [r7, #28]
 3060              		.loc 2 532 10
 3061 009c FB69     		ldr	r3, [r7, #28]
 3062              	.LBE378:
 3063              	.LBE377:
 3064              		.loc 1 1797 9 discriminator 1
 3065 009e 002B     		cmp	r3, #0
 3066 00a0 E5D1     		bne	.L157
 3067 00a2 02E0     		b	.L153
 3068              	.L154:
 3069              	.LBE374:
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3070              		.loc 1 1805 16
 3071 00a4 0123     		movs	r3, #1
 3072 00a6 87F82F30 		strb	r3, [r7, #47]
 3073              	.L153:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 96


1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3074              		.loc 1 1809 12
 3075 00aa 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3076 00ae 00E0     		b	.L152
 3077              	.L149:
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3078              		.loc 1 1813 12
 3079 00b0 0223     		movs	r3, #2
 3080              	.L152:
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3081              		.loc 1 1815 1
 3082 00b2 1846     		mov	r0, r3
 3083 00b4 3037     		adds	r7, r7, #48
 3084              	.LCFI98:
 3085              		.cfi_def_cfa_offset 8
 3086 00b6 BD46     		mov	sp, r7
 3087              	.LCFI99:
 3088              		.cfi_def_cfa_register 13
 3089              		@ sp needed
 3090 00b8 80BD     		pop	{r7, pc}
 3091              		.cfi_endproc
 3092              	.LFE152:
 3094              		.section	.text.HAL_UARTEx_GetRxEventType,"ax",%progbits
 3095              		.align	1
 3096              		.global	HAL_UARTEx_GetRxEventType
 3097              		.syntax unified
 3098              		.thumb
 3099              		.thumb_func
 3101              	HAL_UARTEx_GetRxEventType:
 3102              	.LFB153:
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Provide Rx Event type that has lead to RxEvent callback execution.
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note  When HAL_UARTEx_ReceiveToIdle_IT() or HAL_UARTEx_ReceiveToIdle_DMA() API are called, pro
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        of reception process is provided to application through calls of Rx Event callback (eith
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        HAL_UARTEx_RxEventCallback() or user registered one). As several types of events could o
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        Half Transfer, or Transfer Complete), this function allows to retrieve the Rx Event type
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        to Rx Event callback execution.
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note  This function is expected to be called within the user implementation of Rx Event Callba
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        in order to provide the accurate value :
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In Interrupt Mode :
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *             received data is lower than expected one)
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In DMA Mode :
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_HT : when half of expected nb of data has been received
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *             received data is lower than expected one).
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In DMA mode, RxEvent callback could be called several times;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 97


1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        When DMA is configured in Normal Mode, HT event does not stop Reception process;
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        When DMA is configured in Circular Mode, HT, TC or IDLE events don't stop Reception proc
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval Rx Event Type (returned value will be a value of @ref UART_RxEvent_Type_Values)
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_RxEventTypeTypeDef HAL_UARTEx_GetRxEventType(UART_HandleTypeDef *huart)
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3103              		.loc 1 1842 1
 3104              		.cfi_startproc
 3105              		@ args = 0, pretend = 0, frame = 8
 3106              		@ frame_needed = 1, uses_anonymous_args = 0
 3107              		@ link register save eliminated.
 3108 0000 80B4     		push	{r7}
 3109              	.LCFI100:
 3110              		.cfi_def_cfa_offset 4
 3111              		.cfi_offset 7, -4
 3112 0002 83B0     		sub	sp, sp, #12
 3113              	.LCFI101:
 3114              		.cfi_def_cfa_offset 16
 3115 0004 00AF     		add	r7, sp, #0
 3116              	.LCFI102:
 3117              		.cfi_def_cfa_register 7
 3118 0006 7860     		str	r0, [r7, #4]
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Return Rx Event type value, as stored in UART handle */
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return(huart->RxEventType);
 3119              		.loc 1 1844 15
 3120 0008 7B68     		ldr	r3, [r7, #4]
 3121 000a 5B6B     		ldr	r3, [r3, #52]
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3122              		.loc 1 1845 1
 3123 000c 1846     		mov	r0, r3
 3124 000e 0C37     		adds	r7, r7, #12
 3125              	.LCFI103:
 3126              		.cfi_def_cfa_offset 4
 3127 0010 BD46     		mov	sp, r7
 3128              	.LCFI104:
 3129              		.cfi_def_cfa_register 13
 3130              		@ sp needed
 3131 0012 5DF8047B 		ldr	r7, [sp], #4
 3132              	.LCFI105:
 3133              		.cfi_restore 7
 3134              		.cfi_def_cfa_offset 0
 3135 0016 7047     		bx	lr
 3136              		.cfi_endproc
 3137              	.LFE153:
 3139              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3140              		.align	1
 3141              		.global	HAL_UART_Abort
 3142              		.syntax unified
 3143              		.thumb
 3144              		.thumb_func
 3146              	HAL_UART_Abort:
 3147              	.LFB154:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 98


1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3148              		.loc 1 1860 1
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 128
 3151              		@ frame_needed = 1, uses_anonymous_args = 0
 3152 0000 80B5     		push	{r7, lr}
 3153              	.LCFI106:
 3154              		.cfi_def_cfa_offset 8
 3155              		.cfi_offset 7, -8
 3156              		.cfi_offset 14, -4
 3157 0002 A0B0     		sub	sp, sp, #128
 3158              	.LCFI107:
 3159              		.cfi_def_cfa_offset 136
 3160 0004 00AF     		add	r7, sp, #0
 3161              	.LCFI108:
 3162              		.cfi_def_cfa_register 7
 3163 0006 7860     		str	r0, [r7, #4]
 3164              	.L163:
 3165              	.LBB379:
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3166              		.loc 1 1862 3 discriminator 1
 3167 0008 7B68     		ldr	r3, [r7, #4]
 3168 000a 1B68     		ldr	r3, [r3]
 3169 000c 0C33     		adds	r3, r3, #12
 3170 000e FB65     		str	r3, [r7, #92]
 3171              	.LBB380:
 3172              	.LBB381:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3173              		.loc 2 480 4
 3174 0010 FB6D     		ldr	r3, [r7, #92]
 3175              		.syntax unified
 3176              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3177 0012 53E8003F 		ldrex r3, [r3]
 3178              	@ 0 "" 2
 3179              		.thumb
 3180              		.syntax unified
 3181 0016 BB65     		str	r3, [r7, #88]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3182              		.loc 2 481 10
 3183 0018 BB6D     		ldr	r3, [r7, #88]
 3184              	.LBE381:
 3185              	.LBE380:
 3186              		.loc 1 1862 3 discriminator 1
 3187 001a 23F4F073 		bic	r3, r3, #480
 3188 001e FB67     		str	r3, [r7, #124]
 3189 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 99


 3190 0022 1B68     		ldr	r3, [r3]
 3191 0024 0C33     		adds	r3, r3, #12
 3192 0026 FA6F     		ldr	r2, [r7, #124]
 3193 0028 BA66     		str	r2, [r7, #104]
 3194 002a 7B66     		str	r3, [r7, #100]
 3195              	.LBB382:
 3196              	.LBB383:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3197              		.loc 2 531 4
 3198 002c 796E     		ldr	r1, [r7, #100]
 3199 002e BA6E     		ldr	r2, [r7, #104]
 3200              		.syntax unified
 3201              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3202 0030 41E80023 		strex r3, r2, [r1]
 3203              	@ 0 "" 2
 3204              		.thumb
 3205              		.syntax unified
 3206 0034 3B66     		str	r3, [r7, #96]
 3207              		.loc 2 532 10
 3208 0036 3B6E     		ldr	r3, [r7, #96]
 3209              	.LBE383:
 3210              	.LBE382:
 3211              		.loc 1 1862 3 discriminator 1
 3212 0038 002B     		cmp	r3, #0
 3213 003a E5D1     		bne	.L163
 3214              	.L166:
 3215              	.LBE379:
 3216              	.LBB384:
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3217              		.loc 1 1863 3 discriminator 1
 3218 003c 7B68     		ldr	r3, [r7, #4]
 3219 003e 1B68     		ldr	r3, [r3]
 3220 0040 1433     		adds	r3, r3, #20
 3221 0042 BB64     		str	r3, [r7, #72]
 3222              	.LBB385:
 3223              	.LBB386:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3224              		.loc 2 480 4
 3225 0044 BB6C     		ldr	r3, [r7, #72]
 3226              		.syntax unified
 3227              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3228 0046 53E8003F 		ldrex r3, [r3]
 3229              	@ 0 "" 2
 3230              		.thumb
 3231              		.syntax unified
 3232 004a 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3233              		.loc 2 481 10
 3234 004c 7B6C     		ldr	r3, [r7, #68]
 3235              	.LBE386:
 3236              	.LBE385:
 3237              		.loc 1 1863 3 discriminator 1
 3238 004e 23F00103 		bic	r3, r3, #1
 3239 0052 BB67     		str	r3, [r7, #120]
 3240 0054 7B68     		ldr	r3, [r7, #4]
 3241 0056 1B68     		ldr	r3, [r3]
 3242 0058 1433     		adds	r3, r3, #20
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 100


 3243 005a BA6F     		ldr	r2, [r7, #120]
 3244 005c 7A65     		str	r2, [r7, #84]
 3245 005e 3B65     		str	r3, [r7, #80]
 3246              	.LBB387:
 3247              	.LBB388:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3248              		.loc 2 531 4
 3249 0060 396D     		ldr	r1, [r7, #80]
 3250 0062 7A6D     		ldr	r2, [r7, #84]
 3251              		.syntax unified
 3252              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3253 0064 41E80023 		strex r3, r2, [r1]
 3254              	@ 0 "" 2
 3255              		.thumb
 3256              		.syntax unified
 3257 0068 FB64     		str	r3, [r7, #76]
 3258              		.loc 2 532 10
 3259 006a FB6C     		ldr	r3, [r7, #76]
 3260              	.LBE388:
 3261              	.LBE387:
 3262              		.loc 1 1863 3 discriminator 1
 3263 006c 002B     		cmp	r3, #0
 3264 006e E5D1     		bne	.L166
 3265              	.LBE384:
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3266              		.loc 1 1866 12
 3267 0070 7B68     		ldr	r3, [r7, #4]
 3268 0072 1B6B     		ldr	r3, [r3, #48]
 3269              		.loc 1 1866 6
 3270 0074 012B     		cmp	r3, #1
 3271 0076 19D1     		bne	.L167
 3272              	.L170:
 3273              	.LBB389:
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3274              		.loc 1 1868 5 discriminator 1
 3275 0078 7B68     		ldr	r3, [r7, #4]
 3276 007a 1B68     		ldr	r3, [r3]
 3277 007c 0C33     		adds	r3, r3, #12
 3278 007e 7B63     		str	r3, [r7, #52]
 3279              	.LBB390:
 3280              	.LBB391:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3281              		.loc 2 480 4
 3282 0080 7B6B     		ldr	r3, [r7, #52]
 3283              		.syntax unified
 3284              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3285 0082 53E8003F 		ldrex r3, [r3]
 3286              	@ 0 "" 2
 3287              		.thumb
 3288              		.syntax unified
 3289 0086 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3290              		.loc 2 481 10
 3291 0088 3B6B     		ldr	r3, [r7, #48]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 101


 3292              	.LBE391:
 3293              	.LBE390:
 3294              		.loc 1 1868 5 discriminator 1
 3295 008a 23F01003 		bic	r3, r3, #16
 3296 008e 7B67     		str	r3, [r7, #116]
 3297 0090 7B68     		ldr	r3, [r7, #4]
 3298 0092 1B68     		ldr	r3, [r3]
 3299 0094 0C33     		adds	r3, r3, #12
 3300 0096 7A6F     		ldr	r2, [r7, #116]
 3301 0098 3A64     		str	r2, [r7, #64]
 3302 009a FB63     		str	r3, [r7, #60]
 3303              	.LBB392:
 3304              	.LBB393:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3305              		.loc 2 531 4
 3306 009c F96B     		ldr	r1, [r7, #60]
 3307 009e 3A6C     		ldr	r2, [r7, #64]
 3308              		.syntax unified
 3309              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3310 00a0 41E80023 		strex r3, r2, [r1]
 3311              	@ 0 "" 2
 3312              		.thumb
 3313              		.syntax unified
 3314 00a4 BB63     		str	r3, [r7, #56]
 3315              		.loc 2 532 10
 3316 00a6 BB6B     		ldr	r3, [r7, #56]
 3317              	.LBE393:
 3318              	.LBE392:
 3319              		.loc 1 1868 5 discriminator 1
 3320 00a8 002B     		cmp	r3, #0
 3321 00aa E5D1     		bne	.L170
 3322              	.L167:
 3323              	.LBE389:
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3324              		.loc 1 1872 7
 3325 00ac 7B68     		ldr	r3, [r7, #4]
 3326 00ae 1B68     		ldr	r3, [r3]
 3327 00b0 5B69     		ldr	r3, [r3, #20]
 3328 00b2 03F08003 		and	r3, r3, #128
 3329              		.loc 1 1872 6
 3330 00b6 802B     		cmp	r3, #128
 3331 00b8 36D1     		bne	.L171
 3332              	.L174:
 3333              	.LBB394:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3334              		.loc 1 1874 5 discriminator 1
 3335 00ba 7B68     		ldr	r3, [r7, #4]
 3336 00bc 1B68     		ldr	r3, [r3]
 3337 00be 1433     		adds	r3, r3, #20
 3338 00c0 3B62     		str	r3, [r7, #32]
 3339              	.LBB395:
 3340              	.LBB396:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 102


 3341              		.loc 2 480 4
 3342 00c2 3B6A     		ldr	r3, [r7, #32]
 3343              		.syntax unified
 3344              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3345 00c4 53E8003F 		ldrex r3, [r3]
 3346              	@ 0 "" 2
 3347              		.thumb
 3348              		.syntax unified
 3349 00c8 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3350              		.loc 2 481 10
 3351 00ca FB69     		ldr	r3, [r7, #28]
 3352              	.LBE396:
 3353              	.LBE395:
 3354              		.loc 1 1874 5 discriminator 1
 3355 00cc 23F08003 		bic	r3, r3, #128
 3356 00d0 3B67     		str	r3, [r7, #112]
 3357 00d2 7B68     		ldr	r3, [r7, #4]
 3358 00d4 1B68     		ldr	r3, [r3]
 3359 00d6 1433     		adds	r3, r3, #20
 3360 00d8 3A6F     		ldr	r2, [r7, #112]
 3361 00da FA62     		str	r2, [r7, #44]
 3362 00dc BB62     		str	r3, [r7, #40]
 3363              	.LBB397:
 3364              	.LBB398:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3365              		.loc 2 531 4
 3366 00de B96A     		ldr	r1, [r7, #40]
 3367 00e0 FA6A     		ldr	r2, [r7, #44]
 3368              		.syntax unified
 3369              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3370 00e2 41E80023 		strex r3, r2, [r1]
 3371              	@ 0 "" 2
 3372              		.thumb
 3373              		.syntax unified
 3374 00e6 7B62     		str	r3, [r7, #36]
 3375              		.loc 2 532 10
 3376 00e8 7B6A     		ldr	r3, [r7, #36]
 3377              	.LBE398:
 3378              	.LBE397:
 3379              		.loc 1 1874 5 discriminator 1
 3380 00ea 002B     		cmp	r3, #0
 3381 00ec E5D1     		bne	.L174
 3382              	.LBE394:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3383              		.loc 1 1877 14
 3384 00ee 7B68     		ldr	r3, [r7, #4]
 3385 00f0 9B6B     		ldr	r3, [r3, #56]
 3386              		.loc 1 1877 8
 3387 00f2 002B     		cmp	r3, #0
 3388 00f4 18D0     		beq	.L171
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 103


 3389              		.loc 1 1881 12
 3390 00f6 7B68     		ldr	r3, [r7, #4]
 3391 00f8 9B6B     		ldr	r3, [r3, #56]
 3392              		.loc 1 1881 40
 3393 00fa 0022     		movs	r2, #0
 3394 00fc 1A65     		str	r2, [r3, #80]
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3395              		.loc 1 1883 11
 3396 00fe 7B68     		ldr	r3, [r7, #4]
 3397 0100 9B6B     		ldr	r3, [r3, #56]
 3398 0102 1846     		mov	r0, r3
 3399 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3400 0108 0346     		mov	r3, r0
 3401              		.loc 1 1883 10 discriminator 1
 3402 010a 002B     		cmp	r3, #0
 3403 010c 0CD0     		beq	.L171
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3404              		.loc 1 1885 13
 3405 010e 7B68     		ldr	r3, [r7, #4]
 3406 0110 9B6B     		ldr	r3, [r3, #56]
 3407 0112 1846     		mov	r0, r3
 3408 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3409 0118 0346     		mov	r3, r0
 3410              		.loc 1 1885 12 discriminator 1
 3411 011a 202B     		cmp	r3, #32
 3412 011c 04D1     		bne	.L171
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3413              		.loc 1 1888 28
 3414 011e 7B68     		ldr	r3, [r7, #4]
 3415 0120 1022     		movs	r2, #16
 3416 0122 5A64     		str	r2, [r3, #68]
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3417              		.loc 1 1890 18
 3418 0124 0323     		movs	r3, #3
 3419 0126 52E0     		b	.L175
 3420              	.L171:
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3421              		.loc 1 1897 7
 3422 0128 7B68     		ldr	r3, [r7, #4]
 3423 012a 1B68     		ldr	r3, [r3]
 3424 012c 5B69     		ldr	r3, [r3, #20]
 3425 012e 03F04003 		and	r3, r3, #64
 3426              		.loc 1 1897 6
 3427 0132 402B     		cmp	r3, #64
 3428 0134 36D1     		bne	.L176
 3429              	.L179:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 104


 3430              	.LBB399:
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3431              		.loc 1 1899 5 discriminator 1
 3432 0136 7B68     		ldr	r3, [r7, #4]
 3433 0138 1B68     		ldr	r3, [r3]
 3434 013a 1433     		adds	r3, r3, #20
 3435 013c FB60     		str	r3, [r7, #12]
 3436              	.LBB400:
 3437              	.LBB401:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3438              		.loc 2 480 4
 3439 013e FB68     		ldr	r3, [r7, #12]
 3440              		.syntax unified
 3441              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3442 0140 53E8003F 		ldrex r3, [r3]
 3443              	@ 0 "" 2
 3444              		.thumb
 3445              		.syntax unified
 3446 0144 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3447              		.loc 2 481 10
 3448 0146 BB68     		ldr	r3, [r7, #8]
 3449              	.LBE401:
 3450              	.LBE400:
 3451              		.loc 1 1899 5 discriminator 1
 3452 0148 23F04003 		bic	r3, r3, #64
 3453 014c FB66     		str	r3, [r7, #108]
 3454 014e 7B68     		ldr	r3, [r7, #4]
 3455 0150 1B68     		ldr	r3, [r3]
 3456 0152 1433     		adds	r3, r3, #20
 3457 0154 FA6E     		ldr	r2, [r7, #108]
 3458 0156 BA61     		str	r2, [r7, #24]
 3459 0158 7B61     		str	r3, [r7, #20]
 3460              	.LBB402:
 3461              	.LBB403:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3462              		.loc 2 531 4
 3463 015a 7969     		ldr	r1, [r7, #20]
 3464 015c BA69     		ldr	r2, [r7, #24]
 3465              		.syntax unified
 3466              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3467 015e 41E80023 		strex r3, r2, [r1]
 3468              	@ 0 "" 2
 3469              		.thumb
 3470              		.syntax unified
 3471 0162 3B61     		str	r3, [r7, #16]
 3472              		.loc 2 532 10
 3473 0164 3B69     		ldr	r3, [r7, #16]
 3474              	.LBE403:
 3475              	.LBE402:
 3476              		.loc 1 1899 5 discriminator 1
 3477 0166 002B     		cmp	r3, #0
 3478 0168 E5D1     		bne	.L179
 3479              	.LBE399:
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 105


1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3480              		.loc 1 1902 14
 3481 016a 7B68     		ldr	r3, [r7, #4]
 3482 016c DB6B     		ldr	r3, [r3, #60]
 3483              		.loc 1 1902 8
 3484 016e 002B     		cmp	r3, #0
 3485 0170 18D0     		beq	.L176
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3486              		.loc 1 1906 12
 3487 0172 7B68     		ldr	r3, [r7, #4]
 3488 0174 DB6B     		ldr	r3, [r3, #60]
 3489              		.loc 1 1906 40
 3490 0176 0022     		movs	r2, #0
 3491 0178 1A65     		str	r2, [r3, #80]
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3492              		.loc 1 1908 11
 3493 017a 7B68     		ldr	r3, [r7, #4]
 3494 017c DB6B     		ldr	r3, [r3, #60]
 3495 017e 1846     		mov	r0, r3
 3496 0180 FFF7FEFF 		bl	HAL_DMA_Abort
 3497 0184 0346     		mov	r3, r0
 3498              		.loc 1 1908 10 discriminator 1
 3499 0186 002B     		cmp	r3, #0
 3500 0188 0CD0     		beq	.L176
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3501              		.loc 1 1910 13
 3502 018a 7B68     		ldr	r3, [r7, #4]
 3503 018c DB6B     		ldr	r3, [r3, #60]
 3504 018e 1846     		mov	r0, r3
 3505 0190 FFF7FEFF 		bl	HAL_DMA_GetError
 3506 0194 0346     		mov	r3, r0
 3507              		.loc 1 1910 12 discriminator 1
 3508 0196 202B     		cmp	r3, #32
 3509 0198 04D1     		bne	.L176
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3510              		.loc 1 1913 28
 3511 019a 7B68     		ldr	r3, [r7, #4]
 3512 019c 1022     		movs	r2, #16
 3513 019e 5A64     		str	r2, [r3, #68]
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3514              		.loc 1 1915 18
 3515 01a0 0323     		movs	r3, #3
 3516 01a2 14E0     		b	.L175
 3517              	.L176:
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 106


1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3518              		.loc 1 1922 22
 3519 01a4 7B68     		ldr	r3, [r7, #4]
 3520 01a6 0022     		movs	r2, #0
 3521 01a8 DA84     		strh	r2, [r3, #38]	@ movhi
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3522              		.loc 1 1923 22
 3523 01aa 7B68     		ldr	r3, [r7, #4]
 3524 01ac 0022     		movs	r2, #0
 3525 01ae DA85     		strh	r2, [r3, #46]	@ movhi
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3526              		.loc 1 1926 20
 3527 01b0 7B68     		ldr	r3, [r7, #4]
 3528 01b2 0022     		movs	r2, #0
 3529 01b4 5A64     		str	r2, [r3, #68]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3530              		.loc 1 1929 18
 3531 01b6 7B68     		ldr	r3, [r7, #4]
 3532 01b8 2022     		movs	r2, #32
 3533 01ba 83F84220 		strb	r2, [r3, #66]
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3534              		.loc 1 1930 17
 3535 01be 7B68     		ldr	r3, [r7, #4]
 3536 01c0 2022     		movs	r2, #32
 3537 01c2 83F84120 		strb	r2, [r3, #65]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3538              		.loc 1 1931 24
 3539 01c6 7B68     		ldr	r3, [r7, #4]
 3540 01c8 0022     		movs	r2, #0
 3541 01ca 1A63     		str	r2, [r3, #48]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3542              		.loc 1 1933 10
 3543 01cc 0023     		movs	r3, #0
 3544              	.L175:
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3545              		.loc 1 1934 1
 3546 01ce 1846     		mov	r0, r3
 3547 01d0 8037     		adds	r7, r7, #128
 3548              	.LCFI109:
 3549              		.cfi_def_cfa_offset 8
 3550 01d2 BD46     		mov	sp, r7
 3551              	.LCFI110:
 3552              		.cfi_def_cfa_register 13
 3553              		@ sp needed
 3554 01d4 80BD     		pop	{r7, pc}
 3555              		.cfi_endproc
 3556              	.LFE154:
 3558              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3559              		.align	1
 3560              		.global	HAL_UART_AbortTransmit
 3561              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 107


 3562              		.thumb
 3563              		.thumb_func
 3565              	HAL_UART_AbortTransmit:
 3566              	.LFB155:
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3567              		.loc 1 1949 1
 3568              		.cfi_startproc
 3569              		@ args = 0, pretend = 0, frame = 56
 3570              		@ frame_needed = 1, uses_anonymous_args = 0
 3571 0000 80B5     		push	{r7, lr}
 3572              	.LCFI111:
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 7, -8
 3575              		.cfi_offset 14, -4
 3576 0002 8EB0     		sub	sp, sp, #56
 3577              	.LCFI112:
 3578              		.cfi_def_cfa_offset 64
 3579 0004 00AF     		add	r7, sp, #0
 3580              	.LCFI113:
 3581              		.cfi_def_cfa_register 7
 3582 0006 7860     		str	r0, [r7, #4]
 3583              	.L183:
 3584              	.LBB404:
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3585              		.loc 1 1951 3 discriminator 1
 3586 0008 7B68     		ldr	r3, [r7, #4]
 3587 000a 1B68     		ldr	r3, [r3]
 3588 000c 0C33     		adds	r3, r3, #12
 3589 000e 3B62     		str	r3, [r7, #32]
 3590              	.LBB405:
 3591              	.LBB406:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3592              		.loc 2 480 4
 3593 0010 3B6A     		ldr	r3, [r7, #32]
 3594              		.syntax unified
 3595              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3596 0012 53E8003F 		ldrex r3, [r3]
 3597              	@ 0 "" 2
 3598              		.thumb
 3599              		.syntax unified
 3600 0016 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 108


 3601              		.loc 2 481 10
 3602 0018 FB69     		ldr	r3, [r7, #28]
 3603              	.LBE406:
 3604              	.LBE405:
 3605              		.loc 1 1951 3 discriminator 1
 3606 001a 23F0C003 		bic	r3, r3, #192
 3607 001e 7B63     		str	r3, [r7, #52]
 3608 0020 7B68     		ldr	r3, [r7, #4]
 3609 0022 1B68     		ldr	r3, [r3]
 3610 0024 0C33     		adds	r3, r3, #12
 3611 0026 7A6B     		ldr	r2, [r7, #52]
 3612 0028 FA62     		str	r2, [r7, #44]
 3613 002a BB62     		str	r3, [r7, #40]
 3614              	.LBB407:
 3615              	.LBB408:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3616              		.loc 2 531 4
 3617 002c B96A     		ldr	r1, [r7, #40]
 3618 002e FA6A     		ldr	r2, [r7, #44]
 3619              		.syntax unified
 3620              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3621 0030 41E80023 		strex r3, r2, [r1]
 3622              	@ 0 "" 2
 3623              		.thumb
 3624              		.syntax unified
 3625 0034 7B62     		str	r3, [r7, #36]
 3626              		.loc 2 532 10
 3627 0036 7B6A     		ldr	r3, [r7, #36]
 3628              	.LBE408:
 3629              	.LBE407:
 3630              		.loc 1 1951 3 discriminator 1
 3631 0038 002B     		cmp	r3, #0
 3632 003a E5D1     		bne	.L183
 3633              	.LBE404:
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3634              		.loc 1 1954 7
 3635 003c 7B68     		ldr	r3, [r7, #4]
 3636 003e 1B68     		ldr	r3, [r3]
 3637 0040 5B69     		ldr	r3, [r3, #20]
 3638 0042 03F08003 		and	r3, r3, #128
 3639              		.loc 1 1954 6
 3640 0046 802B     		cmp	r3, #128
 3641 0048 36D1     		bne	.L184
 3642              	.L187:
 3643              	.LBB409:
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3644              		.loc 1 1956 5 discriminator 1
 3645 004a 7B68     		ldr	r3, [r7, #4]
 3646 004c 1B68     		ldr	r3, [r3]
 3647 004e 1433     		adds	r3, r3, #20
 3648 0050 FB60     		str	r3, [r7, #12]
 3649              	.LBB410:
 3650              	.LBB411:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 109


 3651              		.loc 2 480 4
 3652 0052 FB68     		ldr	r3, [r7, #12]
 3653              		.syntax unified
 3654              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3655 0054 53E8003F 		ldrex r3, [r3]
 3656              	@ 0 "" 2
 3657              		.thumb
 3658              		.syntax unified
 3659 0058 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3660              		.loc 2 481 10
 3661 005a BB68     		ldr	r3, [r7, #8]
 3662              	.LBE411:
 3663              	.LBE410:
 3664              		.loc 1 1956 5 discriminator 1
 3665 005c 23F08003 		bic	r3, r3, #128
 3666 0060 3B63     		str	r3, [r7, #48]
 3667 0062 7B68     		ldr	r3, [r7, #4]
 3668 0064 1B68     		ldr	r3, [r3]
 3669 0066 1433     		adds	r3, r3, #20
 3670 0068 3A6B     		ldr	r2, [r7, #48]
 3671 006a BA61     		str	r2, [r7, #24]
 3672 006c 7B61     		str	r3, [r7, #20]
 3673              	.LBB412:
 3674              	.LBB413:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3675              		.loc 2 531 4
 3676 006e 7969     		ldr	r1, [r7, #20]
 3677 0070 BA69     		ldr	r2, [r7, #24]
 3678              		.syntax unified
 3679              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3680 0072 41E80023 		strex r3, r2, [r1]
 3681              	@ 0 "" 2
 3682              		.thumb
 3683              		.syntax unified
 3684 0076 3B61     		str	r3, [r7, #16]
 3685              		.loc 2 532 10
 3686 0078 3B69     		ldr	r3, [r7, #16]
 3687              	.LBE413:
 3688              	.LBE412:
 3689              		.loc 1 1956 5 discriminator 1
 3690 007a 002B     		cmp	r3, #0
 3691 007c E5D1     		bne	.L187
 3692              	.LBE409:
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3693              		.loc 1 1959 14
 3694 007e 7B68     		ldr	r3, [r7, #4]
 3695 0080 9B6B     		ldr	r3, [r3, #56]
 3696              		.loc 1 1959 8
 3697 0082 002B     		cmp	r3, #0
 3698 0084 18D0     		beq	.L184
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 110


 3699              		.loc 1 1963 12
 3700 0086 7B68     		ldr	r3, [r7, #4]
 3701 0088 9B6B     		ldr	r3, [r3, #56]
 3702              		.loc 1 1963 40
 3703 008a 0022     		movs	r2, #0
 3704 008c 1A65     		str	r2, [r3, #80]
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3705              		.loc 1 1965 11
 3706 008e 7B68     		ldr	r3, [r7, #4]
 3707 0090 9B6B     		ldr	r3, [r3, #56]
 3708 0092 1846     		mov	r0, r3
 3709 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 3710 0098 0346     		mov	r3, r0
 3711              		.loc 1 1965 10 discriminator 1
 3712 009a 002B     		cmp	r3, #0
 3713 009c 0CD0     		beq	.L184
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3714              		.loc 1 1967 13
 3715 009e 7B68     		ldr	r3, [r7, #4]
 3716 00a0 9B6B     		ldr	r3, [r3, #56]
 3717 00a2 1846     		mov	r0, r3
 3718 00a4 FFF7FEFF 		bl	HAL_DMA_GetError
 3719 00a8 0346     		mov	r3, r0
 3720              		.loc 1 1967 12 discriminator 1
 3721 00aa 202B     		cmp	r3, #32
 3722 00ac 04D1     		bne	.L184
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3723              		.loc 1 1970 28
 3724 00ae 7B68     		ldr	r3, [r7, #4]
 3725 00b0 1022     		movs	r2, #16
 3726 00b2 5A64     		str	r2, [r3, #68]
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3727              		.loc 1 1972 18
 3728 00b4 0323     		movs	r3, #3
 3729 00b6 07E0     		b	.L188
 3730              	.L184:
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3731              		.loc 1 1979 22
 3732 00b8 7B68     		ldr	r3, [r7, #4]
 3733 00ba 0022     		movs	r2, #0
 3734 00bc DA84     		strh	r2, [r3, #38]	@ movhi
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3735              		.loc 1 1982 17
 3736 00be 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 111


 3737 00c0 2022     		movs	r2, #32
 3738 00c2 83F84120 		strb	r2, [r3, #65]
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3739              		.loc 1 1984 10
 3740 00c6 0023     		movs	r3, #0
 3741              	.L188:
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3742              		.loc 1 1985 1
 3743 00c8 1846     		mov	r0, r3
 3744 00ca 3837     		adds	r7, r7, #56
 3745              	.LCFI114:
 3746              		.cfi_def_cfa_offset 8
 3747 00cc BD46     		mov	sp, r7
 3748              	.LCFI115:
 3749              		.cfi_def_cfa_register 13
 3750              		@ sp needed
 3751 00ce 80BD     		pop	{r7, pc}
 3752              		.cfi_endproc
 3753              	.LFE155:
 3755              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3756              		.align	1
 3757              		.global	HAL_UART_AbortReceive
 3758              		.syntax unified
 3759              		.thumb
 3760              		.thumb_func
 3762              	HAL_UART_AbortReceive:
 3763              	.LFB156:
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3764              		.loc 1 2000 1
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 104
 3767              		@ frame_needed = 1, uses_anonymous_args = 0
 3768 0000 80B5     		push	{r7, lr}
 3769              	.LCFI116:
 3770              		.cfi_def_cfa_offset 8
 3771              		.cfi_offset 7, -8
 3772              		.cfi_offset 14, -4
 3773 0002 9AB0     		sub	sp, sp, #104
 3774              	.LCFI117:
 3775              		.cfi_def_cfa_offset 112
 3776 0004 00AF     		add	r7, sp, #0
 3777              	.LCFI118:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 112


 3778              		.cfi_def_cfa_register 7
 3779 0006 7860     		str	r0, [r7, #4]
 3780              	.L192:
 3781              	.LBB414:
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3782              		.loc 1 2002 3 discriminator 1
 3783 0008 7B68     		ldr	r3, [r7, #4]
 3784 000a 1B68     		ldr	r3, [r3]
 3785 000c 0C33     		adds	r3, r3, #12
 3786 000e BB64     		str	r3, [r7, #72]
 3787              	.LBB415:
 3788              	.LBB416:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3789              		.loc 2 480 4
 3790 0010 BB6C     		ldr	r3, [r7, #72]
 3791              		.syntax unified
 3792              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3793 0012 53E8003F 		ldrex r3, [r3]
 3794              	@ 0 "" 2
 3795              		.thumb
 3796              		.syntax unified
 3797 0016 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3798              		.loc 2 481 10
 3799 0018 7B6C     		ldr	r3, [r7, #68]
 3800              	.LBE416:
 3801              	.LBE415:
 3802              		.loc 1 2002 3 discriminator 1
 3803 001a 23F49073 		bic	r3, r3, #288
 3804 001e 7B66     		str	r3, [r7, #100]
 3805 0020 7B68     		ldr	r3, [r7, #4]
 3806 0022 1B68     		ldr	r3, [r3]
 3807 0024 0C33     		adds	r3, r3, #12
 3808 0026 7A6E     		ldr	r2, [r7, #100]
 3809 0028 7A65     		str	r2, [r7, #84]
 3810 002a 3B65     		str	r3, [r7, #80]
 3811              	.LBB417:
 3812              	.LBB418:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3813              		.loc 2 531 4
 3814 002c 396D     		ldr	r1, [r7, #80]
 3815 002e 7A6D     		ldr	r2, [r7, #84]
 3816              		.syntax unified
 3817              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3818 0030 41E80023 		strex r3, r2, [r1]
 3819              	@ 0 "" 2
 3820              		.thumb
 3821              		.syntax unified
 3822 0034 FB64     		str	r3, [r7, #76]
 3823              		.loc 2 532 10
 3824 0036 FB6C     		ldr	r3, [r7, #76]
 3825              	.LBE418:
 3826              	.LBE417:
 3827              		.loc 1 2002 3 discriminator 1
 3828 0038 002B     		cmp	r3, #0
 3829 003a E5D1     		bne	.L192
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 113


 3830              	.L195:
 3831              	.LBE414:
 3832              	.LBB419:
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3833              		.loc 1 2003 3 discriminator 1
 3834 003c 7B68     		ldr	r3, [r7, #4]
 3835 003e 1B68     		ldr	r3, [r3]
 3836 0040 1433     		adds	r3, r3, #20
 3837 0042 7B63     		str	r3, [r7, #52]
 3838              	.LBB420:
 3839              	.LBB421:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3840              		.loc 2 480 4
 3841 0044 7B6B     		ldr	r3, [r7, #52]
 3842              		.syntax unified
 3843              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3844 0046 53E8003F 		ldrex r3, [r3]
 3845              	@ 0 "" 2
 3846              		.thumb
 3847              		.syntax unified
 3848 004a 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3849              		.loc 2 481 10
 3850 004c 3B6B     		ldr	r3, [r7, #48]
 3851              	.LBE421:
 3852              	.LBE420:
 3853              		.loc 1 2003 3 discriminator 1
 3854 004e 23F00103 		bic	r3, r3, #1
 3855 0052 3B66     		str	r3, [r7, #96]
 3856 0054 7B68     		ldr	r3, [r7, #4]
 3857 0056 1B68     		ldr	r3, [r3]
 3858 0058 1433     		adds	r3, r3, #20
 3859 005a 3A6E     		ldr	r2, [r7, #96]
 3860 005c 3A64     		str	r2, [r7, #64]
 3861 005e FB63     		str	r3, [r7, #60]
 3862              	.LBB422:
 3863              	.LBB423:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3864              		.loc 2 531 4
 3865 0060 F96B     		ldr	r1, [r7, #60]
 3866 0062 3A6C     		ldr	r2, [r7, #64]
 3867              		.syntax unified
 3868              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3869 0064 41E80023 		strex r3, r2, [r1]
 3870              	@ 0 "" 2
 3871              		.thumb
 3872              		.syntax unified
 3873 0068 BB63     		str	r3, [r7, #56]
 3874              		.loc 2 532 10
 3875 006a BB6B     		ldr	r3, [r7, #56]
 3876              	.LBE423:
 3877              	.LBE422:
 3878              		.loc 1 2003 3 discriminator 1
 3879 006c 002B     		cmp	r3, #0
 3880 006e E5D1     		bne	.L195
 3881              	.LBE419:
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 114


2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3882              		.loc 1 2006 12
 3883 0070 7B68     		ldr	r3, [r7, #4]
 3884 0072 1B6B     		ldr	r3, [r3, #48]
 3885              		.loc 1 2006 6
 3886 0074 012B     		cmp	r3, #1
 3887 0076 19D1     		bne	.L196
 3888              	.L199:
 3889              	.LBB424:
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3890              		.loc 1 2008 5 discriminator 1
 3891 0078 7B68     		ldr	r3, [r7, #4]
 3892 007a 1B68     		ldr	r3, [r3]
 3893 007c 0C33     		adds	r3, r3, #12
 3894 007e 3B62     		str	r3, [r7, #32]
 3895              	.LBB425:
 3896              	.LBB426:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3897              		.loc 2 480 4
 3898 0080 3B6A     		ldr	r3, [r7, #32]
 3899              		.syntax unified
 3900              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3901 0082 53E8003F 		ldrex r3, [r3]
 3902              	@ 0 "" 2
 3903              		.thumb
 3904              		.syntax unified
 3905 0086 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3906              		.loc 2 481 10
 3907 0088 FB69     		ldr	r3, [r7, #28]
 3908              	.LBE426:
 3909              	.LBE425:
 3910              		.loc 1 2008 5 discriminator 1
 3911 008a 23F01003 		bic	r3, r3, #16
 3912 008e FB65     		str	r3, [r7, #92]
 3913 0090 7B68     		ldr	r3, [r7, #4]
 3914 0092 1B68     		ldr	r3, [r3]
 3915 0094 0C33     		adds	r3, r3, #12
 3916 0096 FA6D     		ldr	r2, [r7, #92]
 3917 0098 FA62     		str	r2, [r7, #44]
 3918 009a BB62     		str	r3, [r7, #40]
 3919              	.LBB427:
 3920              	.LBB428:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3921              		.loc 2 531 4
 3922 009c B96A     		ldr	r1, [r7, #40]
 3923 009e FA6A     		ldr	r2, [r7, #44]
 3924              		.syntax unified
 3925              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3926 00a0 41E80023 		strex r3, r2, [r1]
 3927              	@ 0 "" 2
 3928              		.thumb
 3929              		.syntax unified
 3930 00a4 7B62     		str	r3, [r7, #36]
 3931              		.loc 2 532 10
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 115


 3932 00a6 7B6A     		ldr	r3, [r7, #36]
 3933              	.LBE428:
 3934              	.LBE427:
 3935              		.loc 1 2008 5 discriminator 1
 3936 00a8 002B     		cmp	r3, #0
 3937 00aa E5D1     		bne	.L199
 3938              	.L196:
 3939              	.LBE424:
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3940              		.loc 1 2012 7
 3941 00ac 7B68     		ldr	r3, [r7, #4]
 3942 00ae 1B68     		ldr	r3, [r3]
 3943 00b0 5B69     		ldr	r3, [r3, #20]
 3944 00b2 03F04003 		and	r3, r3, #64
 3945              		.loc 1 2012 6
 3946 00b6 402B     		cmp	r3, #64
 3947 00b8 36D1     		bne	.L200
 3948              	.L203:
 3949              	.LBB429:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3950              		.loc 1 2014 5 discriminator 1
 3951 00ba 7B68     		ldr	r3, [r7, #4]
 3952 00bc 1B68     		ldr	r3, [r3]
 3953 00be 1433     		adds	r3, r3, #20
 3954 00c0 FB60     		str	r3, [r7, #12]
 3955              	.LBB430:
 3956              	.LBB431:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3957              		.loc 2 480 4
 3958 00c2 FB68     		ldr	r3, [r7, #12]
 3959              		.syntax unified
 3960              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3961 00c4 53E8003F 		ldrex r3, [r3]
 3962              	@ 0 "" 2
 3963              		.thumb
 3964              		.syntax unified
 3965 00c8 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3966              		.loc 2 481 10
 3967 00ca BB68     		ldr	r3, [r7, #8]
 3968              	.LBE431:
 3969              	.LBE430:
 3970              		.loc 1 2014 5 discriminator 1
 3971 00cc 23F04003 		bic	r3, r3, #64
 3972 00d0 BB65     		str	r3, [r7, #88]
 3973 00d2 7B68     		ldr	r3, [r7, #4]
 3974 00d4 1B68     		ldr	r3, [r3]
 3975 00d6 1433     		adds	r3, r3, #20
 3976 00d8 BA6D     		ldr	r2, [r7, #88]
 3977 00da BA61     		str	r2, [r7, #24]
 3978 00dc 7B61     		str	r3, [r7, #20]
 3979              	.LBB432:
 3980              	.LBB433:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 116


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3981              		.loc 2 531 4
 3982 00de 7969     		ldr	r1, [r7, #20]
 3983 00e0 BA69     		ldr	r2, [r7, #24]
 3984              		.syntax unified
 3985              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3986 00e2 41E80023 		strex r3, r2, [r1]
 3987              	@ 0 "" 2
 3988              		.thumb
 3989              		.syntax unified
 3990 00e6 3B61     		str	r3, [r7, #16]
 3991              		.loc 2 532 10
 3992 00e8 3B69     		ldr	r3, [r7, #16]
 3993              	.LBE433:
 3994              	.LBE432:
 3995              		.loc 1 2014 5 discriminator 1
 3996 00ea 002B     		cmp	r3, #0
 3997 00ec E5D1     		bne	.L203
 3998              	.LBE429:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3999              		.loc 1 2017 14
 4000 00ee 7B68     		ldr	r3, [r7, #4]
 4001 00f0 DB6B     		ldr	r3, [r3, #60]
 4002              		.loc 1 2017 8
 4003 00f2 002B     		cmp	r3, #0
 4004 00f4 18D0     		beq	.L200
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4005              		.loc 1 2021 12
 4006 00f6 7B68     		ldr	r3, [r7, #4]
 4007 00f8 DB6B     		ldr	r3, [r3, #60]
 4008              		.loc 1 2021 40
 4009 00fa 0022     		movs	r2, #0
 4010 00fc 1A65     		str	r2, [r3, #80]
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 4011              		.loc 1 2023 11
 4012 00fe 7B68     		ldr	r3, [r7, #4]
 4013 0100 DB6B     		ldr	r3, [r3, #60]
 4014 0102 1846     		mov	r0, r3
 4015 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 4016 0108 0346     		mov	r3, r0
 4017              		.loc 1 2023 10 discriminator 1
 4018 010a 002B     		cmp	r3, #0
 4019 010c 0CD0     		beq	.L200
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4020              		.loc 1 2025 13
 4021 010e 7B68     		ldr	r3, [r7, #4]
 4022 0110 DB6B     		ldr	r3, [r3, #60]
 4023 0112 1846     		mov	r0, r3
 4024 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 4025 0118 0346     		mov	r3, r0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 117


 4026              		.loc 1 2025 12 discriminator 1
 4027 011a 202B     		cmp	r3, #32
 4028 011c 04D1     		bne	.L200
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4029              		.loc 1 2028 28
 4030 011e 7B68     		ldr	r3, [r7, #4]
 4031 0120 1022     		movs	r2, #16
 4032 0122 5A64     		str	r2, [r3, #68]
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 4033              		.loc 1 2030 18
 4034 0124 0323     		movs	r3, #3
 4035 0126 0AE0     		b	.L204
 4036              	.L200:
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4037              		.loc 1 2037 22
 4038 0128 7B68     		ldr	r3, [r7, #4]
 4039 012a 0022     		movs	r2, #0
 4040 012c DA85     		strh	r2, [r3, #46]	@ movhi
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4041              		.loc 1 2040 18
 4042 012e 7B68     		ldr	r3, [r7, #4]
 4043 0130 2022     		movs	r2, #32
 4044 0132 83F84220 		strb	r2, [r3, #66]
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4045              		.loc 1 2041 24
 4046 0136 7B68     		ldr	r3, [r7, #4]
 4047 0138 0022     		movs	r2, #0
 4048 013a 1A63     		str	r2, [r3, #48]
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4049              		.loc 1 2043 10
 4050 013c 0023     		movs	r3, #0
 4051              	.L204:
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4052              		.loc 1 2044 1
 4053 013e 1846     		mov	r0, r3
 4054 0140 6837     		adds	r7, r7, #104
 4055              	.LCFI119:
 4056              		.cfi_def_cfa_offset 8
 4057 0142 BD46     		mov	sp, r7
 4058              	.LCFI120:
 4059              		.cfi_def_cfa_register 13
 4060              		@ sp needed
 4061 0144 80BD     		pop	{r7, pc}
 4062              		.cfi_endproc
 4063              	.LFE156:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 118


 4065              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4066              		.align	1
 4067              		.global	HAL_UART_Abort_IT
 4068              		.syntax unified
 4069              		.thumb
 4070              		.thumb_func
 4072              	HAL_UART_Abort_IT:
 4073              	.LFB157:
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4074              		.loc 1 2061 1
 4075              		.cfi_startproc
 4076              		@ args = 0, pretend = 0, frame = 136
 4077              		@ frame_needed = 1, uses_anonymous_args = 0
 4078 0000 80B5     		push	{r7, lr}
 4079              	.LCFI121:
 4080              		.cfi_def_cfa_offset 8
 4081              		.cfi_offset 7, -8
 4082              		.cfi_offset 14, -4
 4083 0002 A2B0     		sub	sp, sp, #136
 4084              	.LCFI122:
 4085              		.cfi_def_cfa_offset 144
 4086 0004 00AF     		add	r7, sp, #0
 4087              	.LCFI123:
 4088              		.cfi_def_cfa_register 7
 4089 0006 7860     		str	r0, [r7, #4]
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4090              		.loc 1 2062 12
 4091 0008 0123     		movs	r3, #1
 4092 000a C7F88430 		str	r3, [r7, #132]
 4093              	.L208:
 4094              	.LBB434:
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4095              		.loc 1 2065 3 discriminator 1
 4096 000e 7B68     		ldr	r3, [r7, #4]
 4097 0010 1B68     		ldr	r3, [r3]
 4098 0012 0C33     		adds	r3, r3, #12
 4099 0014 3B66     		str	r3, [r7, #96]
 4100              	.LBB435:
 4101              	.LBB436:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 119


 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4102              		.loc 2 480 4
 4103 0016 3B6E     		ldr	r3, [r7, #96]
 4104              		.syntax unified
 4105              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4106 0018 53E8003F 		ldrex r3, [r3]
 4107              	@ 0 "" 2
 4108              		.thumb
 4109              		.syntax unified
 4110 001c FB65     		str	r3, [r7, #92]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4111              		.loc 2 481 10
 4112 001e FB6D     		ldr	r3, [r7, #92]
 4113              	.LBE436:
 4114              	.LBE435:
 4115              		.loc 1 2065 3 discriminator 1
 4116 0020 23F4F073 		bic	r3, r3, #480
 4117 0024 C7F88030 		str	r3, [r7, #128]
 4118 0028 7B68     		ldr	r3, [r7, #4]
 4119 002a 1B68     		ldr	r3, [r3]
 4120 002c 0C33     		adds	r3, r3, #12
 4121 002e D7F88020 		ldr	r2, [r7, #128]
 4122 0032 FA66     		str	r2, [r7, #108]
 4123 0034 BB66     		str	r3, [r7, #104]
 4124              	.LBB437:
 4125              	.LBB438:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4126              		.loc 2 531 4
 4127 0036 B96E     		ldr	r1, [r7, #104]
 4128 0038 FA6E     		ldr	r2, [r7, #108]
 4129              		.syntax unified
 4130              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4131 003a 41E80023 		strex r3, r2, [r1]
 4132              	@ 0 "" 2
 4133              		.thumb
 4134              		.syntax unified
 4135 003e 7B66     		str	r3, [r7, #100]
 4136              		.loc 2 532 10
 4137 0040 7B6E     		ldr	r3, [r7, #100]
 4138              	.LBE438:
 4139              	.LBE437:
 4140              		.loc 1 2065 3 discriminator 1
 4141 0042 002B     		cmp	r3, #0
 4142 0044 E3D1     		bne	.L208
 4143              	.L211:
 4144              	.LBE434:
 4145              	.LBB439:
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4146              		.loc 1 2066 3 discriminator 1
 4147 0046 7B68     		ldr	r3, [r7, #4]
 4148 0048 1B68     		ldr	r3, [r3]
 4149 004a 1433     		adds	r3, r3, #20
 4150 004c FB64     		str	r3, [r7, #76]
 4151              	.LBB440:
 4152              	.LBB441:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4153              		.loc 2 480 4
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 120


 4154 004e FB6C     		ldr	r3, [r7, #76]
 4155              		.syntax unified
 4156              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4157 0050 53E8003F 		ldrex r3, [r3]
 4158              	@ 0 "" 2
 4159              		.thumb
 4160              		.syntax unified
 4161 0054 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4162              		.loc 2 481 10
 4163 0056 BB6C     		ldr	r3, [r7, #72]
 4164              	.LBE441:
 4165              	.LBE440:
 4166              		.loc 1 2066 3 discriminator 1
 4167 0058 23F00103 		bic	r3, r3, #1
 4168 005c FB67     		str	r3, [r7, #124]
 4169 005e 7B68     		ldr	r3, [r7, #4]
 4170 0060 1B68     		ldr	r3, [r3]
 4171 0062 1433     		adds	r3, r3, #20
 4172 0064 FA6F     		ldr	r2, [r7, #124]
 4173 0066 BA65     		str	r2, [r7, #88]
 4174 0068 7B65     		str	r3, [r7, #84]
 4175              	.LBB442:
 4176              	.LBB443:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4177              		.loc 2 531 4
 4178 006a 796D     		ldr	r1, [r7, #84]
 4179 006c BA6D     		ldr	r2, [r7, #88]
 4180              		.syntax unified
 4181              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4182 006e 41E80023 		strex r3, r2, [r1]
 4183              	@ 0 "" 2
 4184              		.thumb
 4185              		.syntax unified
 4186 0072 3B65     		str	r3, [r7, #80]
 4187              		.loc 2 532 10
 4188 0074 3B6D     		ldr	r3, [r7, #80]
 4189              	.LBE443:
 4190              	.LBE442:
 4191              		.loc 1 2066 3 discriminator 1
 4192 0076 002B     		cmp	r3, #0
 4193 0078 E5D1     		bne	.L211
 4194              	.LBE439:
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4195              		.loc 1 2069 12
 4196 007a 7B68     		ldr	r3, [r7, #4]
 4197 007c 1B6B     		ldr	r3, [r3, #48]
 4198              		.loc 1 2069 6
 4199 007e 012B     		cmp	r3, #1
 4200 0080 19D1     		bne	.L212
 4201              	.L215:
 4202              	.LBB444:
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4203              		.loc 1 2071 5 discriminator 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 121


 4204 0082 7B68     		ldr	r3, [r7, #4]
 4205 0084 1B68     		ldr	r3, [r3]
 4206 0086 0C33     		adds	r3, r3, #12
 4207 0088 BB63     		str	r3, [r7, #56]
 4208              	.LBB445:
 4209              	.LBB446:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4210              		.loc 2 480 4
 4211 008a BB6B     		ldr	r3, [r7, #56]
 4212              		.syntax unified
 4213              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4214 008c 53E8003F 		ldrex r3, [r3]
 4215              	@ 0 "" 2
 4216              		.thumb
 4217              		.syntax unified
 4218 0090 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4219              		.loc 2 481 10
 4220 0092 7B6B     		ldr	r3, [r7, #52]
 4221              	.LBE446:
 4222              	.LBE445:
 4223              		.loc 1 2071 5 discriminator 1
 4224 0094 23F01003 		bic	r3, r3, #16
 4225 0098 BB67     		str	r3, [r7, #120]
 4226 009a 7B68     		ldr	r3, [r7, #4]
 4227 009c 1B68     		ldr	r3, [r3]
 4228 009e 0C33     		adds	r3, r3, #12
 4229 00a0 BA6F     		ldr	r2, [r7, #120]
 4230 00a2 7A64     		str	r2, [r7, #68]
 4231 00a4 3B64     		str	r3, [r7, #64]
 4232              	.LBB447:
 4233              	.LBB448:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4234              		.loc 2 531 4
 4235 00a6 396C     		ldr	r1, [r7, #64]
 4236 00a8 7A6C     		ldr	r2, [r7, #68]
 4237              		.syntax unified
 4238              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4239 00aa 41E80023 		strex r3, r2, [r1]
 4240              	@ 0 "" 2
 4241              		.thumb
 4242              		.syntax unified
 4243 00ae FB63     		str	r3, [r7, #60]
 4244              		.loc 2 532 10
 4245 00b0 FB6B     		ldr	r3, [r7, #60]
 4246              	.LBE448:
 4247              	.LBE447:
 4248              		.loc 1 2071 5 discriminator 1
 4249 00b2 002B     		cmp	r3, #0
 4250 00b4 E5D1     		bne	.L215
 4251              	.L212:
 4252              	.LBE444:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 122


2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4253              		.loc 1 2077 12
 4254 00b6 7B68     		ldr	r3, [r7, #4]
 4255 00b8 9B6B     		ldr	r3, [r3, #56]
 4256              		.loc 1 2077 6
 4257 00ba 002B     		cmp	r3, #0
 4258 00bc 0FD0     		beq	.L216
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4259              		.loc 1 2081 9
 4260 00be 7B68     		ldr	r3, [r7, #4]
 4261 00c0 1B68     		ldr	r3, [r3]
 4262 00c2 5B69     		ldr	r3, [r3, #20]
 4263 00c4 03F08003 		and	r3, r3, #128
 4264              		.loc 1 2081 8
 4265 00c8 802B     		cmp	r3, #128
 4266 00ca 04D1     		bne	.L217
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4267              		.loc 1 2083 12
 4268 00cc 7B68     		ldr	r3, [r7, #4]
 4269 00ce 9B6B     		ldr	r3, [r3, #56]
 4270              		.loc 1 2083 40
 4271 00d0 534A     		ldr	r2, .L232
 4272 00d2 1A65     		str	r2, [r3, #80]
 4273 00d4 03E0     		b	.L216
 4274              	.L217:
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4275              		.loc 1 2087 12
 4276 00d6 7B68     		ldr	r3, [r7, #4]
 4277 00d8 9B6B     		ldr	r3, [r3, #56]
 4278              		.loc 1 2087 40
 4279 00da 0022     		movs	r2, #0
 4280 00dc 1A65     		str	r2, [r3, #80]
 4281              	.L216:
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4282              		.loc 1 2091 12
 4283 00de 7B68     		ldr	r3, [r7, #4]
 4284 00e0 DB6B     		ldr	r3, [r3, #60]
 4285              		.loc 1 2091 6
 4286 00e2 002B     		cmp	r3, #0
 4287 00e4 0FD0     		beq	.L218
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4288              		.loc 1 2095 9
 4289 00e6 7B68     		ldr	r3, [r7, #4]
 4290 00e8 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 123


 4291 00ea 5B69     		ldr	r3, [r3, #20]
 4292 00ec 03F04003 		and	r3, r3, #64
 4293              		.loc 1 2095 8
 4294 00f0 402B     		cmp	r3, #64
 4295 00f2 04D1     		bne	.L219
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4296              		.loc 1 2097 12
 4297 00f4 7B68     		ldr	r3, [r7, #4]
 4298 00f6 DB6B     		ldr	r3, [r3, #60]
 4299              		.loc 1 2097 40
 4300 00f8 4A4A     		ldr	r2, .L232+4
 4301 00fa 1A65     		str	r2, [r3, #80]
 4302 00fc 03E0     		b	.L218
 4303              	.L219:
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4304              		.loc 1 2101 12
 4305 00fe 7B68     		ldr	r3, [r7, #4]
 4306 0100 DB6B     		ldr	r3, [r3, #60]
 4307              		.loc 1 2101 40
 4308 0102 0022     		movs	r2, #0
 4309 0104 1A65     		str	r2, [r3, #80]
 4310              	.L218:
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4311              		.loc 1 2106 7
 4312 0106 7B68     		ldr	r3, [r7, #4]
 4313 0108 1B68     		ldr	r3, [r3]
 4314 010a 5B69     		ldr	r3, [r3, #20]
 4315 010c 03F08003 		and	r3, r3, #128
 4316              		.loc 1 2106 6
 4317 0110 802B     		cmp	r3, #128
 4318 0112 2DD1     		bne	.L220
 4319              	.L223:
 4320              	.LBB449:
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4321              		.loc 1 2109 5 discriminator 1
 4322 0114 7B68     		ldr	r3, [r7, #4]
 4323 0116 1B68     		ldr	r3, [r3]
 4324 0118 1433     		adds	r3, r3, #20
 4325 011a 7B62     		str	r3, [r7, #36]
 4326              	.LBB450:
 4327              	.LBB451:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4328              		.loc 2 480 4
 4329 011c 7B6A     		ldr	r3, [r7, #36]
 4330              		.syntax unified
 4331              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4332 011e 53E8003F 		ldrex r3, [r3]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 124


 4333              	@ 0 "" 2
 4334              		.thumb
 4335              		.syntax unified
 4336 0122 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4337              		.loc 2 481 10
 4338 0124 3B6A     		ldr	r3, [r7, #32]
 4339              	.LBE451:
 4340              	.LBE450:
 4341              		.loc 1 2109 5 discriminator 1
 4342 0126 23F08003 		bic	r3, r3, #128
 4343 012a 7B67     		str	r3, [r7, #116]
 4344 012c 7B68     		ldr	r3, [r7, #4]
 4345 012e 1B68     		ldr	r3, [r3]
 4346 0130 1433     		adds	r3, r3, #20
 4347 0132 7A6F     		ldr	r2, [r7, #116]
 4348 0134 3A63     		str	r2, [r7, #48]
 4349 0136 FB62     		str	r3, [r7, #44]
 4350              	.LBB452:
 4351              	.LBB453:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4352              		.loc 2 531 4
 4353 0138 F96A     		ldr	r1, [r7, #44]
 4354 013a 3A6B     		ldr	r2, [r7, #48]
 4355              		.syntax unified
 4356              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4357 013c 41E80023 		strex r3, r2, [r1]
 4358              	@ 0 "" 2
 4359              		.thumb
 4360              		.syntax unified
 4361 0140 BB62     		str	r3, [r7, #40]
 4362              		.loc 2 532 10
 4363 0142 BB6A     		ldr	r3, [r7, #40]
 4364              	.LBE453:
 4365              	.LBE452:
 4366              		.loc 1 2109 5 discriminator 1
 4367 0144 002B     		cmp	r3, #0
 4368 0146 E5D1     		bne	.L223
 4369              	.LBE449:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4370              		.loc 1 2112 14
 4371 0148 7B68     		ldr	r3, [r7, #4]
 4372 014a 9B6B     		ldr	r3, [r3, #56]
 4373              		.loc 1 2112 8
 4374 014c 002B     		cmp	r3, #0
 4375 014e 0FD0     		beq	.L220
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4376              		.loc 1 2118 11
 4377 0150 7B68     		ldr	r3, [r7, #4]
 4378 0152 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 125


 4379 0154 1846     		mov	r0, r3
 4380 0156 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4381 015a 0346     		mov	r3, r0
 4382              		.loc 1 2118 10 discriminator 1
 4383 015c 002B     		cmp	r3, #0
 4384 015e 04D0     		beq	.L224
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4385              		.loc 1 2120 14
 4386 0160 7B68     		ldr	r3, [r7, #4]
 4387 0162 9B6B     		ldr	r3, [r3, #56]
 4388              		.loc 1 2120 42
 4389 0164 0022     		movs	r2, #0
 4390 0166 1A65     		str	r2, [r3, #80]
 4391 0168 02E0     		b	.L220
 4392              	.L224:
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4393              		.loc 1 2124 19
 4394 016a 0023     		movs	r3, #0
 4395 016c C7F88430 		str	r3, [r7, #132]
 4396              	.L220:
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4397              		.loc 1 2130 7
 4398 0170 7B68     		ldr	r3, [r7, #4]
 4399 0172 1B68     		ldr	r3, [r3]
 4400 0174 5B69     		ldr	r3, [r3, #20]
 4401 0176 03F04003 		and	r3, r3, #64
 4402              		.loc 1 2130 6
 4403 017a 402B     		cmp	r3, #64
 4404 017c 30D1     		bne	.L225
 4405              	.L228:
 4406              	.LBB454:
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4407              		.loc 1 2132 5 discriminator 1
 4408 017e 7B68     		ldr	r3, [r7, #4]
 4409 0180 1B68     		ldr	r3, [r3]
 4410 0182 1433     		adds	r3, r3, #20
 4411 0184 3B61     		str	r3, [r7, #16]
 4412              	.LBB455:
 4413              	.LBB456:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4414              		.loc 2 480 4
 4415 0186 3B69     		ldr	r3, [r7, #16]
 4416              		.syntax unified
 4417              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4418 0188 53E8003F 		ldrex r3, [r3]
 4419              	@ 0 "" 2
 4420              		.thumb
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 126


 4421              		.syntax unified
 4422 018c FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4423              		.loc 2 481 10
 4424 018e FB68     		ldr	r3, [r7, #12]
 4425              	.LBE456:
 4426              	.LBE455:
 4427              		.loc 1 2132 5 discriminator 1
 4428 0190 23F04003 		bic	r3, r3, #64
 4429 0194 3B67     		str	r3, [r7, #112]
 4430 0196 7B68     		ldr	r3, [r7, #4]
 4431 0198 1B68     		ldr	r3, [r3]
 4432 019a 1433     		adds	r3, r3, #20
 4433 019c 3A6F     		ldr	r2, [r7, #112]
 4434 019e FA61     		str	r2, [r7, #28]
 4435 01a0 BB61     		str	r3, [r7, #24]
 4436              	.LBB457:
 4437              	.LBB458:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4438              		.loc 2 531 4
 4439 01a2 B969     		ldr	r1, [r7, #24]
 4440 01a4 FA69     		ldr	r2, [r7, #28]
 4441              		.syntax unified
 4442              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4443 01a6 41E80023 		strex r3, r2, [r1]
 4444              	@ 0 "" 2
 4445              		.thumb
 4446              		.syntax unified
 4447 01aa 7B61     		str	r3, [r7, #20]
 4448              		.loc 2 532 10
 4449 01ac 7B69     		ldr	r3, [r7, #20]
 4450              	.LBE458:
 4451              	.LBE457:
 4452              		.loc 1 2132 5 discriminator 1
 4453 01ae 002B     		cmp	r3, #0
 4454 01b0 E5D1     		bne	.L228
 4455              	.LBE454:
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4456              		.loc 1 2135 14
 4457 01b2 7B68     		ldr	r3, [r7, #4]
 4458 01b4 DB6B     		ldr	r3, [r3, #60]
 4459              		.loc 1 2135 8
 4460 01b6 002B     		cmp	r3, #0
 4461 01b8 12D0     		beq	.L225
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4462              		.loc 1 2141 11
 4463 01ba 7B68     		ldr	r3, [r7, #4]
 4464 01bc DB6B     		ldr	r3, [r3, #60]
 4465 01be 1846     		mov	r0, r3
 4466 01c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 127


 4467 01c4 0346     		mov	r3, r0
 4468              		.loc 1 2141 10 discriminator 1
 4469 01c6 002B     		cmp	r3, #0
 4470 01c8 07D0     		beq	.L229
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4471              		.loc 1 2143 14
 4472 01ca 7B68     		ldr	r3, [r7, #4]
 4473 01cc DB6B     		ldr	r3, [r3, #60]
 4474              		.loc 1 2143 42
 4475 01ce 0022     		movs	r2, #0
 4476 01d0 1A65     		str	r2, [r3, #80]
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4477              		.loc 1 2144 19
 4478 01d2 0123     		movs	r3, #1
 4479 01d4 C7F88430 		str	r3, [r7, #132]
 4480 01d8 02E0     		b	.L225
 4481              	.L229:
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4482              		.loc 1 2148 19
 4483 01da 0023     		movs	r3, #0
 4484 01dc C7F88430 		str	r3, [r7, #132]
 4485              	.L225:
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4486              		.loc 1 2154 6
 4487 01e0 D7F88430 		ldr	r3, [r7, #132]
 4488 01e4 012B     		cmp	r3, #1
 4489 01e6 16D1     		bne	.L230
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4490              		.loc 1 2157 24
 4491 01e8 7B68     		ldr	r3, [r7, #4]
 4492 01ea 0022     		movs	r2, #0
 4493 01ec DA84     		strh	r2, [r3, #38]	@ movhi
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4494              		.loc 1 2158 24
 4495 01ee 7B68     		ldr	r3, [r7, #4]
 4496 01f0 0022     		movs	r2, #0
 4497 01f2 DA85     		strh	r2, [r3, #46]	@ movhi
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4498              		.loc 1 2161 22
 4499 01f4 7B68     		ldr	r3, [r7, #4]
 4500 01f6 0022     		movs	r2, #0
 4501 01f8 5A64     		str	r2, [r3, #68]
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 128


2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4502              		.loc 1 2164 20
 4503 01fa 7B68     		ldr	r3, [r7, #4]
 4504 01fc 2022     		movs	r2, #32
 4505 01fe 83F84120 		strb	r2, [r3, #65]
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4506              		.loc 1 2165 20
 4507 0202 7B68     		ldr	r3, [r7, #4]
 4508 0204 2022     		movs	r2, #32
 4509 0206 83F84220 		strb	r2, [r3, #66]
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4510              		.loc 1 2166 26
 4511 020a 7B68     		ldr	r3, [r7, #4]
 4512 020c 0022     		movs	r2, #0
 4513 020e 1A63     		str	r2, [r3, #48]
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4514              		.loc 1 2174 5
 4515 0210 7868     		ldr	r0, [r7, #4]
 4516 0212 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4517              	.L230:
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4518              		.loc 1 2178 10
 4519 0216 0023     		movs	r3, #0
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4520              		.loc 1 2179 1
 4521 0218 1846     		mov	r0, r3
 4522 021a 8837     		adds	r7, r7, #136
 4523              	.LCFI124:
 4524              		.cfi_def_cfa_offset 8
 4525 021c BD46     		mov	sp, r7
 4526              	.LCFI125:
 4527              		.cfi_def_cfa_register 13
 4528              		@ sp needed
 4529 021e 80BD     		pop	{r7, pc}
 4530              	.L233:
 4531              		.align	2
 4532              	.L232:
 4533 0220 00000000 		.word	UART_DMATxAbortCallback
 4534 0224 00000000 		.word	UART_DMARxAbortCallback
 4535              		.cfi_endproc
 4536              	.LFE157:
 4538              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4539              		.align	1
 4540              		.global	HAL_UART_AbortTransmit_IT
 4541              		.syntax unified
 4542              		.thumb
 4543              		.thumb_func
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 129


 4545              	HAL_UART_AbortTransmit_IT:
 4546              	.LFB158:
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4547              		.loc 1 2196 1
 4548              		.cfi_startproc
 4549              		@ args = 0, pretend = 0, frame = 56
 4550              		@ frame_needed = 1, uses_anonymous_args = 0
 4551 0000 80B5     		push	{r7, lr}
 4552              	.LCFI126:
 4553              		.cfi_def_cfa_offset 8
 4554              		.cfi_offset 7, -8
 4555              		.cfi_offset 14, -4
 4556 0002 8EB0     		sub	sp, sp, #56
 4557              	.LCFI127:
 4558              		.cfi_def_cfa_offset 64
 4559 0004 00AF     		add	r7, sp, #0
 4560              	.LCFI128:
 4561              		.cfi_def_cfa_register 7
 4562 0006 7860     		str	r0, [r7, #4]
 4563              	.L237:
 4564              	.LBB459:
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4565              		.loc 1 2198 3 discriminator 1
 4566 0008 7B68     		ldr	r3, [r7, #4]
 4567 000a 1B68     		ldr	r3, [r3]
 4568 000c 0C33     		adds	r3, r3, #12
 4569 000e 3B62     		str	r3, [r7, #32]
 4570              	.LBB460:
 4571              	.LBB461:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4572              		.loc 2 480 4
 4573 0010 3B6A     		ldr	r3, [r7, #32]
 4574              		.syntax unified
 4575              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4576 0012 53E8003F 		ldrex r3, [r3]
 4577              	@ 0 "" 2
 4578              		.thumb
 4579              		.syntax unified
 4580 0016 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 130


 4581              		.loc 2 481 10
 4582 0018 FB69     		ldr	r3, [r7, #28]
 4583              	.LBE461:
 4584              	.LBE460:
 4585              		.loc 1 2198 3 discriminator 1
 4586 001a 23F0C003 		bic	r3, r3, #192
 4587 001e 7B63     		str	r3, [r7, #52]
 4588 0020 7B68     		ldr	r3, [r7, #4]
 4589 0022 1B68     		ldr	r3, [r3]
 4590 0024 0C33     		adds	r3, r3, #12
 4591 0026 7A6B     		ldr	r2, [r7, #52]
 4592 0028 FA62     		str	r2, [r7, #44]
 4593 002a BB62     		str	r3, [r7, #40]
 4594              	.LBB462:
 4595              	.LBB463:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4596              		.loc 2 531 4
 4597 002c B96A     		ldr	r1, [r7, #40]
 4598 002e FA6A     		ldr	r2, [r7, #44]
 4599              		.syntax unified
 4600              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4601 0030 41E80023 		strex r3, r2, [r1]
 4602              	@ 0 "" 2
 4603              		.thumb
 4604              		.syntax unified
 4605 0034 7B62     		str	r3, [r7, #36]
 4606              		.loc 2 532 10
 4607 0036 7B6A     		ldr	r3, [r7, #36]
 4608              	.LBE463:
 4609              	.LBE462:
 4610              		.loc 1 2198 3 discriminator 1
 4611 0038 002B     		cmp	r3, #0
 4612 003a E5D1     		bne	.L237
 4613              	.LBE459:
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4614              		.loc 1 2201 7
 4615 003c 7B68     		ldr	r3, [r7, #4]
 4616 003e 1B68     		ldr	r3, [r3]
 4617 0040 5B69     		ldr	r3, [r3, #20]
 4618 0042 03F08003 		and	r3, r3, #128
 4619              		.loc 1 2201 6
 4620 0046 802B     		cmp	r3, #128
 4621 0048 3CD1     		bne	.L238
 4622              	.L241:
 4623              	.LBB464:
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4624              		.loc 1 2203 5 discriminator 1
 4625 004a 7B68     		ldr	r3, [r7, #4]
 4626 004c 1B68     		ldr	r3, [r3]
 4627 004e 1433     		adds	r3, r3, #20
 4628 0050 FB60     		str	r3, [r7, #12]
 4629              	.LBB465:
 4630              	.LBB466:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 131


 4631              		.loc 2 480 4
 4632 0052 FB68     		ldr	r3, [r7, #12]
 4633              		.syntax unified
 4634              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4635 0054 53E8003F 		ldrex r3, [r3]
 4636              	@ 0 "" 2
 4637              		.thumb
 4638              		.syntax unified
 4639 0058 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4640              		.loc 2 481 10
 4641 005a BB68     		ldr	r3, [r7, #8]
 4642              	.LBE466:
 4643              	.LBE465:
 4644              		.loc 1 2203 5 discriminator 1
 4645 005c 23F08003 		bic	r3, r3, #128
 4646 0060 3B63     		str	r3, [r7, #48]
 4647 0062 7B68     		ldr	r3, [r7, #4]
 4648 0064 1B68     		ldr	r3, [r3]
 4649 0066 1433     		adds	r3, r3, #20
 4650 0068 3A6B     		ldr	r2, [r7, #48]
 4651 006a BA61     		str	r2, [r7, #24]
 4652 006c 7B61     		str	r3, [r7, #20]
 4653              	.LBB467:
 4654              	.LBB468:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4655              		.loc 2 531 4
 4656 006e 7969     		ldr	r1, [r7, #20]
 4657 0070 BA69     		ldr	r2, [r7, #24]
 4658              		.syntax unified
 4659              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4660 0072 41E80023 		strex r3, r2, [r1]
 4661              	@ 0 "" 2
 4662              		.thumb
 4663              		.syntax unified
 4664 0076 3B61     		str	r3, [r7, #16]
 4665              		.loc 2 532 10
 4666 0078 3B69     		ldr	r3, [r7, #16]
 4667              	.LBE468:
 4668              	.LBE467:
 4669              		.loc 1 2203 5 discriminator 1
 4670 007a 002B     		cmp	r3, #0
 4671 007c E5D1     		bne	.L241
 4672              	.LBE464:
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4673              		.loc 1 2206 14
 4674 007e 7B68     		ldr	r3, [r7, #4]
 4675 0080 9B6B     		ldr	r3, [r3, #56]
 4676              		.loc 1 2206 8
 4677 0082 002B     		cmp	r3, #0
 4678 0084 13D0     		beq	.L242
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 132


 4679              		.loc 1 2210 12
 4680 0086 7B68     		ldr	r3, [r7, #4]
 4681 0088 9B6B     		ldr	r3, [r3, #56]
 4682              		.loc 1 2210 40
 4683 008a 164A     		ldr	r2, .L245
 4684 008c 1A65     		str	r2, [r3, #80]
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4685              		.loc 1 2213 11
 4686 008e 7B68     		ldr	r3, [r7, #4]
 4687 0090 9B6B     		ldr	r3, [r3, #56]
 4688 0092 1846     		mov	r0, r3
 4689 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4690 0098 0346     		mov	r3, r0
 4691              		.loc 1 2213 10 discriminator 1
 4692 009a 002B     		cmp	r3, #0
 4693 009c 1CD0     		beq	.L243
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4694              		.loc 1 2216 14
 4695 009e 7B68     		ldr	r3, [r7, #4]
 4696 00a0 9B6B     		ldr	r3, [r3, #56]
 4697              		.loc 1 2216 22
 4698 00a2 1B6D     		ldr	r3, [r3, #80]
 4699              		.loc 1 2216 47
 4700 00a4 7A68     		ldr	r2, [r7, #4]
 4701 00a6 926B     		ldr	r2, [r2, #56]
 4702              		.loc 1 2216 9
 4703 00a8 1046     		mov	r0, r2
 4704 00aa 9847     		blx	r3
 4705              	.LVL0:
 4706 00ac 14E0     		b	.L243
 4707              	.L242:
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4708              		.loc 1 2222 26
 4709 00ae 7B68     		ldr	r3, [r7, #4]
 4710 00b0 0022     		movs	r2, #0
 4711 00b2 DA84     		strh	r2, [r3, #38]	@ movhi
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4712              		.loc 1 2225 21
 4713 00b4 7B68     		ldr	r3, [r7, #4]
 4714 00b6 2022     		movs	r2, #32
 4715 00b8 83F84120 		strb	r2, [r3, #65]
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 133


2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4716              		.loc 1 2233 7
 4717 00bc 7868     		ldr	r0, [r7, #4]
 4718 00be FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4719 00c2 09E0     		b	.L243
 4720              	.L238:
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4721              		.loc 1 2240 24
 4722 00c4 7B68     		ldr	r3, [r7, #4]
 4723 00c6 0022     		movs	r2, #0
 4724 00c8 DA84     		strh	r2, [r3, #38]	@ movhi
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4725              		.loc 1 2243 19
 4726 00ca 7B68     		ldr	r3, [r7, #4]
 4727 00cc 2022     		movs	r2, #32
 4728 00ce 83F84120 		strb	r2, [r3, #65]
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4729              		.loc 1 2251 5
 4730 00d2 7868     		ldr	r0, [r7, #4]
 4731 00d4 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4732              	.L243:
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4733              		.loc 1 2255 10
 4734 00d8 0023     		movs	r3, #0
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4735              		.loc 1 2256 1
 4736 00da 1846     		mov	r0, r3
 4737 00dc 3837     		adds	r7, r7, #56
 4738              	.LCFI129:
 4739              		.cfi_def_cfa_offset 8
 4740 00de BD46     		mov	sp, r7
 4741              	.LCFI130:
 4742              		.cfi_def_cfa_register 13
 4743              		@ sp needed
 4744 00e0 80BD     		pop	{r7, pc}
 4745              	.L246:
 4746 00e2 00BF     		.align	2
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 134


 4747              	.L245:
 4748 00e4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4749              		.cfi_endproc
 4750              	.LFE158:
 4752              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4753              		.align	1
 4754              		.global	HAL_UART_AbortReceive_IT
 4755              		.syntax unified
 4756              		.thumb
 4757              		.thumb_func
 4759              	HAL_UART_AbortReceive_IT:
 4760              	.LFB159:
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4761              		.loc 1 2273 1
 4762              		.cfi_startproc
 4763              		@ args = 0, pretend = 0, frame = 104
 4764              		@ frame_needed = 1, uses_anonymous_args = 0
 4765 0000 80B5     		push	{r7, lr}
 4766              	.LCFI131:
 4767              		.cfi_def_cfa_offset 8
 4768              		.cfi_offset 7, -8
 4769              		.cfi_offset 14, -4
 4770 0002 9AB0     		sub	sp, sp, #104
 4771              	.LCFI132:
 4772              		.cfi_def_cfa_offset 112
 4773 0004 00AF     		add	r7, sp, #0
 4774              	.LCFI133:
 4775              		.cfi_def_cfa_register 7
 4776 0006 7860     		str	r0, [r7, #4]
 4777              	.L250:
 4778              	.LBB469:
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4779              		.loc 1 2275 3 discriminator 1
 4780 0008 7B68     		ldr	r3, [r7, #4]
 4781 000a 1B68     		ldr	r3, [r3]
 4782 000c 0C33     		adds	r3, r3, #12
 4783 000e BB64     		str	r3, [r7, #72]
 4784              	.LBB470:
 4785              	.LBB471:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 135


 4786              		.loc 2 480 4
 4787 0010 BB6C     		ldr	r3, [r7, #72]
 4788              		.syntax unified
 4789              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4790 0012 53E8003F 		ldrex r3, [r3]
 4791              	@ 0 "" 2
 4792              		.thumb
 4793              		.syntax unified
 4794 0016 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4795              		.loc 2 481 10
 4796 0018 7B6C     		ldr	r3, [r7, #68]
 4797              	.LBE471:
 4798              	.LBE470:
 4799              		.loc 1 2275 3 discriminator 1
 4800 001a 23F49073 		bic	r3, r3, #288
 4801 001e 7B66     		str	r3, [r7, #100]
 4802 0020 7B68     		ldr	r3, [r7, #4]
 4803 0022 1B68     		ldr	r3, [r3]
 4804 0024 0C33     		adds	r3, r3, #12
 4805 0026 7A6E     		ldr	r2, [r7, #100]
 4806 0028 7A65     		str	r2, [r7, #84]
 4807 002a 3B65     		str	r3, [r7, #80]
 4808              	.LBB472:
 4809              	.LBB473:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4810              		.loc 2 531 4
 4811 002c 396D     		ldr	r1, [r7, #80]
 4812 002e 7A6D     		ldr	r2, [r7, #84]
 4813              		.syntax unified
 4814              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4815 0030 41E80023 		strex r3, r2, [r1]
 4816              	@ 0 "" 2
 4817              		.thumb
 4818              		.syntax unified
 4819 0034 FB64     		str	r3, [r7, #76]
 4820              		.loc 2 532 10
 4821 0036 FB6C     		ldr	r3, [r7, #76]
 4822              	.LBE473:
 4823              	.LBE472:
 4824              		.loc 1 2275 3 discriminator 1
 4825 0038 002B     		cmp	r3, #0
 4826 003a E5D1     		bne	.L250
 4827              	.L253:
 4828              	.LBE469:
 4829              	.LBB474:
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4830              		.loc 1 2276 3 discriminator 1
 4831 003c 7B68     		ldr	r3, [r7, #4]
 4832 003e 1B68     		ldr	r3, [r3]
 4833 0040 1433     		adds	r3, r3, #20
 4834 0042 7B63     		str	r3, [r7, #52]
 4835              	.LBB475:
 4836              	.LBB476:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4837              		.loc 2 480 4
 4838 0044 7B6B     		ldr	r3, [r7, #52]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 136


 4839              		.syntax unified
 4840              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4841 0046 53E8003F 		ldrex r3, [r3]
 4842              	@ 0 "" 2
 4843              		.thumb
 4844              		.syntax unified
 4845 004a 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4846              		.loc 2 481 10
 4847 004c 3B6B     		ldr	r3, [r7, #48]
 4848              	.LBE476:
 4849              	.LBE475:
 4850              		.loc 1 2276 3 discriminator 1
 4851 004e 23F00103 		bic	r3, r3, #1
 4852 0052 3B66     		str	r3, [r7, #96]
 4853 0054 7B68     		ldr	r3, [r7, #4]
 4854 0056 1B68     		ldr	r3, [r3]
 4855 0058 1433     		adds	r3, r3, #20
 4856 005a 3A6E     		ldr	r2, [r7, #96]
 4857 005c 3A64     		str	r2, [r7, #64]
 4858 005e FB63     		str	r3, [r7, #60]
 4859              	.LBB477:
 4860              	.LBB478:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4861              		.loc 2 531 4
 4862 0060 F96B     		ldr	r1, [r7, #60]
 4863 0062 3A6C     		ldr	r2, [r7, #64]
 4864              		.syntax unified
 4865              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4866 0064 41E80023 		strex r3, r2, [r1]
 4867              	@ 0 "" 2
 4868              		.thumb
 4869              		.syntax unified
 4870 0068 BB63     		str	r3, [r7, #56]
 4871              		.loc 2 532 10
 4872 006a BB6B     		ldr	r3, [r7, #56]
 4873              	.LBE478:
 4874              	.LBE477:
 4875              		.loc 1 2276 3 discriminator 1
 4876 006c 002B     		cmp	r3, #0
 4877 006e E5D1     		bne	.L253
 4878              	.LBE474:
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4879              		.loc 1 2279 12
 4880 0070 7B68     		ldr	r3, [r7, #4]
 4881 0072 1B6B     		ldr	r3, [r3, #48]
 4882              		.loc 1 2279 6
 4883 0074 012B     		cmp	r3, #1
 4884 0076 19D1     		bne	.L254
 4885              	.L257:
 4886              	.LBB479:
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4887              		.loc 1 2281 5 discriminator 1
 4888 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 137


 4889 007a 1B68     		ldr	r3, [r3]
 4890 007c 0C33     		adds	r3, r3, #12
 4891 007e 3B62     		str	r3, [r7, #32]
 4892              	.LBB480:
 4893              	.LBB481:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4894              		.loc 2 480 4
 4895 0080 3B6A     		ldr	r3, [r7, #32]
 4896              		.syntax unified
 4897              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4898 0082 53E8003F 		ldrex r3, [r3]
 4899              	@ 0 "" 2
 4900              		.thumb
 4901              		.syntax unified
 4902 0086 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4903              		.loc 2 481 10
 4904 0088 FB69     		ldr	r3, [r7, #28]
 4905              	.LBE481:
 4906              	.LBE480:
 4907              		.loc 1 2281 5 discriminator 1
 4908 008a 23F01003 		bic	r3, r3, #16
 4909 008e FB65     		str	r3, [r7, #92]
 4910 0090 7B68     		ldr	r3, [r7, #4]
 4911 0092 1B68     		ldr	r3, [r3]
 4912 0094 0C33     		adds	r3, r3, #12
 4913 0096 FA6D     		ldr	r2, [r7, #92]
 4914 0098 FA62     		str	r2, [r7, #44]
 4915 009a BB62     		str	r3, [r7, #40]
 4916              	.LBB482:
 4917              	.LBB483:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4918              		.loc 2 531 4
 4919 009c B96A     		ldr	r1, [r7, #40]
 4920 009e FA6A     		ldr	r2, [r7, #44]
 4921              		.syntax unified
 4922              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4923 00a0 41E80023 		strex r3, r2, [r1]
 4924              	@ 0 "" 2
 4925              		.thumb
 4926              		.syntax unified
 4927 00a4 7B62     		str	r3, [r7, #36]
 4928              		.loc 2 532 10
 4929 00a6 7B6A     		ldr	r3, [r7, #36]
 4930              	.LBE483:
 4931              	.LBE482:
 4932              		.loc 1 2281 5 discriminator 1
 4933 00a8 002B     		cmp	r3, #0
 4934 00aa E5D1     		bne	.L257
 4935              	.L254:
 4936              	.LBE479:
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4937              		.loc 1 2285 7
 4938 00ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 138


 4939 00ae 1B68     		ldr	r3, [r3]
 4940 00b0 5B69     		ldr	r3, [r3, #20]
 4941 00b2 03F04003 		and	r3, r3, #64
 4942              		.loc 1 2285 6
 4943 00b6 402B     		cmp	r3, #64
 4944 00b8 3FD1     		bne	.L258
 4945              	.L261:
 4946              	.LBB484:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4947              		.loc 1 2287 5 discriminator 1
 4948 00ba 7B68     		ldr	r3, [r7, #4]
 4949 00bc 1B68     		ldr	r3, [r3]
 4950 00be 1433     		adds	r3, r3, #20
 4951 00c0 FB60     		str	r3, [r7, #12]
 4952              	.LBB485:
 4953              	.LBB486:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4954              		.loc 2 480 4
 4955 00c2 FB68     		ldr	r3, [r7, #12]
 4956              		.syntax unified
 4957              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4958 00c4 53E8003F 		ldrex r3, [r3]
 4959              	@ 0 "" 2
 4960              		.thumb
 4961              		.syntax unified
 4962 00c8 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4963              		.loc 2 481 10
 4964 00ca BB68     		ldr	r3, [r7, #8]
 4965              	.LBE486:
 4966              	.LBE485:
 4967              		.loc 1 2287 5 discriminator 1
 4968 00cc 23F04003 		bic	r3, r3, #64
 4969 00d0 BB65     		str	r3, [r7, #88]
 4970 00d2 7B68     		ldr	r3, [r7, #4]
 4971 00d4 1B68     		ldr	r3, [r3]
 4972 00d6 1433     		adds	r3, r3, #20
 4973 00d8 BA6D     		ldr	r2, [r7, #88]
 4974 00da BA61     		str	r2, [r7, #24]
 4975 00dc 7B61     		str	r3, [r7, #20]
 4976              	.LBB487:
 4977              	.LBB488:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4978              		.loc 2 531 4
 4979 00de 7969     		ldr	r1, [r7, #20]
 4980 00e0 BA69     		ldr	r2, [r7, #24]
 4981              		.syntax unified
 4982              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4983 00e2 41E80023 		strex r3, r2, [r1]
 4984              	@ 0 "" 2
 4985              		.thumb
 4986              		.syntax unified
 4987 00e6 3B61     		str	r3, [r7, #16]
 4988              		.loc 2 532 10
 4989 00e8 3B69     		ldr	r3, [r7, #16]
 4990              	.LBE488:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 139


 4991              	.LBE487:
 4992              		.loc 1 2287 5 discriminator 1
 4993 00ea 002B     		cmp	r3, #0
 4994 00ec E5D1     		bne	.L261
 4995              	.LBE484:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4996              		.loc 1 2290 14
 4997 00ee 7B68     		ldr	r3, [r7, #4]
 4998 00f0 DB6B     		ldr	r3, [r3, #60]
 4999              		.loc 1 2290 8
 5000 00f2 002B     		cmp	r3, #0
 5001 00f4 13D0     		beq	.L262
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5002              		.loc 1 2294 12
 5003 00f6 7B68     		ldr	r3, [r7, #4]
 5004 00f8 DB6B     		ldr	r3, [r3, #60]
 5005              		.loc 1 2294 40
 5006 00fa 194A     		ldr	r2, .L265
 5007 00fc 1A65     		str	r2, [r3, #80]
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5008              		.loc 1 2297 11
 5009 00fe 7B68     		ldr	r3, [r7, #4]
 5010 0100 DB6B     		ldr	r3, [r3, #60]
 5011 0102 1846     		mov	r0, r3
 5012 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5013 0108 0346     		mov	r3, r0
 5014              		.loc 1 2297 10 discriminator 1
 5015 010a 002B     		cmp	r3, #0
 5016 010c 22D0     		beq	.L263
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5017              		.loc 1 2300 14
 5018 010e 7B68     		ldr	r3, [r7, #4]
 5019 0110 DB6B     		ldr	r3, [r3, #60]
 5020              		.loc 1 2300 22
 5021 0112 1B6D     		ldr	r3, [r3, #80]
 5022              		.loc 1 2300 47
 5023 0114 7A68     		ldr	r2, [r7, #4]
 5024 0116 D26B     		ldr	r2, [r2, #60]
 5025              		.loc 1 2300 9
 5026 0118 1046     		mov	r0, r2
 5027 011a 9847     		blx	r3
 5028              	.LVL1:
 5029 011c 1AE0     		b	.L263
 5030              	.L262:
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 140


2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 5031              		.loc 1 2306 26
 5032 011e 7B68     		ldr	r3, [r7, #4]
 5033 0120 0022     		movs	r2, #0
 5034 0122 DA85     		strh	r2, [r3, #46]	@ movhi
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5035              		.loc 1 2309 22
 5036 0124 7B68     		ldr	r3, [r7, #4]
 5037 0126 2022     		movs	r2, #32
 5038 0128 83F84220 		strb	r2, [r3, #66]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5039              		.loc 1 2310 28
 5040 012c 7B68     		ldr	r3, [r7, #4]
 5041 012e 0022     		movs	r2, #0
 5042 0130 1A63     		str	r2, [r3, #48]
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5043              		.loc 1 2318 7
 5044 0132 7868     		ldr	r0, [r7, #4]
 5045 0134 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5046 0138 0CE0     		b	.L263
 5047              	.L258:
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5048              		.loc 1 2325 24
 5049 013a 7B68     		ldr	r3, [r7, #4]
 5050 013c 0022     		movs	r2, #0
 5051 013e DA85     		strh	r2, [r3, #46]	@ movhi
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5052              		.loc 1 2328 20
 5053 0140 7B68     		ldr	r3, [r7, #4]
 5054 0142 2022     		movs	r2, #32
 5055 0144 83F84220 		strb	r2, [r3, #66]
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5056              		.loc 1 2329 26
 5057 0148 7B68     		ldr	r3, [r7, #4]
 5058 014a 0022     		movs	r2, #0
 5059 014c 1A63     		str	r2, [r3, #48]
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 141


2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5060              		.loc 1 2337 5
 5061 014e 7868     		ldr	r0, [r7, #4]
 5062 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5063              	.L263:
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5064              		.loc 1 2341 10
 5065 0154 0023     		movs	r3, #0
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5066              		.loc 1 2342 1
 5067 0156 1846     		mov	r0, r3
 5068 0158 6837     		adds	r7, r7, #104
 5069              	.LCFI134:
 5070              		.cfi_def_cfa_offset 8
 5071 015a BD46     		mov	sp, r7
 5072              	.LCFI135:
 5073              		.cfi_def_cfa_register 13
 5074              		@ sp needed
 5075 015c 80BD     		pop	{r7, pc}
 5076              	.L266:
 5077 015e 00BF     		.align	2
 5078              	.L265:
 5079 0160 00000000 		.word	UART_DMARxOnlyAbortCallback
 5080              		.cfi_endproc
 5081              	.LFE159:
 5083              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5084              		.align	1
 5085              		.global	HAL_UART_IRQHandler
 5086              		.syntax unified
 5087              		.thumb
 5088              		.thumb_func
 5090              	HAL_UART_IRQHandler:
 5091              	.LFB160:
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5092              		.loc 1 2351 1
 5093              		.cfi_startproc
 5094              		@ args = 0, pretend = 0, frame = 232
 5095              		@ frame_needed = 1, uses_anonymous_args = 0
 5096 0000 80B5     		push	{r7, lr}
 5097              	.LCFI136:
 5098              		.cfi_def_cfa_offset 8
 5099              		.cfi_offset 7, -8
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 142


 5100              		.cfi_offset 14, -4
 5101 0002 BAB0     		sub	sp, sp, #232
 5102              	.LCFI137:
 5103              		.cfi_def_cfa_offset 240
 5104 0004 00AF     		add	r7, sp, #0
 5105              	.LCFI138:
 5106              		.cfi_def_cfa_register 7
 5107 0006 7860     		str	r0, [r7, #4]
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 5108              		.loc 1 2352 25
 5109 0008 7B68     		ldr	r3, [r7, #4]
 5110 000a 1B68     		ldr	r3, [r3]
 5111              		.loc 1 2352 12
 5112 000c 1B68     		ldr	r3, [r3]
 5113 000e C7F8E430 		str	r3, [r7, #228]
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5114              		.loc 1 2353 25
 5115 0012 7B68     		ldr	r3, [r7, #4]
 5116 0014 1B68     		ldr	r3, [r3]
 5117              		.loc 1 2353 12
 5118 0016 DB68     		ldr	r3, [r3, #12]
 5119 0018 C7F8E030 		str	r3, [r7, #224]
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5120              		.loc 1 2354 25
 5121 001c 7B68     		ldr	r3, [r7, #4]
 5122 001e 1B68     		ldr	r3, [r3]
 5123              		.loc 1 2354 12
 5124 0020 5B69     		ldr	r3, [r3, #20]
 5125 0022 C7F8DC30 		str	r3, [r7, #220]
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 5126              		.loc 1 2355 12
 5127 0026 0023     		movs	r3, #0
 5128 0028 C7F8D830 		str	r3, [r7, #216]
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5129              		.loc 1 2356 12
 5130 002c 0023     		movs	r3, #0
 5131 002e C7F8D430 		str	r3, [r7, #212]
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 5132              		.loc 1 2359 14
 5133 0032 D7F8E430 		ldr	r3, [r7, #228]
 5134 0036 03F00F03 		and	r3, r3, #15
 5135 003a C7F8D830 		str	r3, [r7, #216]
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 5136              		.loc 1 2360 6
 5137 003e D7F8D830 		ldr	r3, [r7, #216]
 5138 0042 002B     		cmp	r3, #0
 5139 0044 0FD1     		bne	.L268
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5140              		.loc 1 2363 20
 5141 0046 D7F8E430 		ldr	r3, [r7, #228]
 5142 004a 03F02003 		and	r3, r3, #32
 5143              		.loc 1 2363 8
 5144 004e 002B     		cmp	r3, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 143


 5145 0050 09D0     		beq	.L268
 5146              		.loc 1 2363 59 discriminator 1
 5147 0052 D7F8E030 		ldr	r3, [r7, #224]
 5148 0056 03F02003 		and	r3, r3, #32
 5149              		.loc 1 2363 47 discriminator 1
 5150 005a 002B     		cmp	r3, #0
 5151 005c 03D0     		beq	.L268
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 5152              		.loc 1 2365 7
 5153 005e 7868     		ldr	r0, [r7, #4]
 5154 0060 FFF7FEFF 		bl	UART_Receive_IT
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5155              		.loc 1 2366 7
 5156 0064 5BE2     		b	.L267
 5157              	.L268:
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 5158              		.loc 1 2371 6
 5159 0066 D7F8D830 		ldr	r3, [r7, #216]
 5160 006a 002B     		cmp	r3, #0
 5161 006c 00F0DE80 		beq	.L270
 5162              		.loc 1 2371 42 discriminator 1
 5163 0070 D7F8DC30 		ldr	r3, [r7, #220]
 5164 0074 03F00103 		and	r3, r3, #1
 5165              		.loc 1 2371 29 discriminator 1
 5166 0078 002B     		cmp	r3, #0
 5167 007a 06D1     		bne	.L271
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5168              		.loc 1 2372 45
 5169 007c D7F8E030 		ldr	r3, [r7, #224]
 5170 0080 03F49073 		and	r3, r3, #288
 5171              		.loc 1 2372 33
 5172 0084 002B     		cmp	r3, #0
 5173 0086 00F0D180 		beq	.L270
 5174              	.L271:
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 5175              		.loc 1 2375 20
 5176 008a D7F8E430 		ldr	r3, [r7, #228]
 5177 008e 03F00103 		and	r3, r3, #1
 5178              		.loc 1 2375 8
 5179 0092 002B     		cmp	r3, #0
 5180 0094 0BD0     		beq	.L272
 5181              		.loc 1 2375 57 discriminator 1
 5182 0096 D7F8E030 		ldr	r3, [r7, #224]
 5183 009a 03F48073 		and	r3, r3, #256
 5184              		.loc 1 2375 45 discriminator 1
 5185 009e 002B     		cmp	r3, #0
 5186 00a0 05D0     		beq	.L272
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5187              		.loc 1 2377 12
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 144


 5188 00a2 7B68     		ldr	r3, [r7, #4]
 5189 00a4 5B6C     		ldr	r3, [r3, #68]
 5190              		.loc 1 2377 24
 5191 00a6 43F00102 		orr	r2, r3, #1
 5192 00aa 7B68     		ldr	r3, [r7, #4]
 5193 00ac 5A64     		str	r2, [r3, #68]
 5194              	.L272:
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5195              		.loc 1 2381 20
 5196 00ae D7F8E430 		ldr	r3, [r7, #228]
 5197 00b2 03F00403 		and	r3, r3, #4
 5198              		.loc 1 2381 8
 5199 00b6 002B     		cmp	r3, #0
 5200 00b8 0BD0     		beq	.L273
 5201              		.loc 1 2381 57 discriminator 1
 5202 00ba D7F8DC30 		ldr	r3, [r7, #220]
 5203 00be 03F00103 		and	r3, r3, #1
 5204              		.loc 1 2381 45 discriminator 1
 5205 00c2 002B     		cmp	r3, #0
 5206 00c4 05D0     		beq	.L273
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5207              		.loc 1 2383 12
 5208 00c6 7B68     		ldr	r3, [r7, #4]
 5209 00c8 5B6C     		ldr	r3, [r3, #68]
 5210              		.loc 1 2383 24
 5211 00ca 43F00202 		orr	r2, r3, #2
 5212 00ce 7B68     		ldr	r3, [r7, #4]
 5213 00d0 5A64     		str	r2, [r3, #68]
 5214              	.L273:
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5215              		.loc 1 2387 20
 5216 00d2 D7F8E430 		ldr	r3, [r7, #228]
 5217 00d6 03F00203 		and	r3, r3, #2
 5218              		.loc 1 2387 8
 5219 00da 002B     		cmp	r3, #0
 5220 00dc 0BD0     		beq	.L274
 5221              		.loc 1 2387 57 discriminator 1
 5222 00de D7F8DC30 		ldr	r3, [r7, #220]
 5223 00e2 03F00103 		and	r3, r3, #1
 5224              		.loc 1 2387 45 discriminator 1
 5225 00e6 002B     		cmp	r3, #0
 5226 00e8 05D0     		beq	.L274
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5227              		.loc 1 2389 12
 5228 00ea 7B68     		ldr	r3, [r7, #4]
 5229 00ec 5B6C     		ldr	r3, [r3, #68]
 5230              		.loc 1 2389 24
 5231 00ee 43F00402 		orr	r2, r3, #4
 5232 00f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 145


 5233 00f4 5A64     		str	r2, [r3, #68]
 5234              	.L274:
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 5235              		.loc 1 2393 20
 5236 00f6 D7F8E430 		ldr	r3, [r7, #228]
 5237 00fa 03F00803 		and	r3, r3, #8
 5238              		.loc 1 2393 8
 5239 00fe 002B     		cmp	r3, #0
 5240 0100 11D0     		beq	.L275
 5241              		.loc 1 2393 59 discriminator 1
 5242 0102 D7F8E030 		ldr	r3, [r7, #224]
 5243 0106 03F02003 		and	r3, r3, #32
 5244              		.loc 1 2393 46 discriminator 1
 5245 010a 002B     		cmp	r3, #0
 5246 010c 05D1     		bne	.L276
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5247              		.loc 1 2394 62
 5248 010e D7F8DC30 		ldr	r3, [r7, #220]
 5249 0112 03F00103 		and	r3, r3, #1
 5250              		.loc 1 2394 50
 5251 0116 002B     		cmp	r3, #0
 5252 0118 05D0     		beq	.L275
 5253              	.L276:
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5254              		.loc 1 2396 12
 5255 011a 7B68     		ldr	r3, [r7, #4]
 5256 011c 5B6C     		ldr	r3, [r3, #68]
 5257              		.loc 1 2396 24
 5258 011e 43F00802 		orr	r2, r3, #8
 5259 0122 7B68     		ldr	r3, [r7, #4]
 5260 0124 5A64     		str	r2, [r3, #68]
 5261              	.L275:
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5262              		.loc 1 2400 14
 5263 0126 7B68     		ldr	r3, [r7, #4]
 5264 0128 5B6C     		ldr	r3, [r3, #68]
 5265              		.loc 1 2400 8
 5266 012a 002B     		cmp	r3, #0
 5267 012c 00F0F281 		beq	.L314
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5268              		.loc 1 2403 22
 5269 0130 D7F8E430 		ldr	r3, [r7, #228]
 5270 0134 03F02003 		and	r3, r3, #32
 5271              		.loc 1 2403 10
 5272 0138 002B     		cmp	r3, #0
 5273 013a 08D0     		beq	.L278
 5274              		.loc 1 2403 61 discriminator 1
 5275 013c D7F8E030 		ldr	r3, [r7, #224]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 146


 5276 0140 03F02003 		and	r3, r3, #32
 5277              		.loc 1 2403 49 discriminator 1
 5278 0144 002B     		cmp	r3, #0
 5279 0146 02D0     		beq	.L278
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 5280              		.loc 1 2405 9
 5281 0148 7868     		ldr	r0, [r7, #4]
 5282 014a FFF7FEFF 		bl	UART_Receive_IT
 5283              	.L278:
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5284              		.loc 1 2410 20
 5285 014e 7B68     		ldr	r3, [r7, #4]
 5286 0150 1B68     		ldr	r3, [r3]
 5287 0152 5B69     		ldr	r3, [r3, #20]
 5288 0154 03F04003 		and	r3, r3, #64
 5289 0158 402B     		cmp	r3, #64
 5290 015a 0CBF     		ite	eq
 5291 015c 0123     		moveq	r3, #1
 5292 015e 0023     		movne	r3, #0
 5293 0160 DBB2     		uxtb	r3, r3
 5294              		.loc 1 2410 18
 5295 0162 C7F8D430 		str	r3, [r7, #212]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5296              		.loc 1 2411 18
 5297 0166 7B68     		ldr	r3, [r7, #4]
 5298 0168 5B6C     		ldr	r3, [r3, #68]
 5299              		.loc 1 2411 30
 5300 016a 03F00803 		and	r3, r3, #8
 5301              		.loc 1 2411 10
 5302 016e 002B     		cmp	r3, #0
 5303 0170 03D1     		bne	.L279
 5304              		.loc 1 2411 62 discriminator 1
 5305 0172 D7F8D430 		ldr	r3, [r7, #212]
 5306 0176 002B     		cmp	r3, #0
 5307 0178 4FD0     		beq	.L280
 5308              	.L279:
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5309              		.loc 1 2416 9
 5310 017a 7868     		ldr	r0, [r7, #4]
 5311 017c FFF7FEFF 		bl	UART_EndRxTransfer
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5312              		.loc 1 2419 13
 5313 0180 7B68     		ldr	r3, [r7, #4]
 5314 0182 1B68     		ldr	r3, [r3]
 5315 0184 5B69     		ldr	r3, [r3, #20]
 5316 0186 03F04003 		and	r3, r3, #64
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 147


 5317              		.loc 1 2419 12
 5318 018a 402B     		cmp	r3, #64
 5319 018c 41D1     		bne	.L281
 5320              	.L284:
 5321              	.LBB489:
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5322              		.loc 1 2421 11 discriminator 1
 5323 018e 7B68     		ldr	r3, [r7, #4]
 5324 0190 1B68     		ldr	r3, [r3]
 5325 0192 1433     		adds	r3, r3, #20
 5326 0194 C7F89C30 		str	r3, [r7, #156]
 5327              	.LBB490:
 5328              	.LBB491:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5329              		.loc 2 480 4
 5330 0198 D7F89C30 		ldr	r3, [r7, #156]
 5331              		.syntax unified
 5332              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5333 019c 53E8003F 		ldrex r3, [r3]
 5334              	@ 0 "" 2
 5335              		.thumb
 5336              		.syntax unified
 5337 01a0 C7F89830 		str	r3, [r7, #152]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5338              		.loc 2 481 10
 5339 01a4 D7F89830 		ldr	r3, [r7, #152]
 5340              	.LBE491:
 5341              	.LBE490:
 5342              		.loc 1 2421 11 discriminator 1
 5343 01a8 23F04003 		bic	r3, r3, #64
 5344 01ac C7F8D030 		str	r3, [r7, #208]
 5345 01b0 7B68     		ldr	r3, [r7, #4]
 5346 01b2 1B68     		ldr	r3, [r3]
 5347 01b4 1433     		adds	r3, r3, #20
 5348 01b6 D7F8D020 		ldr	r2, [r7, #208]
 5349 01ba C7F8A820 		str	r2, [r7, #168]
 5350 01be C7F8A430 		str	r3, [r7, #164]
 5351              	.LBB492:
 5352              	.LBB493:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5353              		.loc 2 531 4
 5354 01c2 D7F8A410 		ldr	r1, [r7, #164]
 5355 01c6 D7F8A820 		ldr	r2, [r7, #168]
 5356              		.syntax unified
 5357              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5358 01ca 41E80023 		strex r3, r2, [r1]
 5359              	@ 0 "" 2
 5360              		.thumb
 5361              		.syntax unified
 5362 01ce C7F8A030 		str	r3, [r7, #160]
 5363              		.loc 2 532 10
 5364 01d2 D7F8A030 		ldr	r3, [r7, #160]
 5365              	.LBE493:
 5366              	.LBE492:
 5367              		.loc 1 2421 11 discriminator 1
 5368 01d6 002B     		cmp	r3, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 148


 5369 01d8 D9D1     		bne	.L284
 5370              	.LBE489:
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5371              		.loc 1 2424 20
 5372 01da 7B68     		ldr	r3, [r7, #4]
 5373 01dc DB6B     		ldr	r3, [r3, #60]
 5374              		.loc 1 2424 14
 5375 01de 002B     		cmp	r3, #0
 5376 01e0 13D0     		beq	.L285
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5377              		.loc 1 2428 18
 5378 01e2 7B68     		ldr	r3, [r7, #4]
 5379 01e4 DB6B     		ldr	r3, [r3, #60]
 5380              		.loc 1 2428 46
 5381 01e6 7E4A     		ldr	r2, .L318
 5382 01e8 1A65     		str	r2, [r3, #80]
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5383              		.loc 1 2429 17
 5384 01ea 7B68     		ldr	r3, [r7, #4]
 5385 01ec DB6B     		ldr	r3, [r3, #60]
 5386 01ee 1846     		mov	r0, r3
 5387 01f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5388 01f4 0346     		mov	r3, r0
 5389              		.loc 1 2429 16 discriminator 1
 5390 01f6 002B     		cmp	r3, #0
 5391 01f8 16D0     		beq	.L315
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5392              		.loc 1 2432 20
 5393 01fa 7B68     		ldr	r3, [r7, #4]
 5394 01fc DB6B     		ldr	r3, [r3, #60]
 5395              		.loc 1 2432 28
 5396 01fe 1B6D     		ldr	r3, [r3, #80]
 5397              		.loc 1 2432 53
 5398 0200 7A68     		ldr	r2, [r7, #4]
 5399 0202 D26B     		ldr	r2, [r2, #60]
 5400              		.loc 1 2432 15
 5401 0204 1046     		mov	r0, r2
 5402 0206 9847     		blx	r3
 5403              	.LVL2:
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5404              		.loc 1 2419 12
 5405 0208 0EE0     		b	.L315
 5406              	.L285:
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 149


2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5407              		.loc 1 2443 13
 5408 020a 7868     		ldr	r0, [r7, #4]
 5409 020c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5410              		.loc 1 2419 12
 5411 0210 0AE0     		b	.L315
 5412              	.L281:
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5413              		.loc 1 2455 11
 5414 0212 7868     		ldr	r0, [r7, #4]
 5415 0214 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5416              		.loc 1 2419 12
 5417 0218 06E0     		b	.L315
 5418              	.L280:
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5419              		.loc 1 2468 9
 5420 021a 7868     		ldr	r0, [r7, #4]
 5421 021c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5422              		.loc 1 2471 26
 5423 0220 7B68     		ldr	r3, [r7, #4]
 5424 0222 0022     		movs	r2, #0
 5425 0224 5A64     		str	r2, [r3, #68]
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5426              		.loc 1 2474 5
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 150


 5427 0226 75E1     		b	.L314
 5428              	.L315:
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5429              		.loc 1 2419 12
 5430 0228 00BF     		nop
 5431              		.loc 1 2474 5
 5432 022a 73E1     		b	.L314
 5433              	.L270:
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5434              		.loc 1 2479 13
 5435 022c 7B68     		ldr	r3, [r7, #4]
 5436 022e 1B6B     		ldr	r3, [r3, #48]
 5437              		.loc 1 2479 6
 5438 0230 012B     		cmp	r3, #1
 5439 0232 40F04F81 		bne	.L287
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5440              		.loc 1 2480 21
 5441 0236 D7F8E430 		ldr	r3, [r7, #228]
 5442 023a 03F01003 		and	r3, r3, #16
 5443              		.loc 1 2480 7
 5444 023e 002B     		cmp	r3, #0
 5445 0240 00F04881 		beq	.L287
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5446              		.loc 1 2481 19
 5447 0244 D7F8E030 		ldr	r3, [r7, #224]
 5448 0248 03F01003 		and	r3, r3, #16
 5449              		.loc 1 2481 7
 5450 024c 002B     		cmp	r3, #0
 5451 024e 00F04181 		beq	.L287
 5452              	.LBB494:
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 5453              		.loc 1 2483 5
 5454 0252 0023     		movs	r3, #0
 5455 0254 BB60     		str	r3, [r7, #8]
 5456 0256 7B68     		ldr	r3, [r7, #4]
 5457 0258 1B68     		ldr	r3, [r3]
 5458 025a 1B68     		ldr	r3, [r3]
 5459 025c BB60     		str	r3, [r7, #8]
 5460 025e 7B68     		ldr	r3, [r7, #4]
 5461 0260 1B68     		ldr	r3, [r3]
 5462 0262 5B68     		ldr	r3, [r3, #4]
 5463 0264 BB60     		str	r3, [r7, #8]
 5464 0266 BB68     		ldr	r3, [r7, #8]
 5465              	.LBE494:
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5466              		.loc 1 2486 9
 5467 0268 7B68     		ldr	r3, [r7, #4]
 5468 026a 1B68     		ldr	r3, [r3]
 5469 026c 5B69     		ldr	r3, [r3, #20]
 5470 026e 03F04003 		and	r3, r3, #64
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 151


 5471              		.loc 1 2486 8
 5472 0272 402B     		cmp	r3, #64
 5473 0274 40F0B680 		bne	.L288
 5474              	.LBB495:
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5475              		.loc 1 2492 50
 5476 0278 7B68     		ldr	r3, [r7, #4]
 5477 027a DB6B     		ldr	r3, [r3, #60]
 5478 027c 1B68     		ldr	r3, [r3]
 5479 027e 5B68     		ldr	r3, [r3, #4]
 5480              		.loc 1 2492 16
 5481 0280 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5482              		.loc 1 2493 10
 5483 0284 B7F8BE30 		ldrh	r3, [r7, #190]
 5484 0288 002B     		cmp	r3, #0
 5485 028a 00F04581 		beq	.L316
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5486              		.loc 1 2494 43
 5487 028e 7B68     		ldr	r3, [r7, #4]
 5488 0290 9B8D     		ldrh	r3, [r3, #44]
 5489              		.loc 1 2494 11
 5490 0292 B7F8BE20 		ldrh	r2, [r7, #190]
 5491 0296 9A42     		cmp	r2, r3
 5492 0298 80F03E81 		bcs	.L316
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5493              		.loc 1 2497 28
 5494 029c 7B68     		ldr	r3, [r7, #4]
 5495 029e B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5496 02a2 DA85     		strh	r2, [r3, #46]	@ movhi
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5497              		.loc 1 2500 18
 5498 02a4 7B68     		ldr	r3, [r7, #4]
 5499 02a6 DB6B     		ldr	r3, [r3, #60]
 5500              		.loc 1 2500 32
 5501 02a8 DB69     		ldr	r3, [r3, #28]
 5502              		.loc 1 2500 12
 5503 02aa B3F5807F 		cmp	r3, #256
 5504 02ae 00F08880 		beq	.L290
 5505              	.L293:
 5506              	.LBB496:
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5507              		.loc 1 2503 11 discriminator 1
 5508 02b2 7B68     		ldr	r3, [r7, #4]
 5509 02b4 1B68     		ldr	r3, [r3]
 5510 02b6 0C33     		adds	r3, r3, #12
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 152


 5511 02b8 C7F88830 		str	r3, [r7, #136]
 5512              	.LBB497:
 5513              	.LBB498:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5514              		.loc 2 480 4
 5515 02bc D7F88830 		ldr	r3, [r7, #136]
 5516              		.syntax unified
 5517              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5518 02c0 53E8003F 		ldrex r3, [r3]
 5519              	@ 0 "" 2
 5520              		.thumb
 5521              		.syntax unified
 5522 02c4 C7F88430 		str	r3, [r7, #132]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5523              		.loc 2 481 10
 5524 02c8 D7F88430 		ldr	r3, [r7, #132]
 5525              	.LBE498:
 5526              	.LBE497:
 5527              		.loc 1 2503 11 discriminator 1
 5528 02cc 23F48073 		bic	r3, r3, #256
 5529 02d0 C7F8B830 		str	r3, [r7, #184]
 5530 02d4 7B68     		ldr	r3, [r7, #4]
 5531 02d6 1B68     		ldr	r3, [r3]
 5532 02d8 0C33     		adds	r3, r3, #12
 5533 02da D7F8B820 		ldr	r2, [r7, #184]
 5534 02de C7F89420 		str	r2, [r7, #148]
 5535 02e2 C7F89030 		str	r3, [r7, #144]
 5536              	.LBB499:
 5537              	.LBB500:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5538              		.loc 2 531 4
 5539 02e6 D7F89010 		ldr	r1, [r7, #144]
 5540 02ea D7F89420 		ldr	r2, [r7, #148]
 5541              		.syntax unified
 5542              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5543 02ee 41E80023 		strex r3, r2, [r1]
 5544              	@ 0 "" 2
 5545              		.thumb
 5546              		.syntax unified
 5547 02f2 C7F88C30 		str	r3, [r7, #140]
 5548              		.loc 2 532 10
 5549 02f6 D7F88C30 		ldr	r3, [r7, #140]
 5550              	.LBE500:
 5551              	.LBE499:
 5552              		.loc 1 2503 11 discriminator 1
 5553 02fa 002B     		cmp	r3, #0
 5554 02fc D9D1     		bne	.L293
 5555              	.L296:
 5556              	.LBE496:
 5557              	.LBB501:
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5558              		.loc 1 2504 11 discriminator 1
 5559 02fe 7B68     		ldr	r3, [r7, #4]
 5560 0300 1B68     		ldr	r3, [r3]
 5561 0302 1433     		adds	r3, r3, #20
 5562 0304 7B67     		str	r3, [r7, #116]
 5563              	.LBB502:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 153


 5564              	.LBB503:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5565              		.loc 2 480 4
 5566 0306 7B6F     		ldr	r3, [r7, #116]
 5567              		.syntax unified
 5568              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5569 0308 53E8003F 		ldrex r3, [r3]
 5570              	@ 0 "" 2
 5571              		.thumb
 5572              		.syntax unified
 5573 030c 3B67     		str	r3, [r7, #112]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5574              		.loc 2 481 10
 5575 030e 3B6F     		ldr	r3, [r7, #112]
 5576              	.LBE503:
 5577              	.LBE502:
 5578              		.loc 1 2504 11 discriminator 1
 5579 0310 23F00103 		bic	r3, r3, #1
 5580 0314 C7F8B430 		str	r3, [r7, #180]
 5581 0318 7B68     		ldr	r3, [r7, #4]
 5582 031a 1B68     		ldr	r3, [r3]
 5583 031c 1433     		adds	r3, r3, #20
 5584 031e D7F8B420 		ldr	r2, [r7, #180]
 5585 0322 C7F88020 		str	r2, [r7, #128]
 5586 0326 FB67     		str	r3, [r7, #124]
 5587              	.LBB504:
 5588              	.LBB505:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5589              		.loc 2 531 4
 5590 0328 F96F     		ldr	r1, [r7, #124]
 5591 032a D7F88020 		ldr	r2, [r7, #128]
 5592              		.syntax unified
 5593              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5594 032e 41E80023 		strex r3, r2, [r1]
 5595              	@ 0 "" 2
 5596              		.thumb
 5597              		.syntax unified
 5598 0332 BB67     		str	r3, [r7, #120]
 5599              		.loc 2 532 10
 5600 0334 BB6F     		ldr	r3, [r7, #120]
 5601              	.LBE505:
 5602              	.LBE504:
 5603              		.loc 1 2504 11 discriminator 1
 5604 0336 002B     		cmp	r3, #0
 5605 0338 E1D1     		bne	.L296
 5606              	.L299:
 5607              	.LBE501:
 5608              	.LBB506:
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5609              		.loc 1 2508 11 discriminator 1
 5610 033a 7B68     		ldr	r3, [r7, #4]
 5611 033c 1B68     		ldr	r3, [r3]
 5612 033e 1433     		adds	r3, r3, #20
 5613 0340 3B66     		str	r3, [r7, #96]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 154


 5614              	.LBB507:
 5615              	.LBB508:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5616              		.loc 2 480 4
 5617 0342 3B6E     		ldr	r3, [r7, #96]
 5618              		.syntax unified
 5619              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5620 0344 53E8003F 		ldrex r3, [r3]
 5621              	@ 0 "" 2
 5622              		.thumb
 5623              		.syntax unified
 5624 0348 FB65     		str	r3, [r7, #92]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5625              		.loc 2 481 10
 5626 034a FB6D     		ldr	r3, [r7, #92]
 5627              	.LBE508:
 5628              	.LBE507:
 5629              		.loc 1 2508 11 discriminator 1
 5630 034c 23F04003 		bic	r3, r3, #64
 5631 0350 C7F8B030 		str	r3, [r7, #176]
 5632 0354 7B68     		ldr	r3, [r7, #4]
 5633 0356 1B68     		ldr	r3, [r3]
 5634 0358 1433     		adds	r3, r3, #20
 5635 035a D7F8B020 		ldr	r2, [r7, #176]
 5636 035e FA66     		str	r2, [r7, #108]
 5637 0360 BB66     		str	r3, [r7, #104]
 5638              	.LBB509:
 5639              	.LBB510:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5640              		.loc 2 531 4
 5641 0362 B96E     		ldr	r1, [r7, #104]
 5642 0364 FA6E     		ldr	r2, [r7, #108]
 5643              		.syntax unified
 5644              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5645 0366 41E80023 		strex r3, r2, [r1]
 5646              	@ 0 "" 2
 5647              		.thumb
 5648              		.syntax unified
 5649 036a 7B66     		str	r3, [r7, #100]
 5650              		.loc 2 532 10
 5651 036c 7B6E     		ldr	r3, [r7, #100]
 5652              	.LBE510:
 5653              	.LBE509:
 5654              		.loc 1 2508 11 discriminator 1
 5655 036e 002B     		cmp	r3, #0
 5656 0370 E3D1     		bne	.L299
 5657              	.LBE506:
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5658              		.loc 1 2511 26
 5659 0372 7B68     		ldr	r3, [r7, #4]
 5660 0374 2022     		movs	r2, #32
 5661 0376 83F84220 		strb	r2, [r3, #66]
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5662              		.loc 1 2512 32
 5663 037a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 155


 5664 037c 0022     		movs	r2, #0
 5665 037e 1A63     		str	r2, [r3, #48]
 5666              	.L302:
 5667              	.LBB511:
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5668              		.loc 1 2514 11 discriminator 1
 5669 0380 7B68     		ldr	r3, [r7, #4]
 5670 0382 1B68     		ldr	r3, [r3]
 5671 0384 0C33     		adds	r3, r3, #12
 5672 0386 FB64     		str	r3, [r7, #76]
 5673              	.LBB512:
 5674              	.LBB513:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5675              		.loc 2 480 4
 5676 0388 FB6C     		ldr	r3, [r7, #76]
 5677              		.syntax unified
 5678              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5679 038a 53E8003F 		ldrex r3, [r3]
 5680              	@ 0 "" 2
 5681              		.thumb
 5682              		.syntax unified
 5683 038e BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5684              		.loc 2 481 10
 5685 0390 BB6C     		ldr	r3, [r7, #72]
 5686              	.LBE513:
 5687              	.LBE512:
 5688              		.loc 1 2514 11 discriminator 1
 5689 0392 23F01003 		bic	r3, r3, #16
 5690 0396 C7F8AC30 		str	r3, [r7, #172]
 5691 039a 7B68     		ldr	r3, [r7, #4]
 5692 039c 1B68     		ldr	r3, [r3]
 5693 039e 0C33     		adds	r3, r3, #12
 5694 03a0 D7F8AC20 		ldr	r2, [r7, #172]
 5695 03a4 BA65     		str	r2, [r7, #88]
 5696 03a6 7B65     		str	r3, [r7, #84]
 5697              	.LBB514:
 5698              	.LBB515:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5699              		.loc 2 531 4
 5700 03a8 796D     		ldr	r1, [r7, #84]
 5701 03aa BA6D     		ldr	r2, [r7, #88]
 5702              		.syntax unified
 5703              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5704 03ac 41E80023 		strex r3, r2, [r1]
 5705              	@ 0 "" 2
 5706              		.thumb
 5707              		.syntax unified
 5708 03b0 3B65     		str	r3, [r7, #80]
 5709              		.loc 2 532 10
 5710 03b2 3B6D     		ldr	r3, [r7, #80]
 5711              	.LBE515:
 5712              	.LBE514:
 5713              		.loc 1 2514 11 discriminator 1
 5714 03b4 002B     		cmp	r3, #0
 5715 03b6 E3D1     		bne	.L302
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 156


 5716              	.LBE511:
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5717              		.loc 1 2517 17
 5718 03b8 7B68     		ldr	r3, [r7, #4]
 5719 03ba DB6B     		ldr	r3, [r3, #60]
 5720 03bc 1846     		mov	r0, r3
 5721 03be FFF7FEFF 		bl	HAL_DMA_Abort
 5722              	.L290:
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         In this case, Rx Event type is Idle Event */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5723              		.loc 1 2522 28
 5724 03c2 7B68     		ldr	r3, [r7, #4]
 5725 03c4 0222     		movs	r2, #2
 5726 03c6 5A63     		str	r2, [r3, #52]
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5727              		.loc 1 2529 49
 5728 03c8 7B68     		ldr	r3, [r7, #4]
 5729 03ca 9A8D     		ldrh	r2, [r3, #44]
 5730              		.loc 1 2529 69
 5731 03cc 7B68     		ldr	r3, [r7, #4]
 5732 03ce DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5733 03d0 9BB2     		uxth	r3, r3
 5734              		.loc 1 2529 9
 5735 03d2 D31A     		subs	r3, r2, r3
 5736 03d4 9BB2     		uxth	r3, r3
 5737 03d6 1946     		mov	r1, r3
 5738 03d8 7868     		ldr	r0, [r7, #4]
 5739 03da FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5740              		.loc 1 2532 7
 5741 03de 9BE0     		b	.L316
 5742              	.L319:
 5743              		.align	2
 5744              	.L318:
 5745 03e0 00000000 		.word	UART_DMAAbortOnError
 5746              	.L288:
 5747              	.LBE495:
 5748              	.LBB516:
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 157


2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5749              		.loc 1 2539 34
 5750 03e4 7B68     		ldr	r3, [r7, #4]
 5751 03e6 9A8D     		ldrh	r2, [r3, #44]
 5752              		.loc 1 2539 54
 5753 03e8 7B68     		ldr	r3, [r7, #4]
 5754 03ea DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5755 03ec 9BB2     		uxth	r3, r3
 5756              		.loc 1 2539 16
 5757 03ee D31A     		subs	r3, r2, r3
 5758 03f0 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5759              		.loc 1 2540 17
 5760 03f4 7B68     		ldr	r3, [r7, #4]
 5761 03f6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5762 03f8 9BB2     		uxth	r3, r3
 5763              		.loc 1 2540 10
 5764 03fa 002B     		cmp	r3, #0
 5765 03fc 00F08E80 		beq	.L317
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5766              		.loc 1 2541 11
 5767 0400 B7F8CE30 		ldrh	r3, [r7, #206]
 5768 0404 002B     		cmp	r3, #0
 5769 0406 00F08980 		beq	.L317
 5770              	.L306:
 5771              	.LBB517:
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5772              		.loc 1 2544 9 discriminator 1
 5773 040a 7B68     		ldr	r3, [r7, #4]
 5774 040c 1B68     		ldr	r3, [r3]
 5775 040e 0C33     		adds	r3, r3, #12
 5776 0410 BB63     		str	r3, [r7, #56]
 5777              	.LBB518:
 5778              	.LBB519:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5779              		.loc 2 480 4
 5780 0412 BB6B     		ldr	r3, [r7, #56]
 5781              		.syntax unified
 5782              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5783 0414 53E8003F 		ldrex r3, [r3]
 5784              	@ 0 "" 2
 5785              		.thumb
 5786              		.syntax unified
 5787 0418 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5788              		.loc 2 481 10
 5789 041a 7B6B     		ldr	r3, [r7, #52]
 5790              	.LBE519:
 5791              	.LBE518:
 5792              		.loc 1 2544 9 discriminator 1
 5793 041c 23F49073 		bic	r3, r3, #288
 5794 0420 C7F8C830 		str	r3, [r7, #200]
 5795 0424 7B68     		ldr	r3, [r7, #4]
 5796 0426 1B68     		ldr	r3, [r3]
 5797 0428 0C33     		adds	r3, r3, #12
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 158


 5798 042a D7F8C820 		ldr	r2, [r7, #200]
 5799 042e 7A64     		str	r2, [r7, #68]
 5800 0430 3B64     		str	r3, [r7, #64]
 5801              	.LBB520:
 5802              	.LBB521:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5803              		.loc 2 531 4
 5804 0432 396C     		ldr	r1, [r7, #64]
 5805 0434 7A6C     		ldr	r2, [r7, #68]
 5806              		.syntax unified
 5807              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5808 0436 41E80023 		strex r3, r2, [r1]
 5809              	@ 0 "" 2
 5810              		.thumb
 5811              		.syntax unified
 5812 043a FB63     		str	r3, [r7, #60]
 5813              		.loc 2 532 10
 5814 043c FB6B     		ldr	r3, [r7, #60]
 5815              	.LBE521:
 5816              	.LBE520:
 5817              		.loc 1 2544 9 discriminator 1
 5818 043e 002B     		cmp	r3, #0
 5819 0440 E3D1     		bne	.L306
 5820              	.L309:
 5821              	.LBE517:
 5822              	.LBB522:
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5823              		.loc 1 2547 9 discriminator 1
 5824 0442 7B68     		ldr	r3, [r7, #4]
 5825 0444 1B68     		ldr	r3, [r3]
 5826 0446 1433     		adds	r3, r3, #20
 5827 0448 7B62     		str	r3, [r7, #36]
 5828              	.LBB523:
 5829              	.LBB524:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5830              		.loc 2 480 4
 5831 044a 7B6A     		ldr	r3, [r7, #36]
 5832              		.syntax unified
 5833              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5834 044c 53E8003F 		ldrex r3, [r3]
 5835              	@ 0 "" 2
 5836              		.thumb
 5837              		.syntax unified
 5838 0450 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5839              		.loc 2 481 10
 5840 0452 3B6A     		ldr	r3, [r7, #32]
 5841              	.LBE524:
 5842              	.LBE523:
 5843              		.loc 1 2547 9 discriminator 1
 5844 0454 23F00103 		bic	r3, r3, #1
 5845 0458 C7F8C430 		str	r3, [r7, #196]
 5846 045c 7B68     		ldr	r3, [r7, #4]
 5847 045e 1B68     		ldr	r3, [r3]
 5848 0460 1433     		adds	r3, r3, #20
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 159


 5849 0462 D7F8C420 		ldr	r2, [r7, #196]
 5850 0466 3A63     		str	r2, [r7, #48]
 5851 0468 FB62     		str	r3, [r7, #44]
 5852              	.LBB525:
 5853              	.LBB526:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5854              		.loc 2 531 4
 5855 046a F96A     		ldr	r1, [r7, #44]
 5856 046c 3A6B     		ldr	r2, [r7, #48]
 5857              		.syntax unified
 5858              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5859 046e 41E80023 		strex r3, r2, [r1]
 5860              	@ 0 "" 2
 5861              		.thumb
 5862              		.syntax unified
 5863 0472 BB62     		str	r3, [r7, #40]
 5864              		.loc 2 532 10
 5865 0474 BB6A     		ldr	r3, [r7, #40]
 5866              	.LBE526:
 5867              	.LBE525:
 5868              		.loc 1 2547 9 discriminator 1
 5869 0476 002B     		cmp	r3, #0
 5870 0478 E3D1     		bne	.L309
 5871              	.LBE522:
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5872              		.loc 1 2550 24
 5873 047a 7B68     		ldr	r3, [r7, #4]
 5874 047c 2022     		movs	r2, #32
 5875 047e 83F84220 		strb	r2, [r3, #66]
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5876              		.loc 1 2551 30
 5877 0482 7B68     		ldr	r3, [r7, #4]
 5878 0484 0022     		movs	r2, #0
 5879 0486 1A63     		str	r2, [r3, #48]
 5880              	.L312:
 5881              	.LBB527:
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5882              		.loc 1 2553 9 discriminator 1
 5883 0488 7B68     		ldr	r3, [r7, #4]
 5884 048a 1B68     		ldr	r3, [r3]
 5885 048c 0C33     		adds	r3, r3, #12
 5886 048e 3B61     		str	r3, [r7, #16]
 5887              	.LBB528:
 5888              	.LBB529:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5889              		.loc 2 480 4
 5890 0490 3B69     		ldr	r3, [r7, #16]
 5891              		.syntax unified
 5892              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5893 0492 53E8003F 		ldrex r3, [r3]
 5894              	@ 0 "" 2
 5895              		.thumb
 5896              		.syntax unified
 5897 0496 FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 160


 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5898              		.loc 2 481 10
 5899 0498 FB68     		ldr	r3, [r7, #12]
 5900              	.LBE529:
 5901              	.LBE528:
 5902              		.loc 1 2553 9 discriminator 1
 5903 049a 23F01003 		bic	r3, r3, #16
 5904 049e C7F8C030 		str	r3, [r7, #192]
 5905 04a2 7B68     		ldr	r3, [r7, #4]
 5906 04a4 1B68     		ldr	r3, [r3]
 5907 04a6 0C33     		adds	r3, r3, #12
 5908 04a8 D7F8C020 		ldr	r2, [r7, #192]
 5909 04ac FA61     		str	r2, [r7, #28]
 5910 04ae BB61     		str	r3, [r7, #24]
 5911              	.LBB530:
 5912              	.LBB531:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5913              		.loc 2 531 4
 5914 04b0 B969     		ldr	r1, [r7, #24]
 5915 04b2 FA69     		ldr	r2, [r7, #28]
 5916              		.syntax unified
 5917              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5918 04b4 41E80023 		strex r3, r2, [r1]
 5919              	@ 0 "" 2
 5920              		.thumb
 5921              		.syntax unified
 5922 04b8 7B61     		str	r3, [r7, #20]
 5923              		.loc 2 532 10
 5924 04ba 7B69     		ldr	r3, [r7, #20]
 5925              	.LBE531:
 5926              	.LBE530:
 5927              		.loc 1 2553 9 discriminator 1
 5928 04bc 002B     		cmp	r3, #0
 5929 04be E3D1     		bne	.L312
 5930              	.LBE527:
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5931              		.loc 1 2557 28
 5932 04c0 7B68     		ldr	r3, [r7, #4]
 5933 04c2 0222     		movs	r2, #2
 5934 04c4 5A63     		str	r2, [r3, #52]
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 5935              		.loc 1 2564 9
 5936 04c6 B7F8CE30 		ldrh	r3, [r7, #206]
 5937 04ca 1946     		mov	r1, r3
 5938 04cc 7868     		ldr	r0, [r7, #4]
 5939 04ce FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 161


2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5940              		.loc 1 2567 7
 5941 04d2 23E0     		b	.L317
 5942              	.L287:
 5943              	.LBE516:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 5944              		.loc 1 2572 18
 5945 04d4 D7F8E430 		ldr	r3, [r7, #228]
 5946 04d8 03F08003 		and	r3, r3, #128
 5947              		.loc 1 2572 6
 5948 04dc 002B     		cmp	r3, #0
 5949 04de 09D0     		beq	.L313
 5950              		.loc 1 2572 56 discriminator 1
 5951 04e0 D7F8E030 		ldr	r3, [r7, #224]
 5952 04e4 03F08003 		and	r3, r3, #128
 5953              		.loc 1 2572 44 discriminator 1
 5954 04e8 002B     		cmp	r3, #0
 5955 04ea 03D0     		beq	.L313
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 5956              		.loc 1 2574 5
 5957 04ec 7868     		ldr	r0, [r7, #4]
 5958 04ee FFF7FEFF 		bl	UART_Transmit_IT
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5959              		.loc 1 2575 5
 5960 04f2 14E0     		b	.L267
 5961              	.L313:
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 5962              		.loc 1 2579 18
 5963 04f4 D7F8E430 		ldr	r3, [r7, #228]
 5964 04f8 03F04003 		and	r3, r3, #64
 5965              		.loc 1 2579 6
 5966 04fc 002B     		cmp	r3, #0
 5967 04fe 0ED0     		beq	.L267
 5968              		.loc 1 2579 55 discriminator 1
 5969 0500 D7F8E030 		ldr	r3, [r7, #224]
 5970 0504 03F04003 		and	r3, r3, #64
 5971              		.loc 1 2579 43 discriminator 1
 5972 0508 002B     		cmp	r3, #0
 5973 050a 08D0     		beq	.L267
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 5974              		.loc 1 2581 5
 5975 050c 7868     		ldr	r0, [r7, #4]
 5976 050e FFF7FEFF 		bl	UART_EndTransmit_IT
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5977              		.loc 1 2582 5
 5978 0512 04E0     		b	.L267
 5979              	.L314:
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 162


 5980              		.loc 1 2474 5
 5981 0514 00BF     		nop
 5982 0516 02E0     		b	.L267
 5983              	.L316:
 5984              	.LBB532:
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5985              		.loc 1 2532 7
 5986 0518 00BF     		nop
 5987 051a 00E0     		b	.L267
 5988              	.L317:
 5989              	.LBE532:
 5990              	.LBB533:
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5991              		.loc 1 2567 7
 5992 051c 00BF     		nop
 5993              	.L267:
 5994              	.LBE533:
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5995              		.loc 1 2584 1
 5996 051e E837     		adds	r7, r7, #232
 5997              	.LCFI139:
 5998              		.cfi_def_cfa_offset 8
 5999 0520 BD46     		mov	sp, r7
 6000              	.LCFI140:
 6001              		.cfi_def_cfa_register 13
 6002              		@ sp needed
 6003 0522 80BD     		pop	{r7, pc}
 6004              		.cfi_endproc
 6005              	.LFE160:
 6007              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6008              		.align	1
 6009              		.weak	HAL_UART_TxCpltCallback
 6010              		.syntax unified
 6011              		.thumb
 6012              		.thumb_func
 6014              	HAL_UART_TxCpltCallback:
 6015              	.LFB161:
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6016              		.loc 1 2593 1
 6017              		.cfi_startproc
 6018              		@ args = 0, pretend = 0, frame = 8
 6019              		@ frame_needed = 1, uses_anonymous_args = 0
 6020              		@ link register save eliminated.
 6021 0000 80B4     		push	{r7}
 6022              	.LCFI141:
 6023              		.cfi_def_cfa_offset 4
 6024              		.cfi_offset 7, -4
 6025 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 163


 6026              	.LCFI142:
 6027              		.cfi_def_cfa_offset 16
 6028 0004 00AF     		add	r7, sp, #0
 6029              	.LCFI143:
 6030              		.cfi_def_cfa_register 7
 6031 0006 7860     		str	r0, [r7, #4]
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6032              		.loc 1 2599 1
 6033 0008 00BF     		nop
 6034 000a 0C37     		adds	r7, r7, #12
 6035              	.LCFI144:
 6036              		.cfi_def_cfa_offset 4
 6037 000c BD46     		mov	sp, r7
 6038              	.LCFI145:
 6039              		.cfi_def_cfa_register 13
 6040              		@ sp needed
 6041 000e 5DF8047B 		ldr	r7, [sp], #4
 6042              	.LCFI146:
 6043              		.cfi_restore 7
 6044              		.cfi_def_cfa_offset 0
 6045 0012 7047     		bx	lr
 6046              		.cfi_endproc
 6047              	.LFE161:
 6049              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6050              		.align	1
 6051              		.weak	HAL_UART_TxHalfCpltCallback
 6052              		.syntax unified
 6053              		.thumb
 6054              		.thumb_func
 6056              	HAL_UART_TxHalfCpltCallback:
 6057              	.LFB162:
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6058              		.loc 1 2608 1
 6059              		.cfi_startproc
 6060              		@ args = 0, pretend = 0, frame = 8
 6061              		@ frame_needed = 1, uses_anonymous_args = 0
 6062              		@ link register save eliminated.
 6063 0000 80B4     		push	{r7}
 6064              	.LCFI147:
 6065              		.cfi_def_cfa_offset 4
 6066              		.cfi_offset 7, -4
 6067 0002 83B0     		sub	sp, sp, #12
 6068              	.LCFI148:
 6069              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 164


 6070 0004 00AF     		add	r7, sp, #0
 6071              	.LCFI149:
 6072              		.cfi_def_cfa_register 7
 6073 0006 7860     		str	r0, [r7, #4]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6074              		.loc 1 2614 1
 6075 0008 00BF     		nop
 6076 000a 0C37     		adds	r7, r7, #12
 6077              	.LCFI150:
 6078              		.cfi_def_cfa_offset 4
 6079 000c BD46     		mov	sp, r7
 6080              	.LCFI151:
 6081              		.cfi_def_cfa_register 13
 6082              		@ sp needed
 6083 000e 5DF8047B 		ldr	r7, [sp], #4
 6084              	.LCFI152:
 6085              		.cfi_restore 7
 6086              		.cfi_def_cfa_offset 0
 6087 0012 7047     		bx	lr
 6088              		.cfi_endproc
 6089              	.LFE162:
 6091              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6092              		.align	1
 6093              		.weak	HAL_UART_RxCpltCallback
 6094              		.syntax unified
 6095              		.thumb
 6096              		.thumb_func
 6098              	HAL_UART_RxCpltCallback:
 6099              	.LFB163:
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6100              		.loc 1 2623 1
 6101              		.cfi_startproc
 6102              		@ args = 0, pretend = 0, frame = 8
 6103              		@ frame_needed = 1, uses_anonymous_args = 0
 6104              		@ link register save eliminated.
 6105 0000 80B4     		push	{r7}
 6106              	.LCFI153:
 6107              		.cfi_def_cfa_offset 4
 6108              		.cfi_offset 7, -4
 6109 0002 83B0     		sub	sp, sp, #12
 6110              	.LCFI154:
 6111              		.cfi_def_cfa_offset 16
 6112 0004 00AF     		add	r7, sp, #0
 6113              	.LCFI155:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 165


 6114              		.cfi_def_cfa_register 7
 6115 0006 7860     		str	r0, [r7, #4]
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6116              		.loc 1 2629 1
 6117 0008 00BF     		nop
 6118 000a 0C37     		adds	r7, r7, #12
 6119              	.LCFI156:
 6120              		.cfi_def_cfa_offset 4
 6121 000c BD46     		mov	sp, r7
 6122              	.LCFI157:
 6123              		.cfi_def_cfa_register 13
 6124              		@ sp needed
 6125 000e 5DF8047B 		ldr	r7, [sp], #4
 6126              	.LCFI158:
 6127              		.cfi_restore 7
 6128              		.cfi_def_cfa_offset 0
 6129 0012 7047     		bx	lr
 6130              		.cfi_endproc
 6131              	.LFE163:
 6133              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6134              		.align	1
 6135              		.weak	HAL_UART_RxHalfCpltCallback
 6136              		.syntax unified
 6137              		.thumb
 6138              		.thumb_func
 6140              	HAL_UART_RxHalfCpltCallback:
 6141              	.LFB164:
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6142              		.loc 1 2638 1
 6143              		.cfi_startproc
 6144              		@ args = 0, pretend = 0, frame = 8
 6145              		@ frame_needed = 1, uses_anonymous_args = 0
 6146              		@ link register save eliminated.
 6147 0000 80B4     		push	{r7}
 6148              	.LCFI159:
 6149              		.cfi_def_cfa_offset 4
 6150              		.cfi_offset 7, -4
 6151 0002 83B0     		sub	sp, sp, #12
 6152              	.LCFI160:
 6153              		.cfi_def_cfa_offset 16
 6154 0004 00AF     		add	r7, sp, #0
 6155              	.LCFI161:
 6156              		.cfi_def_cfa_register 7
 6157 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 166


2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6158              		.loc 1 2644 1
 6159 0008 00BF     		nop
 6160 000a 0C37     		adds	r7, r7, #12
 6161              	.LCFI162:
 6162              		.cfi_def_cfa_offset 4
 6163 000c BD46     		mov	sp, r7
 6164              	.LCFI163:
 6165              		.cfi_def_cfa_register 13
 6166              		@ sp needed
 6167 000e 5DF8047B 		ldr	r7, [sp], #4
 6168              	.LCFI164:
 6169              		.cfi_restore 7
 6170              		.cfi_def_cfa_offset 0
 6171 0012 7047     		bx	lr
 6172              		.cfi_endproc
 6173              	.LFE164:
 6175              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6176              		.align	1
 6177              		.weak	HAL_UART_ErrorCallback
 6178              		.syntax unified
 6179              		.thumb
 6180              		.thumb_func
 6182              	HAL_UART_ErrorCallback:
 6183              	.LFB165:
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6184              		.loc 1 2653 1
 6185              		.cfi_startproc
 6186              		@ args = 0, pretend = 0, frame = 8
 6187              		@ frame_needed = 1, uses_anonymous_args = 0
 6188              		@ link register save eliminated.
 6189 0000 80B4     		push	{r7}
 6190              	.LCFI165:
 6191              		.cfi_def_cfa_offset 4
 6192              		.cfi_offset 7, -4
 6193 0002 83B0     		sub	sp, sp, #12
 6194              	.LCFI166:
 6195              		.cfi_def_cfa_offset 16
 6196 0004 00AF     		add	r7, sp, #0
 6197              	.LCFI167:
 6198              		.cfi_def_cfa_register 7
 6199 0006 7860     		str	r0, [r7, #4]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 167


2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6200              		.loc 1 2659 1
 6201 0008 00BF     		nop
 6202 000a 0C37     		adds	r7, r7, #12
 6203              	.LCFI168:
 6204              		.cfi_def_cfa_offset 4
 6205 000c BD46     		mov	sp, r7
 6206              	.LCFI169:
 6207              		.cfi_def_cfa_register 13
 6208              		@ sp needed
 6209 000e 5DF8047B 		ldr	r7, [sp], #4
 6210              	.LCFI170:
 6211              		.cfi_restore 7
 6212              		.cfi_def_cfa_offset 0
 6213 0012 7047     		bx	lr
 6214              		.cfi_endproc
 6215              	.LFE165:
 6217              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6218              		.align	1
 6219              		.weak	HAL_UART_AbortCpltCallback
 6220              		.syntax unified
 6221              		.thumb
 6222              		.thumb_func
 6224              	HAL_UART_AbortCpltCallback:
 6225              	.LFB166:
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6226              		.loc 1 2667 1
 6227              		.cfi_startproc
 6228              		@ args = 0, pretend = 0, frame = 8
 6229              		@ frame_needed = 1, uses_anonymous_args = 0
 6230              		@ link register save eliminated.
 6231 0000 80B4     		push	{r7}
 6232              	.LCFI171:
 6233              		.cfi_def_cfa_offset 4
 6234              		.cfi_offset 7, -4
 6235 0002 83B0     		sub	sp, sp, #12
 6236              	.LCFI172:
 6237              		.cfi_def_cfa_offset 16
 6238 0004 00AF     		add	r7, sp, #0
 6239              	.LCFI173:
 6240              		.cfi_def_cfa_register 7
 6241 0006 7860     		str	r0, [r7, #4]
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 168


2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6242              		.loc 1 2674 1
 6243 0008 00BF     		nop
 6244 000a 0C37     		adds	r7, r7, #12
 6245              	.LCFI174:
 6246              		.cfi_def_cfa_offset 4
 6247 000c BD46     		mov	sp, r7
 6248              	.LCFI175:
 6249              		.cfi_def_cfa_register 13
 6250              		@ sp needed
 6251 000e 5DF8047B 		ldr	r7, [sp], #4
 6252              	.LCFI176:
 6253              		.cfi_restore 7
 6254              		.cfi_def_cfa_offset 0
 6255 0012 7047     		bx	lr
 6256              		.cfi_endproc
 6257              	.LFE166:
 6259              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6260              		.align	1
 6261              		.weak	HAL_UART_AbortTransmitCpltCallback
 6262              		.syntax unified
 6263              		.thumb
 6264              		.thumb_func
 6266              	HAL_UART_AbortTransmitCpltCallback:
 6267              	.LFB167:
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6268              		.loc 1 2682 1
 6269              		.cfi_startproc
 6270              		@ args = 0, pretend = 0, frame = 8
 6271              		@ frame_needed = 1, uses_anonymous_args = 0
 6272              		@ link register save eliminated.
 6273 0000 80B4     		push	{r7}
 6274              	.LCFI177:
 6275              		.cfi_def_cfa_offset 4
 6276              		.cfi_offset 7, -4
 6277 0002 83B0     		sub	sp, sp, #12
 6278              	.LCFI178:
 6279              		.cfi_def_cfa_offset 16
 6280 0004 00AF     		add	r7, sp, #0
 6281              	.LCFI179:
 6282              		.cfi_def_cfa_register 7
 6283 0006 7860     		str	r0, [r7, #4]
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 169


 6284              		.loc 1 2689 1
 6285 0008 00BF     		nop
 6286 000a 0C37     		adds	r7, r7, #12
 6287              	.LCFI180:
 6288              		.cfi_def_cfa_offset 4
 6289 000c BD46     		mov	sp, r7
 6290              	.LCFI181:
 6291              		.cfi_def_cfa_register 13
 6292              		@ sp needed
 6293 000e 5DF8047B 		ldr	r7, [sp], #4
 6294              	.LCFI182:
 6295              		.cfi_restore 7
 6296              		.cfi_def_cfa_offset 0
 6297 0012 7047     		bx	lr
 6298              		.cfi_endproc
 6299              	.LFE167:
 6301              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6302              		.align	1
 6303              		.weak	HAL_UART_AbortReceiveCpltCallback
 6304              		.syntax unified
 6305              		.thumb
 6306              		.thumb_func
 6308              	HAL_UART_AbortReceiveCpltCallback:
 6309              	.LFB168:
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6310              		.loc 1 2697 1
 6311              		.cfi_startproc
 6312              		@ args = 0, pretend = 0, frame = 8
 6313              		@ frame_needed = 1, uses_anonymous_args = 0
 6314              		@ link register save eliminated.
 6315 0000 80B4     		push	{r7}
 6316              	.LCFI183:
 6317              		.cfi_def_cfa_offset 4
 6318              		.cfi_offset 7, -4
 6319 0002 83B0     		sub	sp, sp, #12
 6320              	.LCFI184:
 6321              		.cfi_def_cfa_offset 16
 6322 0004 00AF     		add	r7, sp, #0
 6323              	.LCFI185:
 6324              		.cfi_def_cfa_register 7
 6325 0006 7860     		str	r0, [r7, #4]
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6326              		.loc 1 2704 1
 6327 0008 00BF     		nop
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 170


 6328 000a 0C37     		adds	r7, r7, #12
 6329              	.LCFI186:
 6330              		.cfi_def_cfa_offset 4
 6331 000c BD46     		mov	sp, r7
 6332              	.LCFI187:
 6333              		.cfi_def_cfa_register 13
 6334              		@ sp needed
 6335 000e 5DF8047B 		ldr	r7, [sp], #4
 6336              	.LCFI188:
 6337              		.cfi_restore 7
 6338              		.cfi_def_cfa_offset 0
 6339 0012 7047     		bx	lr
 6340              		.cfi_endproc
 6341              	.LFE168:
 6343              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6344              		.align	1
 6345              		.weak	HAL_UARTEx_RxEventCallback
 6346              		.syntax unified
 6347              		.thumb
 6348              		.thumb_func
 6350              	HAL_UARTEx_RxEventCallback:
 6351              	.LFB169:
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6352              		.loc 1 2714 1
 6353              		.cfi_startproc
 6354              		@ args = 0, pretend = 0, frame = 8
 6355              		@ frame_needed = 1, uses_anonymous_args = 0
 6356              		@ link register save eliminated.
 6357 0000 80B4     		push	{r7}
 6358              	.LCFI189:
 6359              		.cfi_def_cfa_offset 4
 6360              		.cfi_offset 7, -4
 6361 0002 83B0     		sub	sp, sp, #12
 6362              	.LCFI190:
 6363              		.cfi_def_cfa_offset 16
 6364 0004 00AF     		add	r7, sp, #0
 6365              	.LCFI191:
 6366              		.cfi_def_cfa_register 7
 6367 0006 7860     		str	r0, [r7, #4]
 6368 0008 0B46     		mov	r3, r1
 6369 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 171


2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6370              		.loc 1 2722 1
 6371 000c 00BF     		nop
 6372 000e 0C37     		adds	r7, r7, #12
 6373              	.LCFI192:
 6374              		.cfi_def_cfa_offset 4
 6375 0010 BD46     		mov	sp, r7
 6376              	.LCFI193:
 6377              		.cfi_def_cfa_register 13
 6378              		@ sp needed
 6379 0012 5DF8047B 		ldr	r7, [sp], #4
 6380              	.LCFI194:
 6381              		.cfi_restore 7
 6382              		.cfi_def_cfa_offset 0
 6383 0016 7047     		bx	lr
 6384              		.cfi_endproc
 6385              	.LFE169:
 6387              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6388              		.align	1
 6389              		.global	HAL_LIN_SendBreak
 6390              		.syntax unified
 6391              		.thumb
 6392              		.thumb_func
 6394              	HAL_LIN_SendBreak:
 6395              	.LFB170:
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 172


 6396              		.loc 1 2754 1
 6397              		.cfi_startproc
 6398              		@ args = 0, pretend = 0, frame = 32
 6399              		@ frame_needed = 1, uses_anonymous_args = 0
 6400              		@ link register save eliminated.
 6401 0000 80B4     		push	{r7}
 6402              	.LCFI195:
 6403              		.cfi_def_cfa_offset 4
 6404              		.cfi_offset 7, -4
 6405 0002 89B0     		sub	sp, sp, #36
 6406              	.LCFI196:
 6407              		.cfi_def_cfa_offset 40
 6408 0004 00AF     		add	r7, sp, #0
 6409              	.LCFI197:
 6410              		.cfi_def_cfa_register 7
 6411 0006 7860     		str	r0, [r7, #4]
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6412              		.loc 1 2759 3
 6413 0008 7B68     		ldr	r3, [r7, #4]
 6414 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6415 000e 012B     		cmp	r3, #1
 6416 0010 01D1     		bne	.L330
 6417              		.loc 1 2759 3 is_stmt 0 discriminator 1
 6418 0012 0223     		movs	r3, #2
 6419              		.loc 1 2759 3
 6420 0014 2AE0     		b	.L331
 6421              	.L330:
 6422              		.loc 1 2759 3 discriminator 2
 6423 0016 7B68     		ldr	r3, [r7, #4]
 6424 0018 0122     		movs	r2, #1
 6425 001a 83F84020 		strb	r2, [r3, #64]
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6426              		.loc 1 2761 17 is_stmt 1
 6427 001e 7B68     		ldr	r3, [r7, #4]
 6428 0020 2422     		movs	r2, #36
 6429 0022 83F84120 		strb	r2, [r3, #65]
 6430              	.L334:
 6431              	.LBB534:
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 6432              		.loc 1 2764 3 discriminator 1
 6433 0026 7B68     		ldr	r3, [r7, #4]
 6434 0028 1B68     		ldr	r3, [r3]
 6435 002a 0C33     		adds	r3, r3, #12
 6436 002c FB60     		str	r3, [r7, #12]
 6437              	.LBB535:
 6438              	.LBB536:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6439              		.loc 2 480 4
 6440 002e FB68     		ldr	r3, [r7, #12]
 6441              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 173


 6442              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6443 0030 53E8003F 		ldrex r3, [r3]
 6444              	@ 0 "" 2
 6445              		.thumb
 6446              		.syntax unified
 6447 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6448              		.loc 2 481 10
 6449 0036 BB68     		ldr	r3, [r7, #8]
 6450              	.LBE536:
 6451              	.LBE535:
 6452              		.loc 1 2764 3 discriminator 1
 6453 0038 43F00103 		orr	r3, r3, #1
 6454 003c FB61     		str	r3, [r7, #28]
 6455 003e 7B68     		ldr	r3, [r7, #4]
 6456 0040 1B68     		ldr	r3, [r3]
 6457 0042 0C33     		adds	r3, r3, #12
 6458 0044 FA69     		ldr	r2, [r7, #28]
 6459 0046 BA61     		str	r2, [r7, #24]
 6460 0048 7B61     		str	r3, [r7, #20]
 6461              	.LBB537:
 6462              	.LBB538:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6463              		.loc 2 531 4
 6464 004a 7969     		ldr	r1, [r7, #20]
 6465 004c BA69     		ldr	r2, [r7, #24]
 6466              		.syntax unified
 6467              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6468 004e 41E80023 		strex r3, r2, [r1]
 6469              	@ 0 "" 2
 6470              		.thumb
 6471              		.syntax unified
 6472 0052 3B61     		str	r3, [r7, #16]
 6473              		.loc 2 532 10
 6474 0054 3B69     		ldr	r3, [r7, #16]
 6475              	.LBE538:
 6476              	.LBE537:
 6477              		.loc 1 2764 3 discriminator 1
 6478 0056 002B     		cmp	r3, #0
 6479 0058 E5D1     		bne	.L334
 6480              	.LBE534:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6481              		.loc 1 2766 17
 6482 005a 7B68     		ldr	r3, [r7, #4]
 6483 005c 2022     		movs	r2, #32
 6484 005e 83F84120 		strb	r2, [r3, #65]
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6485              		.loc 1 2769 3
 6486 0062 7B68     		ldr	r3, [r7, #4]
 6487 0064 0022     		movs	r2, #0
 6488 0066 83F84020 		strb	r2, [r3, #64]
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6489              		.loc 1 2771 10
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 174


 6490 006a 0023     		movs	r3, #0
 6491              	.L331:
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6492              		.loc 1 2772 1
 6493 006c 1846     		mov	r0, r3
 6494 006e 2437     		adds	r7, r7, #36
 6495              	.LCFI198:
 6496              		.cfi_def_cfa_offset 4
 6497 0070 BD46     		mov	sp, r7
 6498              	.LCFI199:
 6499              		.cfi_def_cfa_register 13
 6500              		@ sp needed
 6501 0072 5DF8047B 		ldr	r7, [sp], #4
 6502              	.LCFI200:
 6503              		.cfi_restore 7
 6504              		.cfi_def_cfa_offset 0
 6505 0076 7047     		bx	lr
 6506              		.cfi_endproc
 6507              	.LFE170:
 6509              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6510              		.align	1
 6511              		.global	HAL_MultiProcessor_EnterMuteMode
 6512              		.syntax unified
 6513              		.thumb
 6514              		.thumb_func
 6516              	HAL_MultiProcessor_EnterMuteMode:
 6517              	.LFB171:
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6518              		.loc 1 2781 1
 6519              		.cfi_startproc
 6520              		@ args = 0, pretend = 0, frame = 32
 6521              		@ frame_needed = 1, uses_anonymous_args = 0
 6522              		@ link register save eliminated.
 6523 0000 80B4     		push	{r7}
 6524              	.LCFI201:
 6525              		.cfi_def_cfa_offset 4
 6526              		.cfi_offset 7, -4
 6527 0002 89B0     		sub	sp, sp, #36
 6528              	.LCFI202:
 6529              		.cfi_def_cfa_offset 40
 6530 0004 00AF     		add	r7, sp, #0
 6531              	.LCFI203:
 6532              		.cfi_def_cfa_register 7
 6533 0006 7860     		str	r0, [r7, #4]
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 175


 6534              		.loc 1 2786 3
 6535 0008 7B68     		ldr	r3, [r7, #4]
 6536 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6537 000e 012B     		cmp	r3, #1
 6538 0010 01D1     		bne	.L336
 6539              		.loc 1 2786 3 is_stmt 0 discriminator 1
 6540 0012 0223     		movs	r3, #2
 6541              		.loc 1 2786 3
 6542 0014 2DE0     		b	.L337
 6543              	.L336:
 6544              		.loc 1 2786 3 discriminator 2
 6545 0016 7B68     		ldr	r3, [r7, #4]
 6546 0018 0122     		movs	r2, #1
 6547 001a 83F84020 		strb	r2, [r3, #64]
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6548              		.loc 1 2788 17 is_stmt 1
 6549 001e 7B68     		ldr	r3, [r7, #4]
 6550 0020 2422     		movs	r2, #36
 6551 0022 83F84120 		strb	r2, [r3, #65]
 6552              	.L340:
 6553              	.LBB539:
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6554              		.loc 1 2791 3 discriminator 1
 6555 0026 7B68     		ldr	r3, [r7, #4]
 6556 0028 1B68     		ldr	r3, [r3]
 6557 002a 0C33     		adds	r3, r3, #12
 6558 002c FB60     		str	r3, [r7, #12]
 6559              	.LBB540:
 6560              	.LBB541:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6561              		.loc 2 480 4
 6562 002e FB68     		ldr	r3, [r7, #12]
 6563              		.syntax unified
 6564              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6565 0030 53E8003F 		ldrex r3, [r3]
 6566              	@ 0 "" 2
 6567              		.thumb
 6568              		.syntax unified
 6569 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6570              		.loc 2 481 10
 6571 0036 BB68     		ldr	r3, [r7, #8]
 6572              	.LBE541:
 6573              	.LBE540:
 6574              		.loc 1 2791 3 discriminator 1
 6575 0038 43F00203 		orr	r3, r3, #2
 6576 003c FB61     		str	r3, [r7, #28]
 6577 003e 7B68     		ldr	r3, [r7, #4]
 6578 0040 1B68     		ldr	r3, [r3]
 6579 0042 0C33     		adds	r3, r3, #12
 6580 0044 FA69     		ldr	r2, [r7, #28]
 6581 0046 BA61     		str	r2, [r7, #24]
 6582 0048 7B61     		str	r3, [r7, #20]
 6583              	.LBB542:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 176


 6584              	.LBB543:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6585              		.loc 2 531 4
 6586 004a 7969     		ldr	r1, [r7, #20]
 6587 004c BA69     		ldr	r2, [r7, #24]
 6588              		.syntax unified
 6589              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6590 004e 41E80023 		strex r3, r2, [r1]
 6591              	@ 0 "" 2
 6592              		.thumb
 6593              		.syntax unified
 6594 0052 3B61     		str	r3, [r7, #16]
 6595              		.loc 2 532 10
 6596 0054 3B69     		ldr	r3, [r7, #16]
 6597              	.LBE543:
 6598              	.LBE542:
 6599              		.loc 1 2791 3 discriminator 1
 6600 0056 002B     		cmp	r3, #0
 6601 0058 E5D1     		bne	.L340
 6602              	.LBE539:
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6603              		.loc 1 2793 17
 6604 005a 7B68     		ldr	r3, [r7, #4]
 6605 005c 2022     		movs	r2, #32
 6606 005e 83F84120 		strb	r2, [r3, #65]
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6607              		.loc 1 2794 22
 6608 0062 7B68     		ldr	r3, [r7, #4]
 6609 0064 0022     		movs	r2, #0
 6610 0066 5A63     		str	r2, [r3, #52]
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6611              		.loc 1 2797 3
 6612 0068 7B68     		ldr	r3, [r7, #4]
 6613 006a 0022     		movs	r2, #0
 6614 006c 83F84020 		strb	r2, [r3, #64]
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6615              		.loc 1 2799 10
 6616 0070 0023     		movs	r3, #0
 6617              	.L337:
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6618              		.loc 1 2800 1
 6619 0072 1846     		mov	r0, r3
 6620 0074 2437     		adds	r7, r7, #36
 6621              	.LCFI204:
 6622              		.cfi_def_cfa_offset 4
 6623 0076 BD46     		mov	sp, r7
 6624              	.LCFI205:
 6625              		.cfi_def_cfa_register 13
 6626              		@ sp needed
 6627 0078 5DF8047B 		ldr	r7, [sp], #4
 6628              	.LCFI206:
 6629              		.cfi_restore 7
 6630              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 177


 6631 007c 7047     		bx	lr
 6632              		.cfi_endproc
 6633              	.LFE171:
 6635              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6636              		.align	1
 6637              		.global	HAL_MultiProcessor_ExitMuteMode
 6638              		.syntax unified
 6639              		.thumb
 6640              		.thumb_func
 6642              	HAL_MultiProcessor_ExitMuteMode:
 6643              	.LFB172:
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6644              		.loc 1 2809 1
 6645              		.cfi_startproc
 6646              		@ args = 0, pretend = 0, frame = 32
 6647              		@ frame_needed = 1, uses_anonymous_args = 0
 6648              		@ link register save eliminated.
 6649 0000 80B4     		push	{r7}
 6650              	.LCFI207:
 6651              		.cfi_def_cfa_offset 4
 6652              		.cfi_offset 7, -4
 6653 0002 89B0     		sub	sp, sp, #36
 6654              	.LCFI208:
 6655              		.cfi_def_cfa_offset 40
 6656 0004 00AF     		add	r7, sp, #0
 6657              	.LCFI209:
 6658              		.cfi_def_cfa_register 7
 6659 0006 7860     		str	r0, [r7, #4]
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6660              		.loc 1 2814 3
 6661 0008 7B68     		ldr	r3, [r7, #4]
 6662 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6663 000e 012B     		cmp	r3, #1
 6664 0010 01D1     		bne	.L342
 6665              		.loc 1 2814 3 is_stmt 0 discriminator 1
 6666 0012 0223     		movs	r3, #2
 6667              		.loc 1 2814 3
 6668 0014 2DE0     		b	.L343
 6669              	.L342:
 6670              		.loc 1 2814 3 discriminator 2
 6671 0016 7B68     		ldr	r3, [r7, #4]
 6672 0018 0122     		movs	r2, #1
 6673 001a 83F84020 		strb	r2, [r3, #64]
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 178


 6674              		.loc 1 2816 17 is_stmt 1
 6675 001e 7B68     		ldr	r3, [r7, #4]
 6676 0020 2422     		movs	r2, #36
 6677 0022 83F84120 		strb	r2, [r3, #65]
 6678              	.L346:
 6679              	.LBB544:
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6680              		.loc 1 2819 3 discriminator 1
 6681 0026 7B68     		ldr	r3, [r7, #4]
 6682 0028 1B68     		ldr	r3, [r3]
 6683 002a 0C33     		adds	r3, r3, #12
 6684 002c FB60     		str	r3, [r7, #12]
 6685              	.LBB545:
 6686              	.LBB546:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6687              		.loc 2 480 4
 6688 002e FB68     		ldr	r3, [r7, #12]
 6689              		.syntax unified
 6690              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6691 0030 53E8003F 		ldrex r3, [r3]
 6692              	@ 0 "" 2
 6693              		.thumb
 6694              		.syntax unified
 6695 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6696              		.loc 2 481 10
 6697 0036 BB68     		ldr	r3, [r7, #8]
 6698              	.LBE546:
 6699              	.LBE545:
 6700              		.loc 1 2819 3 discriminator 1
 6701 0038 23F00203 		bic	r3, r3, #2
 6702 003c FB61     		str	r3, [r7, #28]
 6703 003e 7B68     		ldr	r3, [r7, #4]
 6704 0040 1B68     		ldr	r3, [r3]
 6705 0042 0C33     		adds	r3, r3, #12
 6706 0044 FA69     		ldr	r2, [r7, #28]
 6707 0046 BA61     		str	r2, [r7, #24]
 6708 0048 7B61     		str	r3, [r7, #20]
 6709              	.LBB547:
 6710              	.LBB548:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6711              		.loc 2 531 4
 6712 004a 7969     		ldr	r1, [r7, #20]
 6713 004c BA69     		ldr	r2, [r7, #24]
 6714              		.syntax unified
 6715              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6716 004e 41E80023 		strex r3, r2, [r1]
 6717              	@ 0 "" 2
 6718              		.thumb
 6719              		.syntax unified
 6720 0052 3B61     		str	r3, [r7, #16]
 6721              		.loc 2 532 10
 6722 0054 3B69     		ldr	r3, [r7, #16]
 6723              	.LBE548:
 6724              	.LBE547:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 179


 6725              		.loc 1 2819 3 discriminator 1
 6726 0056 002B     		cmp	r3, #0
 6727 0058 E5D1     		bne	.L346
 6728              	.LBE544:
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6729              		.loc 1 2821 17
 6730 005a 7B68     		ldr	r3, [r7, #4]
 6731 005c 2022     		movs	r2, #32
 6732 005e 83F84120 		strb	r2, [r3, #65]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6733              		.loc 1 2822 22
 6734 0062 7B68     		ldr	r3, [r7, #4]
 6735 0064 0022     		movs	r2, #0
 6736 0066 5A63     		str	r2, [r3, #52]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6737              		.loc 1 2825 3
 6738 0068 7B68     		ldr	r3, [r7, #4]
 6739 006a 0022     		movs	r2, #0
 6740 006c 83F84020 		strb	r2, [r3, #64]
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6741              		.loc 1 2827 10
 6742 0070 0023     		movs	r3, #0
 6743              	.L343:
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6744              		.loc 1 2828 1
 6745 0072 1846     		mov	r0, r3
 6746 0074 2437     		adds	r7, r7, #36
 6747              	.LCFI210:
 6748              		.cfi_def_cfa_offset 4
 6749 0076 BD46     		mov	sp, r7
 6750              	.LCFI211:
 6751              		.cfi_def_cfa_register 13
 6752              		@ sp needed
 6753 0078 5DF8047B 		ldr	r7, [sp], #4
 6754              	.LCFI212:
 6755              		.cfi_restore 7
 6756              		.cfi_def_cfa_offset 0
 6757 007c 7047     		bx	lr
 6758              		.cfi_endproc
 6759              	.LFE172:
 6761              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6762              		.align	1
 6763              		.global	HAL_HalfDuplex_EnableTransmitter
 6764              		.syntax unified
 6765              		.thumb
 6766              		.thumb_func
 6768              	HAL_HalfDuplex_EnableTransmitter:
 6769              	.LFB173:
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 180


2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6770              		.loc 1 2837 1
 6771              		.cfi_startproc
 6772              		@ args = 0, pretend = 0, frame = 16
 6773              		@ frame_needed = 1, uses_anonymous_args = 0
 6774              		@ link register save eliminated.
 6775 0000 80B4     		push	{r7}
 6776              	.LCFI213:
 6777              		.cfi_def_cfa_offset 4
 6778              		.cfi_offset 7, -4
 6779 0002 85B0     		sub	sp, sp, #20
 6780              	.LCFI214:
 6781              		.cfi_def_cfa_offset 24
 6782 0004 00AF     		add	r7, sp, #0
 6783              	.LCFI215:
 6784              		.cfi_def_cfa_register 7
 6785 0006 7860     		str	r0, [r7, #4]
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6786              		.loc 1 2838 12
 6787 0008 0023     		movs	r3, #0
 6788 000a FB60     		str	r3, [r7, #12]
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6789              		.loc 1 2841 3
 6790 000c 7B68     		ldr	r3, [r7, #4]
 6791 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6792 0012 012B     		cmp	r3, #1
 6793 0014 01D1     		bne	.L348
 6794              		.loc 1 2841 3 is_stmt 0 discriminator 1
 6795 0016 0223     		movs	r3, #2
 6796              		.loc 1 2841 3
 6797 0018 20E0     		b	.L349
 6798              	.L348:
 6799              		.loc 1 2841 3 discriminator 2
 6800 001a 7B68     		ldr	r3, [r7, #4]
 6801 001c 0122     		movs	r2, #1
 6802 001e 83F84020 		strb	r2, [r3, #64]
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6803              		.loc 1 2843 17 is_stmt 1
 6804 0022 7B68     		ldr	r3, [r7, #4]
 6805 0024 2422     		movs	r2, #36
 6806 0026 83F84120 		strb	r2, [r3, #65]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6807              		.loc 1 2846 17
 6808 002a 7B68     		ldr	r3, [r7, #4]
 6809 002c 1B68     		ldr	r3, [r3]
 6810              		.loc 1 2846 10
 6811 002e DB68     		ldr	r3, [r3, #12]
 6812 0030 FB60     		str	r3, [r7, #12]
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 181


2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6813              		.loc 1 2849 10
 6814 0032 FB68     		ldr	r3, [r7, #12]
 6815 0034 23F00C03 		bic	r3, r3, #12
 6816 0038 FB60     		str	r3, [r7, #12]
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 6817              		.loc 1 2852 10
 6818 003a FB68     		ldr	r3, [r7, #12]
 6819 003c 43F00803 		orr	r3, r3, #8
 6820 0040 FB60     		str	r3, [r7, #12]
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6821              		.loc 1 2855 3
 6822 0042 7B68     		ldr	r3, [r7, #4]
 6823 0044 1B68     		ldr	r3, [r3]
 6824 0046 FA68     		ldr	r2, [r7, #12]
 6825 0048 DA60     		str	r2, [r3, #12]
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6826              		.loc 1 2857 17
 6827 004a 7B68     		ldr	r3, [r7, #4]
 6828 004c 2022     		movs	r2, #32
 6829 004e 83F84120 		strb	r2, [r3, #65]
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6830              		.loc 1 2860 3
 6831 0052 7B68     		ldr	r3, [r7, #4]
 6832 0054 0022     		movs	r2, #0
 6833 0056 83F84020 		strb	r2, [r3, #64]
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6834              		.loc 1 2862 10
 6835 005a 0023     		movs	r3, #0
 6836              	.L349:
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6837              		.loc 1 2863 1
 6838 005c 1846     		mov	r0, r3
 6839 005e 1437     		adds	r7, r7, #20
 6840              	.LCFI216:
 6841              		.cfi_def_cfa_offset 4
 6842 0060 BD46     		mov	sp, r7
 6843              	.LCFI217:
 6844              		.cfi_def_cfa_register 13
 6845              		@ sp needed
 6846 0062 5DF8047B 		ldr	r7, [sp], #4
 6847              	.LCFI218:
 6848              		.cfi_restore 7
 6849              		.cfi_def_cfa_offset 0
 6850 0066 7047     		bx	lr
 6851              		.cfi_endproc
 6852              	.LFE173:
 6854              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 182


 6855              		.align	1
 6856              		.global	HAL_HalfDuplex_EnableReceiver
 6857              		.syntax unified
 6858              		.thumb
 6859              		.thumb_func
 6861              	HAL_HalfDuplex_EnableReceiver:
 6862              	.LFB174:
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6863              		.loc 1 2872 1
 6864              		.cfi_startproc
 6865              		@ args = 0, pretend = 0, frame = 16
 6866              		@ frame_needed = 1, uses_anonymous_args = 0
 6867              		@ link register save eliminated.
 6868 0000 80B4     		push	{r7}
 6869              	.LCFI219:
 6870              		.cfi_def_cfa_offset 4
 6871              		.cfi_offset 7, -4
 6872 0002 85B0     		sub	sp, sp, #20
 6873              	.LCFI220:
 6874              		.cfi_def_cfa_offset 24
 6875 0004 00AF     		add	r7, sp, #0
 6876              	.LCFI221:
 6877              		.cfi_def_cfa_register 7
 6878 0006 7860     		str	r0, [r7, #4]
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6879              		.loc 1 2873 12
 6880 0008 0023     		movs	r3, #0
 6881 000a FB60     		str	r3, [r7, #12]
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6882              		.loc 1 2876 3
 6883 000c 7B68     		ldr	r3, [r7, #4]
 6884 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6885 0012 012B     		cmp	r3, #1
 6886 0014 01D1     		bne	.L351
 6887              		.loc 1 2876 3 is_stmt 0 discriminator 1
 6888 0016 0223     		movs	r3, #2
 6889              		.loc 1 2876 3
 6890 0018 20E0     		b	.L352
 6891              	.L351:
 6892              		.loc 1 2876 3 discriminator 2
 6893 001a 7B68     		ldr	r3, [r7, #4]
 6894 001c 0122     		movs	r2, #1
 6895 001e 83F84020 		strb	r2, [r3, #64]
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6896              		.loc 1 2878 17 is_stmt 1
 6897 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 183


 6898 0024 2422     		movs	r2, #36
 6899 0026 83F84120 		strb	r2, [r3, #65]
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6900              		.loc 1 2881 17
 6901 002a 7B68     		ldr	r3, [r7, #4]
 6902 002c 1B68     		ldr	r3, [r3]
 6903              		.loc 1 2881 10
 6904 002e DB68     		ldr	r3, [r3, #12]
 6905 0030 FB60     		str	r3, [r7, #12]
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6906              		.loc 1 2884 10
 6907 0032 FB68     		ldr	r3, [r7, #12]
 6908 0034 23F00C03 		bic	r3, r3, #12
 6909 0038 FB60     		str	r3, [r7, #12]
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 6910              		.loc 1 2887 10
 6911 003a FB68     		ldr	r3, [r7, #12]
 6912 003c 43F00403 		orr	r3, r3, #4
 6913 0040 FB60     		str	r3, [r7, #12]
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6914              		.loc 1 2890 3
 6915 0042 7B68     		ldr	r3, [r7, #4]
 6916 0044 1B68     		ldr	r3, [r3]
 6917 0046 FA68     		ldr	r2, [r7, #12]
 6918 0048 DA60     		str	r2, [r3, #12]
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6919              		.loc 1 2892 17
 6920 004a 7B68     		ldr	r3, [r7, #4]
 6921 004c 2022     		movs	r2, #32
 6922 004e 83F84120 		strb	r2, [r3, #65]
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6923              		.loc 1 2895 3
 6924 0052 7B68     		ldr	r3, [r7, #4]
 6925 0054 0022     		movs	r2, #0
 6926 0056 83F84020 		strb	r2, [r3, #64]
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6927              		.loc 1 2897 10
 6928 005a 0023     		movs	r3, #0
 6929              	.L352:
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6930              		.loc 1 2898 1
 6931 005c 1846     		mov	r0, r3
 6932 005e 1437     		adds	r7, r7, #20
 6933              	.LCFI222:
 6934              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 184


 6935 0060 BD46     		mov	sp, r7
 6936              	.LCFI223:
 6937              		.cfi_def_cfa_register 13
 6938              		@ sp needed
 6939 0062 5DF8047B 		ldr	r7, [sp], #4
 6940              	.LCFI224:
 6941              		.cfi_restore 7
 6942              		.cfi_def_cfa_offset 0
 6943 0066 7047     		bx	lr
 6944              		.cfi_endproc
 6945              	.LFE174:
 6947              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6948              		.align	1
 6949              		.global	HAL_UART_GetState
 6950              		.syntax unified
 6951              		.thumb
 6952              		.thumb_func
 6954              	HAL_UART_GetState:
 6955              	.LFB175:
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6956              		.loc 1 2929 1
 6957              		.cfi_startproc
 6958              		@ args = 0, pretend = 0, frame = 16
 6959              		@ frame_needed = 1, uses_anonymous_args = 0
 6960              		@ link register save eliminated.
 6961 0000 80B4     		push	{r7}
 6962              	.LCFI225:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 185


 6963              		.cfi_def_cfa_offset 4
 6964              		.cfi_offset 7, -4
 6965 0002 85B0     		sub	sp, sp, #20
 6966              	.LCFI226:
 6967              		.cfi_def_cfa_offset 24
 6968 0004 00AF     		add	r7, sp, #0
 6969              	.LCFI227:
 6970              		.cfi_def_cfa_register 7
 6971 0006 7860     		str	r0, [r7, #4]
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 6972              		.loc 1 2930 12
 6973 0008 0023     		movs	r3, #0
 6974 000a FB60     		str	r3, [r7, #12]
 6975              		.loc 1 2930 27
 6976 000c 0023     		movs	r3, #0
 6977 000e BB60     		str	r3, [r7, #8]
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 6978              		.loc 1 2931 16
 6979 0010 7B68     		ldr	r3, [r7, #4]
 6980 0012 93F84130 		ldrb	r3, [r3, #65]
 6981 0016 DBB2     		uxtb	r3, r3
 6982              		.loc 1 2931 9
 6983 0018 FB60     		str	r3, [r7, #12]
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 6984              		.loc 1 2932 16
 6985 001a 7B68     		ldr	r3, [r7, #4]
 6986 001c 93F84230 		ldrb	r3, [r3, #66]
 6987 0020 DBB2     		uxtb	r3, r3
 6988              		.loc 1 2932 9
 6989 0022 BB60     		str	r3, [r7, #8]
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 6990              		.loc 1 2934 10
 6991 0024 FB68     		ldr	r3, [r7, #12]
 6992 0026 DAB2     		uxtb	r2, r3
 6993 0028 BB68     		ldr	r3, [r7, #8]
 6994 002a DBB2     		uxtb	r3, r3
 6995 002c 1343     		orrs	r3, r3, r2
 6996 002e DBB2     		uxtb	r3, r3
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6997              		.loc 1 2935 1
 6998 0030 1846     		mov	r0, r3
 6999 0032 1437     		adds	r7, r7, #20
 7000              	.LCFI228:
 7001              		.cfi_def_cfa_offset 4
 7002 0034 BD46     		mov	sp, r7
 7003              	.LCFI229:
 7004              		.cfi_def_cfa_register 13
 7005              		@ sp needed
 7006 0036 5DF8047B 		ldr	r7, [sp], #4
 7007              	.LCFI230:
 7008              		.cfi_restore 7
 7009              		.cfi_def_cfa_offset 0
 7010 003a 7047     		bx	lr
 7011              		.cfi_endproc
 7012              	.LFE175:
 7014              		.section	.text.HAL_UART_GetError,"ax",%progbits
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 186


 7015              		.align	1
 7016              		.global	HAL_UART_GetError
 7017              		.syntax unified
 7018              		.thumb
 7019              		.thumb_func
 7021              	HAL_UART_GetError:
 7022              	.LFB176:
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7023              		.loc 1 2944 1
 7024              		.cfi_startproc
 7025              		@ args = 0, pretend = 0, frame = 8
 7026              		@ frame_needed = 1, uses_anonymous_args = 0
 7027              		@ link register save eliminated.
 7028 0000 80B4     		push	{r7}
 7029              	.LCFI231:
 7030              		.cfi_def_cfa_offset 4
 7031              		.cfi_offset 7, -4
 7032 0002 83B0     		sub	sp, sp, #12
 7033              	.LCFI232:
 7034              		.cfi_def_cfa_offset 16
 7035 0004 00AF     		add	r7, sp, #0
 7036              	.LCFI233:
 7037              		.cfi_def_cfa_register 7
 7038 0006 7860     		str	r0, [r7, #4]
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 7039              		.loc 1 2945 15
 7040 0008 7B68     		ldr	r3, [r7, #4]
 7041 000a 5B6C     		ldr	r3, [r3, #68]
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7042              		.loc 1 2946 1
 7043 000c 1846     		mov	r0, r3
 7044 000e 0C37     		adds	r7, r7, #12
 7045              	.LCFI234:
 7046              		.cfi_def_cfa_offset 4
 7047 0010 BD46     		mov	sp, r7
 7048              	.LCFI235:
 7049              		.cfi_def_cfa_register 13
 7050              		@ sp needed
 7051 0012 5DF8047B 		ldr	r7, [sp], #4
 7052              	.LCFI236:
 7053              		.cfi_restore 7
 7054              		.cfi_def_cfa_offset 0
 7055 0016 7047     		bx	lr
 7056              		.cfi_endproc
 7057              	.LFE176:
 7059              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 7060              		.align	1
 7061              		.syntax unified
 7062              		.thumb
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 187


 7063              		.thumb_func
 7065              	UART_DMATransmitCplt:
 7066              	.LFB177:
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7067              		.loc 1 2989 1
 7068              		.cfi_startproc
 7069              		@ args = 0, pretend = 0, frame = 64
 7070              		@ frame_needed = 1, uses_anonymous_args = 0
 7071 0000 80B5     		push	{r7, lr}
 7072              	.LCFI237:
 7073              		.cfi_def_cfa_offset 8
 7074              		.cfi_offset 7, -8
 7075              		.cfi_offset 14, -4
 7076 0002 90B0     		sub	sp, sp, #64
 7077              	.LCFI238:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 188


 7078              		.cfi_def_cfa_offset 72
 7079 0004 00AF     		add	r7, sp, #0
 7080              	.LCFI239:
 7081              		.cfi_def_cfa_register 7
 7082 0006 7860     		str	r0, [r7, #4]
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7083              		.loc 1 2990 23
 7084 0008 7B68     		ldr	r3, [r7, #4]
 7085 000a 9B6B     		ldr	r3, [r3, #56]
 7086 000c FB63     		str	r3, [r7, #60]
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7087              		.loc 1 2992 12
 7088 000e 7B68     		ldr	r3, [r7, #4]
 7089 0010 1B68     		ldr	r3, [r3]
 7090              		.loc 1 2992 22
 7091 0012 1B68     		ldr	r3, [r3]
 7092              		.loc 1 2992 27
 7093 0014 03F48073 		and	r3, r3, #256
 7094              		.loc 1 2992 6
 7095 0018 002B     		cmp	r3, #0
 7096 001a 37D1     		bne	.L358
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7097              		.loc 1 2994 24
 7098 001c FB6B     		ldr	r3, [r7, #60]
 7099 001e 0022     		movs	r2, #0
 7100 0020 DA84     		strh	r2, [r3, #38]	@ movhi
 7101              	.L361:
 7102              	.LBB549:
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 7103              		.loc 1 2998 5 discriminator 1
 7104 0022 FB6B     		ldr	r3, [r7, #60]
 7105 0024 1B68     		ldr	r3, [r3]
 7106 0026 1433     		adds	r3, r3, #20
 7107 0028 7B62     		str	r3, [r7, #36]
 7108              	.LBB550:
 7109              	.LBB551:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7110              		.loc 2 480 4
 7111 002a 7B6A     		ldr	r3, [r7, #36]
 7112              		.syntax unified
 7113              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7114 002c 53E8003F 		ldrex r3, [r3]
 7115              	@ 0 "" 2
 7116              		.thumb
 7117              		.syntax unified
 7118 0030 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7119              		.loc 2 481 10
 7120 0032 3B6A     		ldr	r3, [r7, #32]
 7121              	.LBE551:
 7122              	.LBE550:
 7123              		.loc 1 2998 5 discriminator 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 189


 7124 0034 23F08003 		bic	r3, r3, #128
 7125 0038 BB63     		str	r3, [r7, #56]
 7126 003a FB6B     		ldr	r3, [r7, #60]
 7127 003c 1B68     		ldr	r3, [r3]
 7128 003e 1433     		adds	r3, r3, #20
 7129 0040 BA6B     		ldr	r2, [r7, #56]
 7130 0042 3A63     		str	r2, [r7, #48]
 7131 0044 FB62     		str	r3, [r7, #44]
 7132              	.LBB552:
 7133              	.LBB553:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7134              		.loc 2 531 4
 7135 0046 F96A     		ldr	r1, [r7, #44]
 7136 0048 3A6B     		ldr	r2, [r7, #48]
 7137              		.syntax unified
 7138              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7139 004a 41E80023 		strex r3, r2, [r1]
 7140              	@ 0 "" 2
 7141              		.thumb
 7142              		.syntax unified
 7143 004e BB62     		str	r3, [r7, #40]
 7144              		.loc 2 532 10
 7145 0050 BB6A     		ldr	r3, [r7, #40]
 7146              	.LBE553:
 7147              	.LBE552:
 7148              		.loc 1 2998 5 discriminator 1
 7149 0052 002B     		cmp	r3, #0
 7150 0054 E5D1     		bne	.L361
 7151              	.L364:
 7152              	.LBE549:
 7153              	.LBB554:
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7154              		.loc 1 3001 5 discriminator 1
 7155 0056 FB6B     		ldr	r3, [r7, #60]
 7156 0058 1B68     		ldr	r3, [r3]
 7157 005a 0C33     		adds	r3, r3, #12
 7158 005c 3B61     		str	r3, [r7, #16]
 7159              	.LBB555:
 7160              	.LBB556:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7161              		.loc 2 480 4
 7162 005e 3B69     		ldr	r3, [r7, #16]
 7163              		.syntax unified
 7164              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7165 0060 53E8003F 		ldrex r3, [r3]
 7166              	@ 0 "" 2
 7167              		.thumb
 7168              		.syntax unified
 7169 0064 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7170              		.loc 2 481 10
 7171 0066 FB68     		ldr	r3, [r7, #12]
 7172              	.LBE556:
 7173              	.LBE555:
 7174              		.loc 1 3001 5 discriminator 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 190


 7175 0068 43F04003 		orr	r3, r3, #64
 7176 006c 7B63     		str	r3, [r7, #52]
 7177 006e FB6B     		ldr	r3, [r7, #60]
 7178 0070 1B68     		ldr	r3, [r3]
 7179 0072 0C33     		adds	r3, r3, #12
 7180 0074 7A6B     		ldr	r2, [r7, #52]
 7181 0076 FA61     		str	r2, [r7, #28]
 7182 0078 BB61     		str	r3, [r7, #24]
 7183              	.LBB557:
 7184              	.LBB558:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7185              		.loc 2 531 4
 7186 007a B969     		ldr	r1, [r7, #24]
 7187 007c FA69     		ldr	r2, [r7, #28]
 7188              		.syntax unified
 7189              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7190 007e 41E80023 		strex r3, r2, [r1]
 7191              	@ 0 "" 2
 7192              		.thumb
 7193              		.syntax unified
 7194 0082 7B61     		str	r3, [r7, #20]
 7195              		.loc 2 532 10
 7196 0084 7B69     		ldr	r3, [r7, #20]
 7197              	.LBE558:
 7198              	.LBE557:
 7199              		.loc 1 3001 5 discriminator 1
 7200 0086 002B     		cmp	r3, #0
 7201 0088 E5D1     		bne	.L364
 7202              	.LBE554:
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7203              		.loc 1 3015 1
 7204 008a 02E0     		b	.L366
 7205              	.L358:
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7206              		.loc 1 3012 5
 7207 008c F86B     		ldr	r0, [r7, #60]
 7208 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 7209              	.L366:
 7210              		.loc 1 3015 1
 7211 0092 00BF     		nop
 7212 0094 4037     		adds	r7, r7, #64
 7213              	.LCFI240:
 7214              		.cfi_def_cfa_offset 8
 7215 0096 BD46     		mov	sp, r7
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 191


 7216              	.LCFI241:
 7217              		.cfi_def_cfa_register 13
 7218              		@ sp needed
 7219 0098 80BD     		pop	{r7, pc}
 7220              		.cfi_endproc
 7221              	.LFE177:
 7223              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 7224              		.align	1
 7225              		.syntax unified
 7226              		.thumb
 7227              		.thumb_func
 7229              	UART_DMATxHalfCplt:
 7230              	.LFB178:
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7231              		.loc 1 3024 1
 7232              		.cfi_startproc
 7233              		@ args = 0, pretend = 0, frame = 16
 7234              		@ frame_needed = 1, uses_anonymous_args = 0
 7235 0000 80B5     		push	{r7, lr}
 7236              	.LCFI242:
 7237              		.cfi_def_cfa_offset 8
 7238              		.cfi_offset 7, -8
 7239              		.cfi_offset 14, -4
 7240 0002 84B0     		sub	sp, sp, #16
 7241              	.LCFI243:
 7242              		.cfi_def_cfa_offset 24
 7243 0004 00AF     		add	r7, sp, #0
 7244              	.LCFI244:
 7245              		.cfi_def_cfa_register 7
 7246 0006 7860     		str	r0, [r7, #4]
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7247              		.loc 1 3025 23
 7248 0008 7B68     		ldr	r3, [r7, #4]
 7249 000a 9B6B     		ldr	r3, [r3, #56]
 7250 000c FB60     		str	r3, [r7, #12]
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 7251              		.loc 1 3032 3
 7252 000e F868     		ldr	r0, [r7, #12]
 7253 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7254              		.loc 1 3034 1
 7255 0014 00BF     		nop
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 192


 7256 0016 1037     		adds	r7, r7, #16
 7257              	.LCFI245:
 7258              		.cfi_def_cfa_offset 8
 7259 0018 BD46     		mov	sp, r7
 7260              	.LCFI246:
 7261              		.cfi_def_cfa_register 13
 7262              		@ sp needed
 7263 001a 80BD     		pop	{r7, pc}
 7264              		.cfi_endproc
 7265              	.LFE178:
 7267              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7268              		.align	1
 7269              		.syntax unified
 7270              		.thumb
 7271              		.thumb_func
 7273              	UART_DMAReceiveCplt:
 7274              	.LFB179:
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7275              		.loc 1 3043 1
 7276              		.cfi_startproc
 7277              		@ args = 0, pretend = 0, frame = 112
 7278              		@ frame_needed = 1, uses_anonymous_args = 0
 7279 0000 80B5     		push	{r7, lr}
 7280              	.LCFI247:
 7281              		.cfi_def_cfa_offset 8
 7282              		.cfi_offset 7, -8
 7283              		.cfi_offset 14, -4
 7284 0002 9CB0     		sub	sp, sp, #112
 7285              	.LCFI248:
 7286              		.cfi_def_cfa_offset 120
 7287 0004 00AF     		add	r7, sp, #0
 7288              	.LCFI249:
 7289              		.cfi_def_cfa_register 7
 7290 0006 7860     		str	r0, [r7, #4]
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7291              		.loc 1 3044 23
 7292 0008 7B68     		ldr	r3, [r7, #4]
 7293 000a 9B6B     		ldr	r3, [r3, #56]
 7294 000c FB66     		str	r3, [r7, #108]
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7295              		.loc 1 3047 12
 7296 000e 7B68     		ldr	r3, [r7, #4]
 7297 0010 1B68     		ldr	r3, [r3]
 7298              		.loc 1 3047 22
 7299 0012 1B68     		ldr	r3, [r3]
 7300              		.loc 1 3047 27
 7301 0014 03F48073 		and	r3, r3, #256
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 193


 7302              		.loc 1 3047 6
 7303 0018 002B     		cmp	r3, #0
 7304 001a 72D1     		bne	.L369
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 7305              		.loc 1 3049 24
 7306 001c FB6E     		ldr	r3, [r7, #108]
 7307 001e 0022     		movs	r2, #0
 7308 0020 DA85     		strh	r2, [r3, #46]	@ movhi
 7309              	.L372:
 7310              	.LBB559:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7311              		.loc 1 3052 5 discriminator 1
 7312 0022 FB6E     		ldr	r3, [r7, #108]
 7313 0024 1B68     		ldr	r3, [r3]
 7314 0026 0C33     		adds	r3, r3, #12
 7315 0028 FB64     		str	r3, [r7, #76]
 7316              	.LBB560:
 7317              	.LBB561:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7318              		.loc 2 480 4
 7319 002a FB6C     		ldr	r3, [r7, #76]
 7320              		.syntax unified
 7321              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7322 002c 53E8003F 		ldrex r3, [r3]
 7323              	@ 0 "" 2
 7324              		.thumb
 7325              		.syntax unified
 7326 0030 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7327              		.loc 2 481 10
 7328 0032 BB6C     		ldr	r3, [r7, #72]
 7329              	.LBE561:
 7330              	.LBE560:
 7331              		.loc 1 3052 5 discriminator 1
 7332 0034 23F48073 		bic	r3, r3, #256
 7333 0038 BB66     		str	r3, [r7, #104]
 7334 003a FB6E     		ldr	r3, [r7, #108]
 7335 003c 1B68     		ldr	r3, [r3]
 7336 003e 0C33     		adds	r3, r3, #12
 7337 0040 BA6E     		ldr	r2, [r7, #104]
 7338 0042 BA65     		str	r2, [r7, #88]
 7339 0044 7B65     		str	r3, [r7, #84]
 7340              	.LBB562:
 7341              	.LBB563:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7342              		.loc 2 531 4
 7343 0046 796D     		ldr	r1, [r7, #84]
 7344 0048 BA6D     		ldr	r2, [r7, #88]
 7345              		.syntax unified
 7346              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7347 004a 41E80023 		strex r3, r2, [r1]
 7348              	@ 0 "" 2
 7349              		.thumb
 7350              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 194


 7351 004e 3B65     		str	r3, [r7, #80]
 7352              		.loc 2 532 10
 7353 0050 3B6D     		ldr	r3, [r7, #80]
 7354              	.LBE563:
 7355              	.LBE562:
 7356              		.loc 1 3052 5 discriminator 1
 7357 0052 002B     		cmp	r3, #0
 7358 0054 E5D1     		bne	.L372
 7359              	.L375:
 7360              	.LBE559:
 7361              	.LBB564:
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7362              		.loc 1 3053 5 discriminator 1
 7363 0056 FB6E     		ldr	r3, [r7, #108]
 7364 0058 1B68     		ldr	r3, [r3]
 7365 005a 1433     		adds	r3, r3, #20
 7366 005c BB63     		str	r3, [r7, #56]
 7367              	.LBB565:
 7368              	.LBB566:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7369              		.loc 2 480 4
 7370 005e BB6B     		ldr	r3, [r7, #56]
 7371              		.syntax unified
 7372              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7373 0060 53E8003F 		ldrex r3, [r3]
 7374              	@ 0 "" 2
 7375              		.thumb
 7376              		.syntax unified
 7377 0064 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7378              		.loc 2 481 10
 7379 0066 7B6B     		ldr	r3, [r7, #52]
 7380              	.LBE566:
 7381              	.LBE565:
 7382              		.loc 1 3053 5 discriminator 1
 7383 0068 23F00103 		bic	r3, r3, #1
 7384 006c 7B66     		str	r3, [r7, #100]
 7385 006e FB6E     		ldr	r3, [r7, #108]
 7386 0070 1B68     		ldr	r3, [r3]
 7387 0072 1433     		adds	r3, r3, #20
 7388 0074 7A6E     		ldr	r2, [r7, #100]
 7389 0076 7A64     		str	r2, [r7, #68]
 7390 0078 3B64     		str	r3, [r7, #64]
 7391              	.LBB567:
 7392              	.LBB568:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7393              		.loc 2 531 4
 7394 007a 396C     		ldr	r1, [r7, #64]
 7395 007c 7A6C     		ldr	r2, [r7, #68]
 7396              		.syntax unified
 7397              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7398 007e 41E80023 		strex r3, r2, [r1]
 7399              	@ 0 "" 2
 7400              		.thumb
 7401              		.syntax unified
 7402 0082 FB63     		str	r3, [r7, #60]
 7403              		.loc 2 532 10
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 195


 7404 0084 FB6B     		ldr	r3, [r7, #60]
 7405              	.LBE568:
 7406              	.LBE567:
 7407              		.loc 1 3053 5 discriminator 1
 7408 0086 002B     		cmp	r3, #0
 7409 0088 E5D1     		bne	.L375
 7410              	.L378:
 7411              	.LBE564:
 7412              	.LBB569:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7413              		.loc 1 3057 5 discriminator 1
 7414 008a FB6E     		ldr	r3, [r7, #108]
 7415 008c 1B68     		ldr	r3, [r3]
 7416 008e 1433     		adds	r3, r3, #20
 7417 0090 7B62     		str	r3, [r7, #36]
 7418              	.LBB570:
 7419              	.LBB571:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7420              		.loc 2 480 4
 7421 0092 7B6A     		ldr	r3, [r7, #36]
 7422              		.syntax unified
 7423              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7424 0094 53E8003F 		ldrex r3, [r3]
 7425              	@ 0 "" 2
 7426              		.thumb
 7427              		.syntax unified
 7428 0098 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7429              		.loc 2 481 10
 7430 009a 3B6A     		ldr	r3, [r7, #32]
 7431              	.LBE571:
 7432              	.LBE570:
 7433              		.loc 1 3057 5 discriminator 1
 7434 009c 23F04003 		bic	r3, r3, #64
 7435 00a0 3B66     		str	r3, [r7, #96]
 7436 00a2 FB6E     		ldr	r3, [r7, #108]
 7437 00a4 1B68     		ldr	r3, [r3]
 7438 00a6 1433     		adds	r3, r3, #20
 7439 00a8 3A6E     		ldr	r2, [r7, #96]
 7440 00aa 3A63     		str	r2, [r7, #48]
 7441 00ac FB62     		str	r3, [r7, #44]
 7442              	.LBB572:
 7443              	.LBB573:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7444              		.loc 2 531 4
 7445 00ae F96A     		ldr	r1, [r7, #44]
 7446 00b0 3A6B     		ldr	r2, [r7, #48]
 7447              		.syntax unified
 7448              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7449 00b2 41E80023 		strex r3, r2, [r1]
 7450              	@ 0 "" 2
 7451              		.thumb
 7452              		.syntax unified
 7453 00b6 BB62     		str	r3, [r7, #40]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 196


 7454              		.loc 2 532 10
 7455 00b8 BB6A     		ldr	r3, [r7, #40]
 7456              	.LBE573:
 7457              	.LBE572:
 7458              		.loc 1 3057 5 discriminator 1
 7459 00ba 002B     		cmp	r3, #0
 7460 00bc E5D1     		bne	.L378
 7461              	.LBE569:
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 7462              		.loc 1 3060 20
 7463 00be FB6E     		ldr	r3, [r7, #108]
 7464 00c0 2022     		movs	r2, #32
 7465 00c2 83F84220 		strb	r2, [r3, #66]
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7466              		.loc 1 3063 14
 7467 00c6 FB6E     		ldr	r3, [r7, #108]
 7468 00c8 1B6B     		ldr	r3, [r3, #48]
 7469              		.loc 1 3063 8
 7470 00ca 012B     		cmp	r3, #1
 7471 00cc 19D1     		bne	.L369
 7472              	.L381:
 7473              	.LBB574:
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7474              		.loc 1 3065 7 discriminator 1
 7475 00ce FB6E     		ldr	r3, [r7, #108]
 7476 00d0 1B68     		ldr	r3, [r3]
 7477 00d2 0C33     		adds	r3, r3, #12
 7478 00d4 3B61     		str	r3, [r7, #16]
 7479              	.LBB575:
 7480              	.LBB576:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7481              		.loc 2 480 4
 7482 00d6 3B69     		ldr	r3, [r7, #16]
 7483              		.syntax unified
 7484              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7485 00d8 53E8003F 		ldrex r3, [r3]
 7486              	@ 0 "" 2
 7487              		.thumb
 7488              		.syntax unified
 7489 00dc FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7490              		.loc 2 481 10
 7491 00de FB68     		ldr	r3, [r7, #12]
 7492              	.LBE576:
 7493              	.LBE575:
 7494              		.loc 1 3065 7 discriminator 1
 7495 00e0 23F01003 		bic	r3, r3, #16
 7496 00e4 FB65     		str	r3, [r7, #92]
 7497 00e6 FB6E     		ldr	r3, [r7, #108]
 7498 00e8 1B68     		ldr	r3, [r3]
 7499 00ea 0C33     		adds	r3, r3, #12
 7500 00ec FA6D     		ldr	r2, [r7, #92]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 197


 7501 00ee FA61     		str	r2, [r7, #28]
 7502 00f0 BB61     		str	r3, [r7, #24]
 7503              	.LBB577:
 7504              	.LBB578:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7505              		.loc 2 531 4
 7506 00f2 B969     		ldr	r1, [r7, #24]
 7507 00f4 FA69     		ldr	r2, [r7, #28]
 7508              		.syntax unified
 7509              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7510 00f6 41E80023 		strex r3, r2, [r1]
 7511              	@ 0 "" 2
 7512              		.thumb
 7513              		.syntax unified
 7514 00fa 7B61     		str	r3, [r7, #20]
 7515              		.loc 2 532 10
 7516 00fc 7B69     		ldr	r3, [r7, #20]
 7517              	.LBE578:
 7518              	.LBE577:
 7519              		.loc 1 3065 7 discriminator 1
 7520 00fe 002B     		cmp	r3, #0
 7521 0100 E5D1     		bne	.L381
 7522              	.L369:
 7523              	.LBE574:
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    In this case, Rx Event type is Transfer Complete */
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 7524              		.loc 1 3071 22
 7525 0102 FB6E     		ldr	r3, [r7, #108]
 7526 0104 0022     		movs	r2, #0
 7527 0106 5A63     		str	r2, [r3, #52]
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7528              		.loc 1 3075 12
 7529 0108 FB6E     		ldr	r3, [r7, #108]
 7530 010a 1B6B     		ldr	r3, [r3, #48]
 7531              		.loc 1 3075 6
 7532 010c 012B     		cmp	r3, #1
 7533 010e 06D1     		bne	.L382
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 7534              		.loc 1 3082 5
 7535 0110 FB6E     		ldr	r3, [r7, #108]
 7536 0112 9B8D     		ldrh	r3, [r3, #44]
 7537 0114 1946     		mov	r1, r3
 7538 0116 F86E     		ldr	r0, [r7, #108]
 7539 0118 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 198


3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7540              		.loc 1 3096 1
 7541 011c 02E0     		b	.L384
 7542              	.L382:
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7543              		.loc 1 3093 5
 7544 011e F86E     		ldr	r0, [r7, #108]
 7545 0120 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7546              	.L384:
 7547              		.loc 1 3096 1
 7548 0124 00BF     		nop
 7549 0126 7037     		adds	r7, r7, #112
 7550              	.LCFI250:
 7551              		.cfi_def_cfa_offset 8
 7552 0128 BD46     		mov	sp, r7
 7553              	.LCFI251:
 7554              		.cfi_def_cfa_register 13
 7555              		@ sp needed
 7556 012a 80BD     		pop	{r7, pc}
 7557              		.cfi_endproc
 7558              	.LFE179:
 7560              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7561              		.align	1
 7562              		.syntax unified
 7563              		.thumb
 7564              		.thumb_func
 7566              	UART_DMARxHalfCplt:
 7567              	.LFB180:
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7568              		.loc 1 3105 1
 7569              		.cfi_startproc
 7570              		@ args = 0, pretend = 0, frame = 16
 7571              		@ frame_needed = 1, uses_anonymous_args = 0
 7572 0000 80B5     		push	{r7, lr}
 7573              	.LCFI252:
 7574              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 199


 7575              		.cfi_offset 7, -8
 7576              		.cfi_offset 14, -4
 7577 0002 84B0     		sub	sp, sp, #16
 7578              	.LCFI253:
 7579              		.cfi_def_cfa_offset 24
 7580 0004 00AF     		add	r7, sp, #0
 7581              	.LCFI254:
 7582              		.cfi_def_cfa_register 7
 7583 0006 7860     		str	r0, [r7, #4]
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7584              		.loc 1 3106 23
 7585 0008 7B68     		ldr	r3, [r7, #4]
 7586 000a 9B6B     		ldr	r3, [r3, #56]
 7587 000c FB60     		str	r3, [r7, #12]
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 7588              		.loc 1 3110 22
 7589 000e FB68     		ldr	r3, [r7, #12]
 7590 0010 0122     		movs	r2, #1
 7591 0012 5A63     		str	r2, [r3, #52]
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7592              		.loc 1 3114 12
 7593 0014 FB68     		ldr	r3, [r7, #12]
 7594 0016 1B6B     		ldr	r3, [r3, #48]
 7595              		.loc 1 3114 6
 7596 0018 012B     		cmp	r3, #1
 7597 001a 08D1     		bne	.L386
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 7598              		.loc 1 3121 44
 7599 001c FB68     		ldr	r3, [r7, #12]
 7600 001e 9B8D     		ldrh	r3, [r3, #44]
 7601              		.loc 1 3121 5
 7602 0020 5B08     		lsrs	r3, r3, #1
 7603 0022 9BB2     		uxth	r3, r3
 7604 0024 1946     		mov	r1, r3
 7605 0026 F868     		ldr	r0, [r7, #12]
 7606 0028 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 200


3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7607              		.loc 1 3135 1
 7608 002c 02E0     		b	.L388
 7609              	.L386:
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7610              		.loc 1 3132 5
 7611 002e F868     		ldr	r0, [r7, #12]
 7612 0030 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7613              	.L388:
 7614              		.loc 1 3135 1
 7615 0034 00BF     		nop
 7616 0036 1037     		adds	r7, r7, #16
 7617              	.LCFI255:
 7618              		.cfi_def_cfa_offset 8
 7619 0038 BD46     		mov	sp, r7
 7620              	.LCFI256:
 7621              		.cfi_def_cfa_register 13
 7622              		@ sp needed
 7623 003a 80BD     		pop	{r7, pc}
 7624              		.cfi_endproc
 7625              	.LFE180:
 7627              		.section	.text.UART_DMAError,"ax",%progbits
 7628              		.align	1
 7629              		.syntax unified
 7630              		.thumb
 7631              		.thumb_func
 7633              	UART_DMAError:
 7634              	.LFB181:
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7635              		.loc 1 3144 1
 7636              		.cfi_startproc
 7637              		@ args = 0, pretend = 0, frame = 16
 7638              		@ frame_needed = 1, uses_anonymous_args = 0
 7639 0000 80B5     		push	{r7, lr}
 7640              	.LCFI257:
 7641              		.cfi_def_cfa_offset 8
 7642              		.cfi_offset 7, -8
 7643              		.cfi_offset 14, -4
 7644 0002 84B0     		sub	sp, sp, #16
 7645              	.LCFI258:
 7646              		.cfi_def_cfa_offset 24
 7647 0004 00AF     		add	r7, sp, #0
 7648              	.LCFI259:
 7649              		.cfi_def_cfa_register 7
 7650 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 201


3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 7651              		.loc 1 3145 12
 7652 0008 0023     		movs	r3, #0
 7653 000a FB60     		str	r3, [r7, #12]
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7654              		.loc 1 3146 23
 7655 000c 7B68     		ldr	r3, [r7, #4]
 7656 000e 9B6B     		ldr	r3, [r3, #56]
 7657 0010 BB60     		str	r3, [r7, #8]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 7658              		.loc 1 3149 16
 7659 0012 BB68     		ldr	r3, [r7, #8]
 7660 0014 1B68     		ldr	r3, [r3]
 7661 0016 5B69     		ldr	r3, [r3, #20]
 7662 0018 03F08003 		and	r3, r3, #128
 7663 001c 802B     		cmp	r3, #128
 7664 001e 0CBF     		ite	eq
 7665 0020 0123     		moveq	r3, #1
 7666 0022 0023     		movne	r3, #0
 7667 0024 DBB2     		uxtb	r3, r3
 7668              		.loc 1 3149 14
 7669 0026 FB60     		str	r3, [r7, #12]
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 7670              		.loc 1 3150 13
 7671 0028 BB68     		ldr	r3, [r7, #8]
 7672 002a 93F84130 		ldrb	r3, [r3, #65]
 7673 002e DBB2     		uxtb	r3, r3
 7674              		.loc 1 3150 6
 7675 0030 212B     		cmp	r3, #33
 7676 0032 08D1     		bne	.L390
 7677              		.loc 1 3150 49 discriminator 1
 7678 0034 FB68     		ldr	r3, [r7, #12]
 7679 0036 002B     		cmp	r3, #0
 7680 0038 05D0     		beq	.L390
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7681              		.loc 1 3152 24
 7682 003a BB68     		ldr	r3, [r7, #8]
 7683 003c 0022     		movs	r2, #0
 7684 003e DA84     		strh	r2, [r3, #38]	@ movhi
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 7685              		.loc 1 3153 5
 7686 0040 B868     		ldr	r0, [r7, #8]
 7687 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 7688              	.L390:
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 7689              		.loc 1 3157 16
 7690 0046 BB68     		ldr	r3, [r7, #8]
 7691 0048 1B68     		ldr	r3, [r3]
 7692 004a 5B69     		ldr	r3, [r3, #20]
 7693 004c 03F04003 		and	r3, r3, #64
 7694 0050 402B     		cmp	r3, #64
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 202


 7695 0052 0CBF     		ite	eq
 7696 0054 0123     		moveq	r3, #1
 7697 0056 0023     		movne	r3, #0
 7698 0058 DBB2     		uxtb	r3, r3
 7699              		.loc 1 3157 14
 7700 005a FB60     		str	r3, [r7, #12]
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 7701              		.loc 1 3158 13
 7702 005c BB68     		ldr	r3, [r7, #8]
 7703 005e 93F84230 		ldrb	r3, [r3, #66]
 7704 0062 DBB2     		uxtb	r3, r3
 7705              		.loc 1 3158 6
 7706 0064 222B     		cmp	r3, #34
 7707 0066 08D1     		bne	.L391
 7708              		.loc 1 3158 50 discriminator 1
 7709 0068 FB68     		ldr	r3, [r7, #12]
 7710 006a 002B     		cmp	r3, #0
 7711 006c 05D0     		beq	.L391
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 7712              		.loc 1 3160 24
 7713 006e BB68     		ldr	r3, [r7, #8]
 7714 0070 0022     		movs	r2, #0
 7715 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 7716              		.loc 1 3161 5
 7717 0074 B868     		ldr	r0, [r7, #8]
 7718 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7719              	.L391:
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 7720              		.loc 1 3164 8
 7721 007a BB68     		ldr	r3, [r7, #8]
 7722 007c 5B6C     		ldr	r3, [r3, #68]
 7723              		.loc 1 3164 20
 7724 007e 43F01002 		orr	r2, r3, #16
 7725 0082 BB68     		ldr	r3, [r7, #8]
 7726 0084 5A64     		str	r2, [r3, #68]
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7727              		.loc 1 3170 3
 7728 0086 B868     		ldr	r0, [r7, #8]
 7729 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7730              		.loc 1 3172 1
 7731 008c 00BF     		nop
 7732 008e 1037     		adds	r7, r7, #16
 7733              	.LCFI260:
 7734              		.cfi_def_cfa_offset 8
 7735 0090 BD46     		mov	sp, r7
 7736              	.LCFI261:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 203


 7737              		.cfi_def_cfa_register 13
 7738              		@ sp needed
 7739 0092 80BD     		pop	{r7, pc}
 7740              		.cfi_endproc
 7741              	.LFE181:
 7743              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7744              		.align	1
 7745              		.syntax unified
 7746              		.thumb
 7747              		.thumb_func
 7749              	UART_WaitOnFlagUntilTimeout:
 7750              	.LFB182:
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7751              		.loc 1 3187 1
 7752              		.cfi_startproc
 7753              		@ args = 4, pretend = 0, frame = 24
 7754              		@ frame_needed = 1, uses_anonymous_args = 0
 7755 0000 80B5     		push	{r7, lr}
 7756              	.LCFI262:
 7757              		.cfi_def_cfa_offset 8
 7758              		.cfi_offset 7, -8
 7759              		.cfi_offset 14, -4
 7760 0002 86B0     		sub	sp, sp, #24
 7761              	.LCFI263:
 7762              		.cfi_def_cfa_offset 32
 7763 0004 00AF     		add	r7, sp, #0
 7764              	.LCFI264:
 7765              		.cfi_def_cfa_register 7
 7766 0006 F860     		str	r0, [r7, #12]
 7767 0008 B960     		str	r1, [r7, #8]
 7768 000a 3B60     		str	r3, [r7]
 7769 000c 1346     		mov	r3, r2
 7770 000e FB71     		strb	r3, [r7, #7]
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7771              		.loc 1 3189 9
 7772 0010 3BE0     		b	.L394
 7773              	.L399:
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7774              		.loc 1 3192 8
 7775 0012 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 204


 7776 0014 B3F1FF3F 		cmp	r3, #-1
 7777 0018 37D0     		beq	.L394
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 7778              		.loc 1 3194 13
 7779 001a FFF7FEFF 		bl	HAL_GetTick
 7780 001e 0246     		mov	r2, r0
 7781              		.loc 1 3194 27 discriminator 1
 7782 0020 3B68     		ldr	r3, [r7]
 7783 0022 D31A     		subs	r3, r2, r3
 7784              		.loc 1 3194 10 discriminator 1
 7785 0024 3A6A     		ldr	r2, [r7, #32]
 7786 0026 9A42     		cmp	r2, r3
 7787 0028 02D3     		bcc	.L395
 7788              		.loc 1 3194 51 discriminator 1
 7789 002a 3B6A     		ldr	r3, [r7, #32]
 7790 002c 002B     		cmp	r3, #0
 7791 002e 01D1     		bne	.L396
 7792              	.L395:
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 7793              		.loc 1 3197 16
 7794 0030 0323     		movs	r3, #3
 7795 0032 3AE0     		b	.L397
 7796              	.L396:
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag 
 7797              		.loc 1 3200 12
 7798 0034 FB68     		ldr	r3, [r7, #12]
 7799 0036 1B68     		ldr	r3, [r3]
 7800 0038 DB68     		ldr	r3, [r3, #12]
 7801 003a 03F00403 		and	r3, r3, #4
 7802              		.loc 1 3200 10
 7803 003e 002B     		cmp	r3, #0
 7804 0040 23D0     		beq	.L394
 7805              		.loc 1 3200 64 discriminator 1
 7806 0042 BB68     		ldr	r3, [r7, #8]
 7807 0044 802B     		cmp	r3, #128
 7808 0046 20D0     		beq	.L394
 7809              		.loc 1 3200 91 discriminator 2
 7810 0048 BB68     		ldr	r3, [r7, #8]
 7811 004a 402B     		cmp	r3, #64
 7812 004c 1DD0     		beq	.L394
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 7813              		.loc 1 3202 13
 7814 004e FB68     		ldr	r3, [r7, #12]
 7815 0050 1B68     		ldr	r3, [r3]
 7816 0052 1B68     		ldr	r3, [r3]
 7817 0054 03F00803 		and	r3, r3, #8
 7818              		.loc 1 3202 12
 7819 0058 082B     		cmp	r3, #8
 7820 005a 16D1     		bne	.L394
 7821              	.LBB579:
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 205


3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear Overrun Error flag*/
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_OREFLAG(huart);
 7822              		.loc 1 3205 11
 7823 005c 0023     		movs	r3, #0
 7824 005e 7B61     		str	r3, [r7, #20]
 7825 0060 FB68     		ldr	r3, [r7, #12]
 7826 0062 1B68     		ldr	r3, [r3]
 7827 0064 1B68     		ldr	r3, [r3]
 7828 0066 7B61     		str	r3, [r7, #20]
 7829 0068 FB68     		ldr	r3, [r7, #12]
 7830 006a 1B68     		ldr	r3, [r3]
 7831 006c 5B68     		ldr	r3, [r3, #4]
 7832 006e 7B61     		str	r3, [r7, #20]
 7833 0070 7B69     		ldr	r3, [r7, #20]
 7834              	.LBE579:
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 7835              		.loc 1 3210 11
 7836 0072 F868     		ldr	r0, [r7, #12]
 7837 0074 FFF7FEFF 		bl	UART_EndRxTransfer
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_ORE;
 7838              		.loc 1 3212 28
 7839 0078 FB68     		ldr	r3, [r7, #12]
 7840 007a 0822     		movs	r2, #8
 7841 007c 5A64     		str	r2, [r3, #68]
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Process Unlocked */
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 7842              		.loc 1 3215 11
 7843 007e FB68     		ldr	r3, [r7, #12]
 7844 0080 0022     		movs	r2, #0
 7845 0082 83F84020 		strb	r2, [r3, #64]
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_ERROR;
 7846              		.loc 1 3217 18
 7847 0086 0123     		movs	r3, #1
 7848 0088 0FE0     		b	.L397
 7849              	.L394:
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7850              		.loc 1 3189 11
 7851 008a FB68     		ldr	r3, [r7, #12]
 7852 008c 1B68     		ldr	r3, [r3]
 7853 008e 1A68     		ldr	r2, [r3]
 7854 0090 BB68     		ldr	r3, [r7, #8]
 7855 0092 1340     		ands	r3, r3, r2
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7856              		.loc 1 3189 50
 7857 0094 BA68     		ldr	r2, [r7, #8]
 7858 0096 9A42     		cmp	r2, r3
 7859 0098 0CBF     		ite	eq
 7860 009a 0123     		moveq	r3, #1
 7861 009c 0023     		movne	r3, #0
 7862 009e DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 206


 7863 00a0 1A46     		mov	r2, r3
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7864              		.loc 1 3189 59
 7865 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7866 00a4 9A42     		cmp	r2, r3
 7867 00a6 B4D0     		beq	.L399
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7868              		.loc 1 3222 10
 7869 00a8 0023     		movs	r3, #0
 7870              	.L397:
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7871              		.loc 1 3223 1
 7872 00aa 1846     		mov	r0, r3
 7873 00ac 1837     		adds	r7, r7, #24
 7874              	.LCFI265:
 7875              		.cfi_def_cfa_offset 8
 7876 00ae BD46     		mov	sp, r7
 7877              	.LCFI266:
 7878              		.cfi_def_cfa_register 13
 7879              		@ sp needed
 7880 00b0 80BD     		pop	{r7, pc}
 7881              		.cfi_endproc
 7882              	.LFE182:
 7884              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 7885              		.align	1
 7886              		.global	UART_Start_Receive_IT
 7887              		.syntax unified
 7888              		.thumb
 7889              		.thumb_func
 7891              	UART_Start_Receive_IT:
 7892              	.LFB183:
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7893              		.loc 1 3237 1
 7894              		.cfi_startproc
 7895              		@ args = 0, pretend = 0, frame = 16
 7896              		@ frame_needed = 1, uses_anonymous_args = 0
 7897              		@ link register save eliminated.
 7898 0000 80B4     		push	{r7}
 7899              	.LCFI267:
 7900              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 207


 7901              		.cfi_offset 7, -4
 7902 0002 85B0     		sub	sp, sp, #20
 7903              	.LCFI268:
 7904              		.cfi_def_cfa_offset 24
 7905 0004 00AF     		add	r7, sp, #0
 7906              	.LCFI269:
 7907              		.cfi_def_cfa_register 7
 7908 0006 F860     		str	r0, [r7, #12]
 7909 0008 B960     		str	r1, [r7, #8]
 7910 000a 1346     		mov	r3, r2
 7911 000c FB80     		strh	r3, [r7, #6]	@ movhi
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 7912              		.loc 1 3238 21
 7913 000e FB68     		ldr	r3, [r7, #12]
 7914 0010 BA68     		ldr	r2, [r7, #8]
 7915 0012 9A62     		str	r2, [r3, #40]
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 7916              		.loc 1 3239 21
 7917 0014 FB68     		ldr	r3, [r7, #12]
 7918 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7919 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 7920              		.loc 1 3240 22
 7921 001a FB68     		ldr	r3, [r7, #12]
 7922 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 7923 001e DA85     		strh	r2, [r3, #46]	@ movhi
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7924              		.loc 1 3242 20
 7925 0020 FB68     		ldr	r3, [r7, #12]
 7926 0022 0022     		movs	r2, #0
 7927 0024 5A64     		str	r2, [r3, #68]
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7928              		.loc 1 3243 18
 7929 0026 FB68     		ldr	r3, [r7, #12]
 7930 0028 2222     		movs	r2, #34
 7931 002a 83F84220 		strb	r2, [r3, #66]
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 7932              		.loc 1 3245 18
 7933 002e FB68     		ldr	r3, [r7, #12]
 7934 0030 1B69     		ldr	r3, [r3, #16]
 7935              		.loc 1 3245 6
 7936 0032 002B     		cmp	r3, #0
 7937 0034 07D0     		beq	.L401
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 7938              		.loc 1 3248 5
 7939 0036 FB68     		ldr	r3, [r7, #12]
 7940 0038 1B68     		ldr	r3, [r3]
 7941 003a DA68     		ldr	r2, [r3, #12]
 7942 003c FB68     		ldr	r3, [r7, #12]
 7943 003e 1B68     		ldr	r3, [r3]
 7944 0040 42F48072 		orr	r2, r2, #256
 7945 0044 DA60     		str	r2, [r3, #12]
 7946              	.L401:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 208


3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 7947              		.loc 1 3252 3
 7948 0046 FB68     		ldr	r3, [r7, #12]
 7949 0048 1B68     		ldr	r3, [r3]
 7950 004a 5A69     		ldr	r2, [r3, #20]
 7951 004c FB68     		ldr	r3, [r7, #12]
 7952 004e 1B68     		ldr	r3, [r3]
 7953 0050 42F00102 		orr	r2, r2, #1
 7954 0054 5A61     		str	r2, [r3, #20]
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 7955              		.loc 1 3255 3
 7956 0056 FB68     		ldr	r3, [r7, #12]
 7957 0058 1B68     		ldr	r3, [r3]
 7958 005a DA68     		ldr	r2, [r3, #12]
 7959 005c FB68     		ldr	r3, [r7, #12]
 7960 005e 1B68     		ldr	r3, [r3]
 7961 0060 42F02002 		orr	r2, r2, #32
 7962 0064 DA60     		str	r2, [r3, #12]
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7963              		.loc 1 3257 10
 7964 0066 0023     		movs	r3, #0
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7965              		.loc 1 3258 1
 7966 0068 1846     		mov	r0, r3
 7967 006a 1437     		adds	r7, r7, #20
 7968              	.LCFI270:
 7969              		.cfi_def_cfa_offset 4
 7970 006c BD46     		mov	sp, r7
 7971              	.LCFI271:
 7972              		.cfi_def_cfa_register 13
 7973              		@ sp needed
 7974 006e 5DF8047B 		ldr	r7, [sp], #4
 7975              	.LCFI272:
 7976              		.cfi_restore 7
 7977              		.cfi_def_cfa_offset 0
 7978 0072 7047     		bx	lr
 7979              		.cfi_endproc
 7980              	.LFE183:
 7982              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 7983              		.align	1
 7984              		.global	UART_Start_Receive_DMA
 7985              		.syntax unified
 7986              		.thumb
 7987              		.thumb_func
 7989              	UART_Start_Receive_DMA:
 7990              	.LFB184:
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 209


3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7991              		.loc 1 3272 1
 7992              		.cfi_startproc
 7993              		@ args = 0, pretend = 0, frame = 96
 7994              		@ frame_needed = 1, uses_anonymous_args = 0
 7995 0000 80B5     		push	{r7, lr}
 7996              	.LCFI273:
 7997              		.cfi_def_cfa_offset 8
 7998              		.cfi_offset 7, -8
 7999              		.cfi_offset 14, -4
 8000 0002 98B0     		sub	sp, sp, #96
 8001              	.LCFI274:
 8002              		.cfi_def_cfa_offset 104
 8003 0004 00AF     		add	r7, sp, #0
 8004              	.LCFI275:
 8005              		.cfi_def_cfa_register 7
 8006 0006 F860     		str	r0, [r7, #12]
 8007 0008 B960     		str	r1, [r7, #8]
 8008 000a 1346     		mov	r3, r2
 8009 000c FB80     		strh	r3, [r7, #6]	@ movhi
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8010              		.loc 1 3275 21
 8011 000e BA68     		ldr	r2, [r7, #8]
 8012 0010 FB68     		ldr	r3, [r7, #12]
 8013 0012 9A62     		str	r2, [r3, #40]
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8014              		.loc 1 3276 21
 8015 0014 FB68     		ldr	r3, [r7, #12]
 8016 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8017 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8018              		.loc 1 3278 20
 8019 001a FB68     		ldr	r3, [r7, #12]
 8020 001c 0022     		movs	r2, #0
 8021 001e 5A64     		str	r2, [r3, #68]
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8022              		.loc 1 3279 18
 8023 0020 FB68     		ldr	r3, [r7, #12]
 8024 0022 2222     		movs	r2, #34
 8025 0024 83F84220 		strb	r2, [r3, #66]
3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8026              		.loc 1 3282 8
 8027 0028 FB68     		ldr	r3, [r7, #12]
 8028 002a DB6B     		ldr	r3, [r3, #60]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 210


 8029              		.loc 1 3282 35
 8030 002c 3E4A     		ldr	r2, .L415
 8031 002e DA63     		str	r2, [r3, #60]
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8032              		.loc 1 3285 8
 8033 0030 FB68     		ldr	r3, [r7, #12]
 8034 0032 DB6B     		ldr	r3, [r3, #60]
 8035              		.loc 1 3285 39
 8036 0034 3D4A     		ldr	r2, .L415+4
 8037 0036 1A64     		str	r2, [r3, #64]
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 8038              		.loc 1 3288 8
 8039 0038 FB68     		ldr	r3, [r7, #12]
 8040 003a DB6B     		ldr	r3, [r3, #60]
 8041              		.loc 1 3288 36
 8042 003c 3C4A     		ldr	r2, .L415+8
 8043 003e DA64     		str	r2, [r3, #76]
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8044              		.loc 1 3291 8
 8045 0040 FB68     		ldr	r3, [r7, #12]
 8046 0042 DB6B     		ldr	r3, [r3, #60]
 8047              		.loc 1 3291 36
 8048 0044 0022     		movs	r2, #0
 8049 0046 1A65     		str	r2, [r3, #80]
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 8050              		.loc 1 3294 7
 8051 0048 07F10803 		add	r3, r7, #8
 8052 004c FB65     		str	r3, [r7, #92]
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 8053              		.loc 1 3295 3
 8054 004e FB68     		ldr	r3, [r7, #12]
 8055 0050 D86B     		ldr	r0, [r3, #60]
 8056              		.loc 1 3295 51
 8057 0052 FB68     		ldr	r3, [r7, #12]
 8058 0054 1B68     		ldr	r3, [r3]
 8059              		.loc 1 3295 45
 8060 0056 0433     		adds	r3, r3, #4
 8061              		.loc 1 3295 3
 8062 0058 1946     		mov	r1, r3
 8063 005a FB6D     		ldr	r3, [r7, #92]
 8064 005c 1A68     		ldr	r2, [r3]
 8065 005e FB88     		ldrh	r3, [r7, #6]
 8066 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8067              	.LBB580:
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 8068              		.loc 1 3298 3
 8069 0064 0023     		movs	r3, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 211


 8070 0066 3B61     		str	r3, [r7, #16]
 8071 0068 FB68     		ldr	r3, [r7, #12]
 8072 006a 1B68     		ldr	r3, [r3]
 8073 006c 1B68     		ldr	r3, [r3]
 8074 006e 3B61     		str	r3, [r7, #16]
 8075 0070 FB68     		ldr	r3, [r7, #12]
 8076 0072 1B68     		ldr	r3, [r3]
 8077 0074 5B68     		ldr	r3, [r3, #4]
 8078 0076 3B61     		str	r3, [r7, #16]
 8079 0078 3B69     		ldr	r3, [r7, #16]
 8080              	.LBE580:
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8081              		.loc 1 3300 18
 8082 007a FB68     		ldr	r3, [r7, #12]
 8083 007c 1B69     		ldr	r3, [r3, #16]
 8084              		.loc 1 3300 6
 8085 007e 002B     		cmp	r3, #0
 8086 0080 19D0     		beq	.L410
 8087              	.L407:
 8088              	.LBB581:
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8089              		.loc 1 3303 5 discriminator 1
 8090 0082 FB68     		ldr	r3, [r7, #12]
 8091 0084 1B68     		ldr	r3, [r3]
 8092 0086 0C33     		adds	r3, r3, #12
 8093 0088 3B64     		str	r3, [r7, #64]
 8094              	.LBB582:
 8095              	.LBB583:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8096              		.loc 2 480 4
 8097 008a 3B6C     		ldr	r3, [r7, #64]
 8098              		.syntax unified
 8099              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8100 008c 53E8003F 		ldrex r3, [r3]
 8101              	@ 0 "" 2
 8102              		.thumb
 8103              		.syntax unified
 8104 0090 FB63     		str	r3, [r7, #60]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8105              		.loc 2 481 10
 8106 0092 FB6B     		ldr	r3, [r7, #60]
 8107              	.LBE583:
 8108              	.LBE582:
 8109              		.loc 1 3303 5 discriminator 1
 8110 0094 43F48073 		orr	r3, r3, #256
 8111 0098 BB65     		str	r3, [r7, #88]
 8112 009a FB68     		ldr	r3, [r7, #12]
 8113 009c 1B68     		ldr	r3, [r3]
 8114 009e 0C33     		adds	r3, r3, #12
 8115 00a0 BA6D     		ldr	r2, [r7, #88]
 8116 00a2 FA64     		str	r2, [r7, #76]
 8117 00a4 BB64     		str	r3, [r7, #72]
 8118              	.LBB584:
 8119              	.LBB585:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 212


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8120              		.loc 2 531 4
 8121 00a6 B96C     		ldr	r1, [r7, #72]
 8122 00a8 FA6C     		ldr	r2, [r7, #76]
 8123              		.syntax unified
 8124              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8125 00aa 41E80023 		strex r3, r2, [r1]
 8126              	@ 0 "" 2
 8127              		.thumb
 8128              		.syntax unified
 8129 00ae 7B64     		str	r3, [r7, #68]
 8130              		.loc 2 532 10
 8131 00b0 7B6C     		ldr	r3, [r7, #68]
 8132              	.LBE585:
 8133              	.LBE584:
 8134              		.loc 1 3303 5 discriminator 1
 8135 00b2 002B     		cmp	r3, #0
 8136 00b4 E5D1     		bne	.L407
 8137              	.L410:
 8138              	.LBE581:
 8139              	.LBB586:
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8140              		.loc 1 3307 3 discriminator 1
 8141 00b6 FB68     		ldr	r3, [r7, #12]
 8142 00b8 1B68     		ldr	r3, [r3]
 8143 00ba 1433     		adds	r3, r3, #20
 8144 00bc FB62     		str	r3, [r7, #44]
 8145              	.LBB587:
 8146              	.LBB588:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8147              		.loc 2 480 4
 8148 00be FB6A     		ldr	r3, [r7, #44]
 8149              		.syntax unified
 8150              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8151 00c0 53E8003F 		ldrex r3, [r3]
 8152              	@ 0 "" 2
 8153              		.thumb
 8154              		.syntax unified
 8155 00c4 BB62     		str	r3, [r7, #40]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8156              		.loc 2 481 10
 8157 00c6 BB6A     		ldr	r3, [r7, #40]
 8158              	.LBE588:
 8159              	.LBE587:
 8160              		.loc 1 3307 3 discriminator 1
 8161 00c8 43F00103 		orr	r3, r3, #1
 8162 00cc 7B65     		str	r3, [r7, #84]
 8163 00ce FB68     		ldr	r3, [r7, #12]
 8164 00d0 1B68     		ldr	r3, [r3]
 8165 00d2 1433     		adds	r3, r3, #20
 8166 00d4 7A6D     		ldr	r2, [r7, #84]
 8167 00d6 BA63     		str	r2, [r7, #56]
 8168 00d8 7B63     		str	r3, [r7, #52]
 8169              	.LBB589:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 213


 8170              	.LBB590:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8171              		.loc 2 531 4
 8172 00da 796B     		ldr	r1, [r7, #52]
 8173 00dc BA6B     		ldr	r2, [r7, #56]
 8174              		.syntax unified
 8175              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8176 00de 41E80023 		strex r3, r2, [r1]
 8177              	@ 0 "" 2
 8178              		.thumb
 8179              		.syntax unified
 8180 00e2 3B63     		str	r3, [r7, #48]
 8181              		.loc 2 532 10
 8182 00e4 3B6B     		ldr	r3, [r7, #48]
 8183              	.LBE590:
 8184              	.LBE589:
 8185              		.loc 1 3307 3 discriminator 1
 8186 00e6 002B     		cmp	r3, #0
 8187 00e8 E5D1     		bne	.L410
 8188              	.L413:
 8189              	.LBE586:
 8190              	.LBB591:
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8191              		.loc 1 3311 3 discriminator 1
 8192 00ea FB68     		ldr	r3, [r7, #12]
 8193 00ec 1B68     		ldr	r3, [r3]
 8194 00ee 1433     		adds	r3, r3, #20
 8195 00f0 BB61     		str	r3, [r7, #24]
 8196              	.LBB592:
 8197              	.LBB593:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8198              		.loc 2 480 4
 8199 00f2 BB69     		ldr	r3, [r7, #24]
 8200              		.syntax unified
 8201              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8202 00f4 53E8003F 		ldrex r3, [r3]
 8203              	@ 0 "" 2
 8204              		.thumb
 8205              		.syntax unified
 8206 00f8 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8207              		.loc 2 481 10
 8208 00fa 7B69     		ldr	r3, [r7, #20]
 8209              	.LBE593:
 8210              	.LBE592:
 8211              		.loc 1 3311 3 discriminator 1
 8212 00fc 43F04003 		orr	r3, r3, #64
 8213 0100 3B65     		str	r3, [r7, #80]
 8214 0102 FB68     		ldr	r3, [r7, #12]
 8215 0104 1B68     		ldr	r3, [r3]
 8216 0106 1433     		adds	r3, r3, #20
 8217 0108 3A6D     		ldr	r2, [r7, #80]
 8218 010a 7A62     		str	r2, [r7, #36]
 8219 010c 3B62     		str	r3, [r7, #32]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 214


 8220              	.LBB594:
 8221              	.LBB595:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8222              		.loc 2 531 4
 8223 010e 396A     		ldr	r1, [r7, #32]
 8224 0110 7A6A     		ldr	r2, [r7, #36]
 8225              		.syntax unified
 8226              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8227 0112 41E80023 		strex r3, r2, [r1]
 8228              	@ 0 "" 2
 8229              		.thumb
 8230              		.syntax unified
 8231 0116 FB61     		str	r3, [r7, #28]
 8232              		.loc 2 532 10
 8233 0118 FB69     		ldr	r3, [r7, #28]
 8234              	.LBE595:
 8235              	.LBE594:
 8236              		.loc 1 3311 3 discriminator 1
 8237 011a 002B     		cmp	r3, #0
 8238 011c E5D1     		bne	.L413
 8239              	.LBE591:
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8240              		.loc 1 3313 10
 8241 011e 0023     		movs	r3, #0
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8242              		.loc 1 3314 1
 8243 0120 1846     		mov	r0, r3
 8244 0122 6037     		adds	r7, r7, #96
 8245              	.LCFI276:
 8246              		.cfi_def_cfa_offset 8
 8247 0124 BD46     		mov	sp, r7
 8248              	.LCFI277:
 8249              		.cfi_def_cfa_register 13
 8250              		@ sp needed
 8251 0126 80BD     		pop	{r7, pc}
 8252              	.L416:
 8253              		.align	2
 8254              	.L415:
 8255 0128 00000000 		.word	UART_DMAReceiveCplt
 8256 012c 00000000 		.word	UART_DMARxHalfCplt
 8257 0130 00000000 		.word	UART_DMAError
 8258              		.cfi_endproc
 8259              	.LFE184:
 8261              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8262              		.align	1
 8263              		.syntax unified
 8264              		.thumb
 8265              		.thumb_func
 8267              	UART_EndTxTransfer:
 8268              	.LFB185:
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 215


3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8269              		.loc 1 3322 1
 8270              		.cfi_startproc
 8271              		@ args = 0, pretend = 0, frame = 32
 8272              		@ frame_needed = 1, uses_anonymous_args = 0
 8273              		@ link register save eliminated.
 8274 0000 80B4     		push	{r7}
 8275              	.LCFI278:
 8276              		.cfi_def_cfa_offset 4
 8277              		.cfi_offset 7, -4
 8278 0002 89B0     		sub	sp, sp, #36
 8279              	.LCFI279:
 8280              		.cfi_def_cfa_offset 40
 8281 0004 00AF     		add	r7, sp, #0
 8282              	.LCFI280:
 8283              		.cfi_def_cfa_register 7
 8284 0006 7860     		str	r0, [r7, #4]
 8285              	.L420:
 8286              	.LBB596:
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8287              		.loc 1 3324 3 discriminator 1
 8288 0008 7B68     		ldr	r3, [r7, #4]
 8289 000a 1B68     		ldr	r3, [r3]
 8290 000c 0C33     		adds	r3, r3, #12
 8291 000e FB60     		str	r3, [r7, #12]
 8292              	.LBB597:
 8293              	.LBB598:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8294              		.loc 2 480 4
 8295 0010 FB68     		ldr	r3, [r7, #12]
 8296              		.syntax unified
 8297              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8298 0012 53E8003F 		ldrex r3, [r3]
 8299              	@ 0 "" 2
 8300              		.thumb
 8301              		.syntax unified
 8302 0016 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8303              		.loc 2 481 10
 8304 0018 BB68     		ldr	r3, [r7, #8]
 8305              	.LBE598:
 8306              	.LBE597:
 8307              		.loc 1 3324 3 discriminator 1
 8308 001a 23F0C003 		bic	r3, r3, #192
 8309 001e FB61     		str	r3, [r7, #28]
 8310 0020 7B68     		ldr	r3, [r7, #4]
 8311 0022 1B68     		ldr	r3, [r3]
 8312 0024 0C33     		adds	r3, r3, #12
 8313 0026 FA69     		ldr	r2, [r7, #28]
 8314 0028 BA61     		str	r2, [r7, #24]
 8315 002a 7B61     		str	r3, [r7, #20]
 8316              	.LBB599:
 8317              	.LBB600:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8318              		.loc 2 531 4
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 216


 8319 002c 7969     		ldr	r1, [r7, #20]
 8320 002e BA69     		ldr	r2, [r7, #24]
 8321              		.syntax unified
 8322              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8323 0030 41E80023 		strex r3, r2, [r1]
 8324              	@ 0 "" 2
 8325              		.thumb
 8326              		.syntax unified
 8327 0034 3B61     		str	r3, [r7, #16]
 8328              		.loc 2 532 10
 8329 0036 3B69     		ldr	r3, [r7, #16]
 8330              	.LBE600:
 8331              	.LBE599:
 8332              		.loc 1 3324 3 discriminator 1
 8333 0038 002B     		cmp	r3, #0
 8334 003a E5D1     		bne	.L420
 8335              	.LBE596:
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8336              		.loc 1 3327 17
 8337 003c 7B68     		ldr	r3, [r7, #4]
 8338 003e 2022     		movs	r2, #32
 8339 0040 83F84120 		strb	r2, [r3, #65]
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8340              		.loc 1 3328 1
 8341 0044 00BF     		nop
 8342 0046 2437     		adds	r7, r7, #36
 8343              	.LCFI281:
 8344              		.cfi_def_cfa_offset 4
 8345 0048 BD46     		mov	sp, r7
 8346              	.LCFI282:
 8347              		.cfi_def_cfa_register 13
 8348              		@ sp needed
 8349 004a 5DF8047B 		ldr	r7, [sp], #4
 8350              	.LCFI283:
 8351              		.cfi_restore 7
 8352              		.cfi_def_cfa_offset 0
 8353 004e 7047     		bx	lr
 8354              		.cfi_endproc
 8355              	.LFE185:
 8357              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8358              		.align	1
 8359              		.syntax unified
 8360              		.thumb
 8361              		.thumb_func
 8363              	UART_EndRxTransfer:
 8364              	.LFB186:
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8365              		.loc 1 3336 1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 217


 8366              		.cfi_startproc
 8367              		@ args = 0, pretend = 0, frame = 80
 8368              		@ frame_needed = 1, uses_anonymous_args = 0
 8369              		@ link register save eliminated.
 8370 0000 80B4     		push	{r7}
 8371              	.LCFI284:
 8372              		.cfi_def_cfa_offset 4
 8373              		.cfi_offset 7, -4
 8374 0002 95B0     		sub	sp, sp, #84
 8375              	.LCFI285:
 8376              		.cfi_def_cfa_offset 88
 8377 0004 00AF     		add	r7, sp, #0
 8378              	.LCFI286:
 8379              		.cfi_def_cfa_register 7
 8380 0006 7860     		str	r0, [r7, #4]
 8381              	.L424:
 8382              	.LBB601:
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8383              		.loc 1 3338 3 discriminator 1
 8384 0008 7B68     		ldr	r3, [r7, #4]
 8385 000a 1B68     		ldr	r3, [r3]
 8386 000c 0C33     		adds	r3, r3, #12
 8387 000e 7B63     		str	r3, [r7, #52]
 8388              	.LBB602:
 8389              	.LBB603:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8390              		.loc 2 480 4
 8391 0010 7B6B     		ldr	r3, [r7, #52]
 8392              		.syntax unified
 8393              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8394 0012 53E8003F 		ldrex r3, [r3]
 8395              	@ 0 "" 2
 8396              		.thumb
 8397              		.syntax unified
 8398 0016 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8399              		.loc 2 481 10
 8400 0018 3B6B     		ldr	r3, [r7, #48]
 8401              	.LBE603:
 8402              	.LBE602:
 8403              		.loc 1 3338 3 discriminator 1
 8404 001a 23F49073 		bic	r3, r3, #288
 8405 001e FB64     		str	r3, [r7, #76]
 8406 0020 7B68     		ldr	r3, [r7, #4]
 8407 0022 1B68     		ldr	r3, [r3]
 8408 0024 0C33     		adds	r3, r3, #12
 8409 0026 FA6C     		ldr	r2, [r7, #76]
 8410 0028 3A64     		str	r2, [r7, #64]
 8411 002a FB63     		str	r3, [r7, #60]
 8412              	.LBB604:
 8413              	.LBB605:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8414              		.loc 2 531 4
 8415 002c F96B     		ldr	r1, [r7, #60]
 8416 002e 3A6C     		ldr	r2, [r7, #64]
 8417              		.syntax unified
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 218


 8418              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8419 0030 41E80023 		strex r3, r2, [r1]
 8420              	@ 0 "" 2
 8421              		.thumb
 8422              		.syntax unified
 8423 0034 BB63     		str	r3, [r7, #56]
 8424              		.loc 2 532 10
 8425 0036 BB6B     		ldr	r3, [r7, #56]
 8426              	.LBE605:
 8427              	.LBE604:
 8428              		.loc 1 3338 3 discriminator 1
 8429 0038 002B     		cmp	r3, #0
 8430 003a E5D1     		bne	.L424
 8431              	.L427:
 8432              	.LBE601:
 8433              	.LBB606:
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8434              		.loc 1 3339 3 discriminator 1
 8435 003c 7B68     		ldr	r3, [r7, #4]
 8436 003e 1B68     		ldr	r3, [r3]
 8437 0040 1433     		adds	r3, r3, #20
 8438 0042 3B62     		str	r3, [r7, #32]
 8439              	.LBB607:
 8440              	.LBB608:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8441              		.loc 2 480 4
 8442 0044 3B6A     		ldr	r3, [r7, #32]
 8443              		.syntax unified
 8444              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8445 0046 53E8003F 		ldrex r3, [r3]
 8446              	@ 0 "" 2
 8447              		.thumb
 8448              		.syntax unified
 8449 004a FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8450              		.loc 2 481 10
 8451 004c FB69     		ldr	r3, [r7, #28]
 8452              	.LBE608:
 8453              	.LBE607:
 8454              		.loc 1 3339 3 discriminator 1
 8455 004e 23F00103 		bic	r3, r3, #1
 8456 0052 BB64     		str	r3, [r7, #72]
 8457 0054 7B68     		ldr	r3, [r7, #4]
 8458 0056 1B68     		ldr	r3, [r3]
 8459 0058 1433     		adds	r3, r3, #20
 8460 005a BA6C     		ldr	r2, [r7, #72]
 8461 005c FA62     		str	r2, [r7, #44]
 8462 005e BB62     		str	r3, [r7, #40]
 8463              	.LBB609:
 8464              	.LBB610:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8465              		.loc 2 531 4
 8466 0060 B96A     		ldr	r1, [r7, #40]
 8467 0062 FA6A     		ldr	r2, [r7, #44]
 8468              		.syntax unified
 8469              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8470 0064 41E80023 		strex r3, r2, [r1]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 219


 8471              	@ 0 "" 2
 8472              		.thumb
 8473              		.syntax unified
 8474 0068 7B62     		str	r3, [r7, #36]
 8475              		.loc 2 532 10
 8476 006a 7B6A     		ldr	r3, [r7, #36]
 8477              	.LBE610:
 8478              	.LBE609:
 8479              		.loc 1 3339 3 discriminator 1
 8480 006c 002B     		cmp	r3, #0
 8481 006e E5D1     		bne	.L427
 8482              	.LBE606:
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8483              		.loc 1 3342 12
 8484 0070 7B68     		ldr	r3, [r7, #4]
 8485 0072 1B6B     		ldr	r3, [r3, #48]
 8486              		.loc 1 3342 6
 8487 0074 012B     		cmp	r3, #1
 8488 0076 19D1     		bne	.L428
 8489              	.L431:
 8490              	.LBB611:
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8491              		.loc 1 3344 5 discriminator 1
 8492 0078 7B68     		ldr	r3, [r7, #4]
 8493 007a 1B68     		ldr	r3, [r3]
 8494 007c 0C33     		adds	r3, r3, #12
 8495 007e FB60     		str	r3, [r7, #12]
 8496              	.LBB612:
 8497              	.LBB613:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8498              		.loc 2 480 4
 8499 0080 FB68     		ldr	r3, [r7, #12]
 8500              		.syntax unified
 8501              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8502 0082 53E8003F 		ldrex r3, [r3]
 8503              	@ 0 "" 2
 8504              		.thumb
 8505              		.syntax unified
 8506 0086 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8507              		.loc 2 481 10
 8508 0088 BB68     		ldr	r3, [r7, #8]
 8509              	.LBE613:
 8510              	.LBE612:
 8511              		.loc 1 3344 5 discriminator 1
 8512 008a 23F01003 		bic	r3, r3, #16
 8513 008e 7B64     		str	r3, [r7, #68]
 8514 0090 7B68     		ldr	r3, [r7, #4]
 8515 0092 1B68     		ldr	r3, [r3]
 8516 0094 0C33     		adds	r3, r3, #12
 8517 0096 7A6C     		ldr	r2, [r7, #68]
 8518 0098 BA61     		str	r2, [r7, #24]
 8519 009a 7B61     		str	r3, [r7, #20]
 8520              	.LBB614:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 220


 8521              	.LBB615:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8522              		.loc 2 531 4
 8523 009c 7969     		ldr	r1, [r7, #20]
 8524 009e BA69     		ldr	r2, [r7, #24]
 8525              		.syntax unified
 8526              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8527 00a0 41E80023 		strex r3, r2, [r1]
 8528              	@ 0 "" 2
 8529              		.thumb
 8530              		.syntax unified
 8531 00a4 3B61     		str	r3, [r7, #16]
 8532              		.loc 2 532 10
 8533 00a6 3B69     		ldr	r3, [r7, #16]
 8534              	.LBE615:
 8535              	.LBE614:
 8536              		.loc 1 3344 5 discriminator 1
 8537 00a8 002B     		cmp	r3, #0
 8538 00aa E5D1     		bne	.L431
 8539              	.L428:
 8540              	.LBE611:
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8541              		.loc 1 3348 18
 8542 00ac 7B68     		ldr	r3, [r7, #4]
 8543 00ae 2022     		movs	r2, #32
 8544 00b0 83F84220 		strb	r2, [r3, #66]
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8545              		.loc 1 3349 24
 8546 00b4 7B68     		ldr	r3, [r7, #4]
 8547 00b6 0022     		movs	r2, #0
 8548 00b8 1A63     		str	r2, [r3, #48]
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8549              		.loc 1 3350 1
 8550 00ba 00BF     		nop
 8551 00bc 5437     		adds	r7, r7, #84
 8552              	.LCFI287:
 8553              		.cfi_def_cfa_offset 4
 8554 00be BD46     		mov	sp, r7
 8555              	.LCFI288:
 8556              		.cfi_def_cfa_register 13
 8557              		@ sp needed
 8558 00c0 5DF8047B 		ldr	r7, [sp], #4
 8559              	.LCFI289:
 8560              		.cfi_restore 7
 8561              		.cfi_def_cfa_offset 0
 8562 00c4 7047     		bx	lr
 8563              		.cfi_endproc
 8564              	.LFE186:
 8566              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8567              		.align	1
 8568              		.syntax unified
 8569              		.thumb
 8570              		.thumb_func
 8572              	UART_DMAAbortOnError:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 221


 8573              	.LFB187:
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8574              		.loc 1 3360 1
 8575              		.cfi_startproc
 8576              		@ args = 0, pretend = 0, frame = 16
 8577              		@ frame_needed = 1, uses_anonymous_args = 0
 8578 0000 80B5     		push	{r7, lr}
 8579              	.LCFI290:
 8580              		.cfi_def_cfa_offset 8
 8581              		.cfi_offset 7, -8
 8582              		.cfi_offset 14, -4
 8583 0002 84B0     		sub	sp, sp, #16
 8584              	.LCFI291:
 8585              		.cfi_def_cfa_offset 24
 8586 0004 00AF     		add	r7, sp, #0
 8587              	.LCFI292:
 8588              		.cfi_def_cfa_register 7
 8589 0006 7860     		str	r0, [r7, #4]
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8590              		.loc 1 3361 23
 8591 0008 7B68     		ldr	r3, [r7, #4]
 8592 000a 9B6B     		ldr	r3, [r3, #56]
 8593 000c FB60     		str	r3, [r7, #12]
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8594              		.loc 1 3362 22
 8595 000e FB68     		ldr	r3, [r7, #12]
 8596 0010 0022     		movs	r2, #0
 8597 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8598              		.loc 1 3363 22
 8599 0014 FB68     		ldr	r3, [r7, #12]
 8600 0016 0022     		movs	r2, #0
 8601 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8602              		.loc 1 3370 3
 8603 001a F868     		ldr	r0, [r7, #12]
 8604 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8605              		.loc 1 3372 1
 8606 0020 00BF     		nop
 8607 0022 1037     		adds	r7, r7, #16
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 222


 8608              	.LCFI293:
 8609              		.cfi_def_cfa_offset 8
 8610 0024 BD46     		mov	sp, r7
 8611              	.LCFI294:
 8612              		.cfi_def_cfa_register 13
 8613              		@ sp needed
 8614 0026 80BD     		pop	{r7, pc}
 8615              		.cfi_endproc
 8616              	.LFE187:
 8618              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8619              		.align	1
 8620              		.syntax unified
 8621              		.thumb
 8622              		.thumb_func
 8624              	UART_DMATxAbortCallback:
 8625              	.LFB188:
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8626              		.loc 1 3384 1
 8627              		.cfi_startproc
 8628              		@ args = 0, pretend = 0, frame = 16
 8629              		@ frame_needed = 1, uses_anonymous_args = 0
 8630 0000 80B5     		push	{r7, lr}
 8631              	.LCFI295:
 8632              		.cfi_def_cfa_offset 8
 8633              		.cfi_offset 7, -8
 8634              		.cfi_offset 14, -4
 8635 0002 84B0     		sub	sp, sp, #16
 8636              	.LCFI296:
 8637              		.cfi_def_cfa_offset 24
 8638 0004 00AF     		add	r7, sp, #0
 8639              	.LCFI297:
 8640              		.cfi_def_cfa_register 7
 8641 0006 7860     		str	r0, [r7, #4]
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8642              		.loc 1 3385 23
 8643 0008 7B68     		ldr	r3, [r7, #4]
 8644 000a 9B6B     		ldr	r3, [r3, #56]
 8645 000c FB60     		str	r3, [r7, #12]
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8646              		.loc 1 3387 8
 8647 000e FB68     		ldr	r3, [r7, #12]
 8648 0010 9B6B     		ldr	r3, [r3, #56]
 8649              		.loc 1 3387 36
 8650 0012 0022     		movs	r2, #0
 8651 0014 1A65     		str	r2, [r3, #80]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 223


3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8652              		.loc 1 3390 12
 8653 0016 FB68     		ldr	r3, [r7, #12]
 8654 0018 DB6B     		ldr	r3, [r3, #60]
 8655              		.loc 1 3390 6
 8656 001a 002B     		cmp	r3, #0
 8657 001c 04D0     		beq	.L434
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8658              		.loc 1 3392 14
 8659 001e FB68     		ldr	r3, [r7, #12]
 8660 0020 DB6B     		ldr	r3, [r3, #60]
 8661              		.loc 1 3392 22
 8662 0022 1B6D     		ldr	r3, [r3, #80]
 8663              		.loc 1 3392 8
 8664 0024 002B     		cmp	r3, #0
 8665 0026 17D1     		bne	.L436
 8666              	.L434:
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8667              		.loc 1 3399 22
 8668 0028 FB68     		ldr	r3, [r7, #12]
 8669 002a 0022     		movs	r2, #0
 8670 002c DA84     		strh	r2, [r3, #38]	@ movhi
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8671              		.loc 1 3400 22
 8672 002e FB68     		ldr	r3, [r7, #12]
 8673 0030 0022     		movs	r2, #0
 8674 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8675              		.loc 1 3403 20
 8676 0034 FB68     		ldr	r3, [r7, #12]
 8677 0036 0022     		movs	r2, #0
 8678 0038 5A64     		str	r2, [r3, #68]
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8679              		.loc 1 3406 18
 8680 003a FB68     		ldr	r3, [r7, #12]
 8681 003c 2022     		movs	r2, #32
 8682 003e 83F84120 		strb	r2, [r3, #65]
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8683              		.loc 1 3407 18
 8684 0042 FB68     		ldr	r3, [r7, #12]
 8685 0044 2022     		movs	r2, #32
 8686 0046 83F84220 		strb	r2, [r3, #66]
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8687              		.loc 1 3408 24
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 224


 8688 004a FB68     		ldr	r3, [r7, #12]
 8689 004c 0022     		movs	r2, #0
 8690 004e 1A63     		str	r2, [r3, #48]
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8691              		.loc 1 3416 3
 8692 0050 F868     		ldr	r0, [r7, #12]
 8693 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8694 0056 00E0     		b	.L433
 8695              	.L436:
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8696              		.loc 1 3394 7
 8697 0058 00BF     		nop
 8698              	.L433:
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8699              		.loc 1 3418 1
 8700 005a 1037     		adds	r7, r7, #16
 8701              	.LCFI298:
 8702              		.cfi_def_cfa_offset 8
 8703 005c BD46     		mov	sp, r7
 8704              	.LCFI299:
 8705              		.cfi_def_cfa_register 13
 8706              		@ sp needed
 8707 005e 80BD     		pop	{r7, pc}
 8708              		.cfi_endproc
 8709              	.LFE188:
 8711              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8712              		.align	1
 8713              		.syntax unified
 8714              		.thumb
 8715              		.thumb_func
 8717              	UART_DMARxAbortCallback:
 8718              	.LFB189:
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8719              		.loc 1 3430 1
 8720              		.cfi_startproc
 8721              		@ args = 0, pretend = 0, frame = 16
 8722              		@ frame_needed = 1, uses_anonymous_args = 0
 8723 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 225


 8724              	.LCFI300:
 8725              		.cfi_def_cfa_offset 8
 8726              		.cfi_offset 7, -8
 8727              		.cfi_offset 14, -4
 8728 0002 84B0     		sub	sp, sp, #16
 8729              	.LCFI301:
 8730              		.cfi_def_cfa_offset 24
 8731 0004 00AF     		add	r7, sp, #0
 8732              	.LCFI302:
 8733              		.cfi_def_cfa_register 7
 8734 0006 7860     		str	r0, [r7, #4]
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8735              		.loc 1 3431 23
 8736 0008 7B68     		ldr	r3, [r7, #4]
 8737 000a 9B6B     		ldr	r3, [r3, #56]
 8738 000c FB60     		str	r3, [r7, #12]
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8739              		.loc 1 3433 8
 8740 000e FB68     		ldr	r3, [r7, #12]
 8741 0010 DB6B     		ldr	r3, [r3, #60]
 8742              		.loc 1 3433 36
 8743 0012 0022     		movs	r2, #0
 8744 0014 1A65     		str	r2, [r3, #80]
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8745              		.loc 1 3436 12
 8746 0016 FB68     		ldr	r3, [r7, #12]
 8747 0018 9B6B     		ldr	r3, [r3, #56]
 8748              		.loc 1 3436 6
 8749 001a 002B     		cmp	r3, #0
 8750 001c 04D0     		beq	.L438
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8751              		.loc 1 3438 14
 8752 001e FB68     		ldr	r3, [r7, #12]
 8753 0020 9B6B     		ldr	r3, [r3, #56]
 8754              		.loc 1 3438 22
 8755 0022 1B6D     		ldr	r3, [r3, #80]
 8756              		.loc 1 3438 8
 8757 0024 002B     		cmp	r3, #0
 8758 0026 17D1     		bne	.L440
 8759              	.L438:
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8760              		.loc 1 3445 22
 8761 0028 FB68     		ldr	r3, [r7, #12]
 8762 002a 0022     		movs	r2, #0
 8763 002c DA84     		strh	r2, [r3, #38]	@ movhi
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8764              		.loc 1 3446 22
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 226


 8765 002e FB68     		ldr	r3, [r7, #12]
 8766 0030 0022     		movs	r2, #0
 8767 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8768              		.loc 1 3449 20
 8769 0034 FB68     		ldr	r3, [r7, #12]
 8770 0036 0022     		movs	r2, #0
 8771 0038 5A64     		str	r2, [r3, #68]
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8772              		.loc 1 3452 18
 8773 003a FB68     		ldr	r3, [r7, #12]
 8774 003c 2022     		movs	r2, #32
 8775 003e 83F84120 		strb	r2, [r3, #65]
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8776              		.loc 1 3453 18
 8777 0042 FB68     		ldr	r3, [r7, #12]
 8778 0044 2022     		movs	r2, #32
 8779 0046 83F84220 		strb	r2, [r3, #66]
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8780              		.loc 1 3454 24
 8781 004a FB68     		ldr	r3, [r7, #12]
 8782 004c 0022     		movs	r2, #0
 8783 004e 1A63     		str	r2, [r3, #48]
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8784              		.loc 1 3462 3
 8785 0050 F868     		ldr	r0, [r7, #12]
 8786 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8787 0056 00E0     		b	.L437
 8788              	.L440:
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8789              		.loc 1 3440 7
 8790 0058 00BF     		nop
 8791              	.L437:
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8792              		.loc 1 3464 1
 8793 005a 1037     		adds	r7, r7, #16
 8794              	.LCFI303:
 8795              		.cfi_def_cfa_offset 8
 8796 005c BD46     		mov	sp, r7
 8797              	.LCFI304:
 8798              		.cfi_def_cfa_register 13
 8799              		@ sp needed
 8800 005e 80BD     		pop	{r7, pc}
 8801              		.cfi_endproc
 8802              	.LFE189:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 227


 8804              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8805              		.align	1
 8806              		.syntax unified
 8807              		.thumb
 8808              		.thumb_func
 8810              	UART_DMATxOnlyAbortCallback:
 8811              	.LFB190:
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8812              		.loc 1 3476 1
 8813              		.cfi_startproc
 8814              		@ args = 0, pretend = 0, frame = 16
 8815              		@ frame_needed = 1, uses_anonymous_args = 0
 8816 0000 80B5     		push	{r7, lr}
 8817              	.LCFI305:
 8818              		.cfi_def_cfa_offset 8
 8819              		.cfi_offset 7, -8
 8820              		.cfi_offset 14, -4
 8821 0002 84B0     		sub	sp, sp, #16
 8822              	.LCFI306:
 8823              		.cfi_def_cfa_offset 24
 8824 0004 00AF     		add	r7, sp, #0
 8825              	.LCFI307:
 8826              		.cfi_def_cfa_register 7
 8827 0006 7860     		str	r0, [r7, #4]
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8828              		.loc 1 3477 23
 8829 0008 7B68     		ldr	r3, [r7, #4]
 8830 000a 9B6B     		ldr	r3, [r3, #56]
 8831 000c FB60     		str	r3, [r7, #12]
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8832              		.loc 1 3479 22
 8833 000e FB68     		ldr	r3, [r7, #12]
 8834 0010 0022     		movs	r2, #0
 8835 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8836              		.loc 1 3482 17
 8837 0014 FB68     		ldr	r3, [r7, #12]
 8838 0016 2022     		movs	r2, #32
 8839 0018 83F84120 		strb	r2, [r3, #65]
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 228


3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 8840              		.loc 1 3490 3
 8841 001c F868     		ldr	r0, [r7, #12]
 8842 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8843              		.loc 1 3492 1
 8844 0022 00BF     		nop
 8845 0024 1037     		adds	r7, r7, #16
 8846              	.LCFI308:
 8847              		.cfi_def_cfa_offset 8
 8848 0026 BD46     		mov	sp, r7
 8849              	.LCFI309:
 8850              		.cfi_def_cfa_register 13
 8851              		@ sp needed
 8852 0028 80BD     		pop	{r7, pc}
 8853              		.cfi_endproc
 8854              	.LFE190:
 8856              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 8857              		.align	1
 8858              		.syntax unified
 8859              		.thumb
 8860              		.thumb_func
 8862              	UART_DMARxOnlyAbortCallback:
 8863              	.LFB191:
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8864              		.loc 1 3504 1
 8865              		.cfi_startproc
 8866              		@ args = 0, pretend = 0, frame = 16
 8867              		@ frame_needed = 1, uses_anonymous_args = 0
 8868 0000 80B5     		push	{r7, lr}
 8869              	.LCFI310:
 8870              		.cfi_def_cfa_offset 8
 8871              		.cfi_offset 7, -8
 8872              		.cfi_offset 14, -4
 8873 0002 84B0     		sub	sp, sp, #16
 8874              	.LCFI311:
 8875              		.cfi_def_cfa_offset 24
 8876 0004 00AF     		add	r7, sp, #0
 8877              	.LCFI312:
 8878              		.cfi_def_cfa_register 7
 8879 0006 7860     		str	r0, [r7, #4]
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 229


 8880              		.loc 1 3505 23
 8881 0008 7B68     		ldr	r3, [r7, #4]
 8882 000a 9B6B     		ldr	r3, [r3, #56]
 8883 000c FB60     		str	r3, [r7, #12]
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8884              		.loc 1 3507 22
 8885 000e FB68     		ldr	r3, [r7, #12]
 8886 0010 0022     		movs	r2, #0
 8887 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8888              		.loc 1 3510 18
 8889 0014 FB68     		ldr	r3, [r7, #12]
 8890 0016 2022     		movs	r2, #32
 8891 0018 83F84220 		strb	r2, [r3, #66]
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8892              		.loc 1 3511 24
 8893 001c FB68     		ldr	r3, [r7, #12]
 8894 001e 0022     		movs	r2, #0
 8895 0020 1A63     		str	r2, [r3, #48]
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 8896              		.loc 1 3519 3
 8897 0022 F868     		ldr	r0, [r7, #12]
 8898 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8899              		.loc 1 3521 1
 8900 0028 00BF     		nop
 8901 002a 1037     		adds	r7, r7, #16
 8902              	.LCFI313:
 8903              		.cfi_def_cfa_offset 8
 8904 002c BD46     		mov	sp, r7
 8905              	.LCFI314:
 8906              		.cfi_def_cfa_register 13
 8907              		@ sp needed
 8908 002e 80BD     		pop	{r7, pc}
 8909              		.cfi_endproc
 8910              	.LFE191:
 8912              		.section	.text.UART_Transmit_IT,"ax",%progbits
 8913              		.align	1
 8914              		.syntax unified
 8915              		.thumb
 8916              		.thumb_func
 8918              	UART_Transmit_IT:
 8919              	.LFB192:
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 230


3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8920              		.loc 1 3530 1
 8921              		.cfi_startproc
 8922              		@ args = 0, pretend = 0, frame = 16
 8923              		@ frame_needed = 1, uses_anonymous_args = 0
 8924              		@ link register save eliminated.
 8925 0000 80B4     		push	{r7}
 8926              	.LCFI315:
 8927              		.cfi_def_cfa_offset 4
 8928              		.cfi_offset 7, -4
 8929 0002 85B0     		sub	sp, sp, #20
 8930              	.LCFI316:
 8931              		.cfi_def_cfa_offset 24
 8932 0004 00AF     		add	r7, sp, #0
 8933              	.LCFI317:
 8934              		.cfi_def_cfa_register 7
 8935 0006 7860     		str	r0, [r7, #4]
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *tmp;
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8936              		.loc 1 3534 12
 8937 0008 7B68     		ldr	r3, [r7, #4]
 8938 000a 93F84130 		ldrb	r3, [r3, #65]
 8939 000e DBB2     		uxtb	r3, r3
 8940              		.loc 1 3534 6
 8941 0010 212B     		cmp	r3, #33
 8942 0012 3ED1     		bne	.L444
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8943              		.loc 1 3536 21
 8944 0014 7B68     		ldr	r3, [r7, #4]
 8945 0016 9B68     		ldr	r3, [r3, #8]
 8946              		.loc 1 3536 8
 8947 0018 B3F5805F 		cmp	r3, #4096
 8948 001c 14D1     		bne	.L445
 8949              		.loc 1 3536 71 discriminator 1
 8950 001e 7B68     		ldr	r3, [r7, #4]
 8951 0020 1B69     		ldr	r3, [r3, #16]
 8952              		.loc 1 3536 56 discriminator 1
 8953 0022 002B     		cmp	r3, #0
 8954 0024 10D1     		bne	.L445
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 8955              		.loc 1 3538 11
 8956 0026 7B68     		ldr	r3, [r7, #4]
 8957 0028 1B6A     		ldr	r3, [r3, #32]
 8958 002a FB60     		str	r3, [r7, #12]
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8959              		.loc 1 3539 40
 8960 002c FB68     		ldr	r3, [r7, #12]
 8961 002e 1B88     		ldrh	r3, [r3]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 231


 8962              		.loc 1 3539 29
 8963 0030 1A46     		mov	r2, r3
 8964              		.loc 1 3539 12
 8965 0032 7B68     		ldr	r3, [r7, #4]
 8966 0034 1B68     		ldr	r3, [r3]
 8967              		.loc 1 3539 29
 8968 0036 C2F30802 		ubfx	r2, r2, #0, #9
 8969              		.loc 1 3539 27
 8970 003a 5A60     		str	r2, [r3, #4]
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 8971              		.loc 1 3540 12
 8972 003c 7B68     		ldr	r3, [r7, #4]
 8973 003e 1B6A     		ldr	r3, [r3, #32]
 8974              		.loc 1 3540 25
 8975 0040 9A1C     		adds	r2, r3, #2
 8976 0042 7B68     		ldr	r3, [r7, #4]
 8977 0044 1A62     		str	r2, [r3, #32]
 8978 0046 08E0     		b	.L446
 8979              	.L445:
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8980              		.loc 1 3544 45
 8981 0048 7B68     		ldr	r3, [r7, #4]
 8982 004a 1B6A     		ldr	r3, [r3, #32]
 8983              		.loc 1 3544 57
 8984 004c 591C     		adds	r1, r3, #1
 8985 004e 7A68     		ldr	r2, [r7, #4]
 8986 0050 1162     		str	r1, [r2, #32]
 8987              		.loc 1 3544 39
 8988 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8989              		.loc 1 3544 12
 8990 0054 7B68     		ldr	r3, [r7, #4]
 8991 0056 1B68     		ldr	r3, [r3]
 8992              		.loc 1 3544 27
 8993 0058 5A60     		str	r2, [r3, #4]
 8994              	.L446:
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 8995              		.loc 1 3547 16
 8996 005a 7B68     		ldr	r3, [r7, #4]
 8997 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 8998 005e 9BB2     		uxth	r3, r3
 8999              		.loc 1 3547 9
 9000 0060 013B     		subs	r3, r3, #1
 9001 0062 9BB2     		uxth	r3, r3
 9002              		.loc 1 3547 8
 9003 0064 7A68     		ldr	r2, [r7, #4]
 9004 0066 1946     		mov	r1, r3	@ movhi
 9005 0068 D184     		strh	r1, [r2, #38]	@ movhi
 9006 006a 002B     		cmp	r3, #0
 9007 006c 0FD1     		bne	.L447
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 232


 9008              		.loc 1 3550 7
 9009 006e 7B68     		ldr	r3, [r7, #4]
 9010 0070 1B68     		ldr	r3, [r3]
 9011 0072 DA68     		ldr	r2, [r3, #12]
 9012 0074 7B68     		ldr	r3, [r7, #4]
 9013 0076 1B68     		ldr	r3, [r3]
 9014 0078 22F08002 		bic	r2, r2, #128
 9015 007c DA60     		str	r2, [r3, #12]
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 9016              		.loc 1 3553 7
 9017 007e 7B68     		ldr	r3, [r7, #4]
 9018 0080 1B68     		ldr	r3, [r3]
 9019 0082 DA68     		ldr	r2, [r3, #12]
 9020 0084 7B68     		ldr	r3, [r7, #4]
 9021 0086 1B68     		ldr	r3, [r3]
 9022 0088 42F04002 		orr	r2, r2, #64
 9023 008c DA60     		str	r2, [r3, #12]
 9024              	.L447:
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9025              		.loc 1 3555 12
 9026 008e 0023     		movs	r3, #0
 9027 0090 00E0     		b	.L448
 9028              	.L444:
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9029              		.loc 1 3559 12
 9030 0092 0223     		movs	r3, #2
 9031              	.L448:
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9032              		.loc 1 3561 1
 9033 0094 1846     		mov	r0, r3
 9034 0096 1437     		adds	r7, r7, #20
 9035              	.LCFI318:
 9036              		.cfi_def_cfa_offset 4
 9037 0098 BD46     		mov	sp, r7
 9038              	.LCFI319:
 9039              		.cfi_def_cfa_register 13
 9040              		@ sp needed
 9041 009a 5DF8047B 		ldr	r7, [sp], #4
 9042              	.LCFI320:
 9043              		.cfi_restore 7
 9044              		.cfi_def_cfa_offset 0
 9045 009e 7047     		bx	lr
 9046              		.cfi_endproc
 9047              	.LFE192:
 9049              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 9050              		.align	1
 9051              		.syntax unified
 9052              		.thumb
 9053              		.thumb_func
 9055              	UART_EndTransmit_IT:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 233


 9056              	.LFB193:
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9057              		.loc 1 3570 1
 9058              		.cfi_startproc
 9059              		@ args = 0, pretend = 0, frame = 8
 9060              		@ frame_needed = 1, uses_anonymous_args = 0
 9061 0000 80B5     		push	{r7, lr}
 9062              	.LCFI321:
 9063              		.cfi_def_cfa_offset 8
 9064              		.cfi_offset 7, -8
 9065              		.cfi_offset 14, -4
 9066 0002 82B0     		sub	sp, sp, #8
 9067              	.LCFI322:
 9068              		.cfi_def_cfa_offset 16
 9069 0004 00AF     		add	r7, sp, #0
 9070              	.LCFI323:
 9071              		.cfi_def_cfa_register 7
 9072 0006 7860     		str	r0, [r7, #4]
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 9073              		.loc 1 3572 3
 9074 0008 7B68     		ldr	r3, [r7, #4]
 9075 000a 1B68     		ldr	r3, [r3]
 9076 000c DA68     		ldr	r2, [r3, #12]
 9077 000e 7B68     		ldr	r3, [r7, #4]
 9078 0010 1B68     		ldr	r3, [r3]
 9079 0012 22F04002 		bic	r2, r2, #64
 9080 0016 DA60     		str	r2, [r3, #12]
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9081              		.loc 1 3575 17
 9082 0018 7B68     		ldr	r3, [r7, #4]
 9083 001a 2022     		movs	r2, #32
 9084 001c 83F84120 		strb	r2, [r3, #65]
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 9085              		.loc 1 3582 3
 9086 0020 7868     		ldr	r0, [r7, #4]
 9087 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 9088              		.loc 1 3585 10
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 234


 9089 0026 0023     		movs	r3, #0
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9090              		.loc 1 3586 1
 9091 0028 1846     		mov	r0, r3
 9092 002a 0837     		adds	r7, r7, #8
 9093              	.LCFI324:
 9094              		.cfi_def_cfa_offset 8
 9095 002c BD46     		mov	sp, r7
 9096              	.LCFI325:
 9097              		.cfi_def_cfa_register 13
 9098              		@ sp needed
 9099 002e 80BD     		pop	{r7, pc}
 9100              		.cfi_endproc
 9101              	.LFE193:
 9103              		.section	.text.UART_Receive_IT,"ax",%progbits
 9104              		.align	1
 9105              		.syntax unified
 9106              		.thumb
 9107              		.thumb_func
 9109              	UART_Receive_IT:
 9110              	.LFB194:
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9111              		.loc 1 3595 1
 9112              		.cfi_startproc
 9113              		@ args = 0, pretend = 0, frame = 48
 9114              		@ frame_needed = 1, uses_anonymous_args = 0
 9115 0000 80B5     		push	{r7, lr}
 9116              	.LCFI326:
 9117              		.cfi_def_cfa_offset 8
 9118              		.cfi_offset 7, -8
 9119              		.cfi_offset 14, -4
 9120 0002 8CB0     		sub	sp, sp, #48
 9121              	.LCFI327:
 9122              		.cfi_def_cfa_offset 56
 9123 0004 00AF     		add	r7, sp, #0
 9124              	.LCFI328:
 9125              		.cfi_def_cfa_register 7
 9126 0006 7860     		str	r0, [r7, #4]
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9127              		.loc 1 3600 12
 9128 0008 7B68     		ldr	r3, [r7, #4]
 9129 000a 93F84230 		ldrb	r3, [r3, #66]
 9130 000e DBB2     		uxtb	r3, r3
 9131              		.loc 1 3600 6
 9132 0010 222B     		cmp	r3, #34
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 235


 9133 0012 40F0AE80 		bne	.L452
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9134              		.loc 1 3602 21
 9135 0016 7B68     		ldr	r3, [r7, #4]
 9136 0018 9B68     		ldr	r3, [r3, #8]
 9137              		.loc 1 3602 8
 9138 001a B3F5805F 		cmp	r3, #4096
 9139 001e 17D1     		bne	.L453
 9140              		.loc 1 3602 71 discriminator 1
 9141 0020 7B68     		ldr	r3, [r7, #4]
 9142 0022 1B69     		ldr	r3, [r3, #16]
 9143              		.loc 1 3602 56 discriminator 1
 9144 0024 002B     		cmp	r3, #0
 9145 0026 13D1     		bne	.L453
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 9146              		.loc 1 3604 19
 9147 0028 0023     		movs	r3, #0
 9148 002a FB62     		str	r3, [r7, #44]
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 9149              		.loc 1 3605 19
 9150 002c 7B68     		ldr	r3, [r7, #4]
 9151 002e 9B6A     		ldr	r3, [r3, #40]
 9152 0030 BB62     		str	r3, [r7, #40]
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 9153              		.loc 1 3606 38
 9154 0032 7B68     		ldr	r3, [r7, #4]
 9155 0034 1B68     		ldr	r3, [r3]
 9156              		.loc 1 3606 48
 9157 0036 5B68     		ldr	r3, [r3, #4]
 9158              		.loc 1 3606 22
 9159 0038 9BB2     		uxth	r3, r3
 9160 003a C3F30803 		ubfx	r3, r3, #0, #9
 9161 003e 9AB2     		uxth	r2, r3
 9162              		.loc 1 3606 20
 9163 0040 BB6A     		ldr	r3, [r7, #40]
 9164 0042 1A80     		strh	r2, [r3]	@ movhi
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 9165              		.loc 1 3607 12
 9166 0044 7B68     		ldr	r3, [r7, #4]
 9167 0046 9B6A     		ldr	r3, [r3, #40]
 9168              		.loc 1 3607 25
 9169 0048 9A1C     		adds	r2, r3, #2
 9170 004a 7B68     		ldr	r3, [r7, #4]
 9171 004c 9A62     		str	r2, [r3, #40]
 9172 004e 26E0     		b	.L454
 9173              	.L453:
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 9174              		.loc 1 3611 18
 9175 0050 7B68     		ldr	r3, [r7, #4]
 9176 0052 9B6A     		ldr	r3, [r3, #40]
 9177 0054 FB62     		str	r3, [r7, #44]
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 236


 9178              		.loc 1 3612 20
 9179 0056 0023     		movs	r3, #0
 9180 0058 BB62     		str	r3, [r7, #40]
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 9181              		.loc 1 3614 23
 9182 005a 7B68     		ldr	r3, [r7, #4]
 9183 005c 9B68     		ldr	r3, [r3, #8]
 9184              		.loc 1 3614 10
 9185 005e B3F5805F 		cmp	r3, #4096
 9186 0062 07D0     		beq	.L455
 9187              		.loc 1 3614 74 discriminator 1
 9188 0064 7B68     		ldr	r3, [r7, #4]
 9189 0066 9B68     		ldr	r3, [r3, #8]
 9190              		.loc 1 3614 58 discriminator 1
 9191 0068 002B     		cmp	r3, #0
 9192 006a 0AD1     		bne	.L456
 9193              		.loc 1 3614 124 discriminator 2
 9194 006c 7B68     		ldr	r3, [r7, #4]
 9195 006e 1B69     		ldr	r3, [r3, #16]
 9196              		.loc 1 3614 109 discriminator 2
 9197 0070 002B     		cmp	r3, #0
 9198 0072 06D1     		bne	.L456
 9199              	.L455:
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 9200              		.loc 1 3616 38
 9201 0074 7B68     		ldr	r3, [r7, #4]
 9202 0076 1B68     		ldr	r3, [r3]
 9203              		.loc 1 3616 48
 9204 0078 5B68     		ldr	r3, [r3, #4]
 9205              		.loc 1 3616 23
 9206 007a DAB2     		uxtb	r2, r3
 9207              		.loc 1 3616 21
 9208 007c FB6A     		ldr	r3, [r7, #44]
 9209 007e 1A70     		strb	r2, [r3]
 9210 0080 08E0     		b	.L457
 9211              	.L456:
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 9212              		.loc 1 3620 38
 9213 0082 7B68     		ldr	r3, [r7, #4]
 9214 0084 1B68     		ldr	r3, [r3]
 9215              		.loc 1 3620 48
 9216 0086 5B68     		ldr	r3, [r3, #4]
 9217              		.loc 1 3620 23
 9218 0088 DBB2     		uxtb	r3, r3
 9219 008a 03F07F03 		and	r3, r3, #127
 9220 008e DAB2     		uxtb	r2, r3
 9221              		.loc 1 3620 21
 9222 0090 FB6A     		ldr	r3, [r7, #44]
 9223 0092 1A70     		strb	r2, [r3]
 9224              	.L457:
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 237


 9225              		.loc 1 3622 12
 9226 0094 7B68     		ldr	r3, [r7, #4]
 9227 0096 9B6A     		ldr	r3, [r3, #40]
 9228              		.loc 1 3622 25
 9229 0098 5A1C     		adds	r2, r3, #1
 9230 009a 7B68     		ldr	r3, [r7, #4]
 9231 009c 9A62     		str	r2, [r3, #40]
 9232              	.L454:
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 9233              		.loc 1 3625 16
 9234 009e 7B68     		ldr	r3, [r7, #4]
 9235 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 9236 00a2 9BB2     		uxth	r3, r3
 9237              		.loc 1 3625 9
 9238 00a4 013B     		subs	r3, r3, #1
 9239 00a6 9BB2     		uxth	r3, r3
 9240              		.loc 1 3625 8
 9241 00a8 7A68     		ldr	r2, [r7, #4]
 9242 00aa 1946     		mov	r1, r3	@ movhi
 9243 00ac D185     		strh	r1, [r2, #46]	@ movhi
 9244 00ae 002B     		cmp	r3, #0
 9245 00b0 5DD1     		bne	.L458
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 9246              		.loc 1 3628 7
 9247 00b2 7B68     		ldr	r3, [r7, #4]
 9248 00b4 1B68     		ldr	r3, [r3]
 9249 00b6 DA68     		ldr	r2, [r3, #12]
 9250 00b8 7B68     		ldr	r3, [r7, #4]
 9251 00ba 1B68     		ldr	r3, [r3]
 9252 00bc 22F02002 		bic	r2, r2, #32
 9253 00c0 DA60     		str	r2, [r3, #12]
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 9254              		.loc 1 3631 7
 9255 00c2 7B68     		ldr	r3, [r7, #4]
 9256 00c4 1B68     		ldr	r3, [r3]
 9257 00c6 DA68     		ldr	r2, [r3, #12]
 9258 00c8 7B68     		ldr	r3, [r7, #4]
 9259 00ca 1B68     		ldr	r3, [r3]
 9260 00cc 22F48072 		bic	r2, r2, #256
 9261 00d0 DA60     		str	r2, [r3, #12]
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 9262              		.loc 1 3634 7
 9263 00d2 7B68     		ldr	r3, [r7, #4]
 9264 00d4 1B68     		ldr	r3, [r3]
 9265 00d6 5A69     		ldr	r2, [r3, #20]
 9266 00d8 7B68     		ldr	r3, [r7, #4]
 9267 00da 1B68     		ldr	r3, [r3]
 9268 00dc 22F00102 		bic	r2, r2, #1
 9269 00e0 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 238


3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9270              		.loc 1 3637 22
 9271 00e2 7B68     		ldr	r3, [r7, #4]
 9272 00e4 2022     		movs	r2, #32
 9273 00e6 83F84220 		strb	r2, [r3, #66]
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 9274              		.loc 1 3640 26
 9275 00ea 7B68     		ldr	r3, [r7, #4]
 9276 00ec 0022     		movs	r2, #0
 9277 00ee 5A63     		str	r2, [r3, #52]
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9278              		.loc 1 3644 16
 9279 00f0 7B68     		ldr	r3, [r7, #4]
 9280 00f2 1B6B     		ldr	r3, [r3, #48]
 9281              		.loc 1 3644 10
 9282 00f4 012B     		cmp	r3, #1
 9283 00f6 35D1     		bne	.L459
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9284              		.loc 1 3647 30
 9285 00f8 7B68     		ldr	r3, [r7, #4]
 9286 00fa 0022     		movs	r2, #0
 9287 00fc 1A63     		str	r2, [r3, #48]
 9288              	.L462:
 9289              	.LBB616:
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9290              		.loc 1 3650 9 discriminator 1
 9291 00fe 7B68     		ldr	r3, [r7, #4]
 9292 0100 1B68     		ldr	r3, [r3]
 9293 0102 0C33     		adds	r3, r3, #12
 9294 0104 7B61     		str	r3, [r7, #20]
 9295              	.LBB617:
 9296              	.LBB618:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9297              		.loc 2 480 4
 9298 0106 7B69     		ldr	r3, [r7, #20]
 9299              		.syntax unified
 9300              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9301 0108 53E8003F 		ldrex r3, [r3]
 9302              	@ 0 "" 2
 9303              		.thumb
 9304              		.syntax unified
 9305 010c 3B61     		str	r3, [r7, #16]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9306              		.loc 2 481 10
 9307 010e 3B69     		ldr	r3, [r7, #16]
 9308              	.LBE618:
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 239


 9309              	.LBE617:
 9310              		.loc 1 3650 9 discriminator 1
 9311 0110 23F01003 		bic	r3, r3, #16
 9312 0114 7B62     		str	r3, [r7, #36]
 9313 0116 7B68     		ldr	r3, [r7, #4]
 9314 0118 1B68     		ldr	r3, [r3]
 9315 011a 0C33     		adds	r3, r3, #12
 9316 011c 7A6A     		ldr	r2, [r7, #36]
 9317 011e 3A62     		str	r2, [r7, #32]
 9318 0120 FB61     		str	r3, [r7, #28]
 9319              	.LBB619:
 9320              	.LBB620:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9321              		.loc 2 531 4
 9322 0122 F969     		ldr	r1, [r7, #28]
 9323 0124 3A6A     		ldr	r2, [r7, #32]
 9324              		.syntax unified
 9325              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9326 0126 41E80023 		strex r3, r2, [r1]
 9327              	@ 0 "" 2
 9328              		.thumb
 9329              		.syntax unified
 9330 012a BB61     		str	r3, [r7, #24]
 9331              		.loc 2 532 10
 9332 012c BB69     		ldr	r3, [r7, #24]
 9333              	.LBE620:
 9334              	.LBE619:
 9335              		.loc 1 3650 9 discriminator 1
 9336 012e 002B     		cmp	r3, #0
 9337 0130 E5D1     		bne	.L462
 9338              	.LBE616:
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 9339              		.loc 1 3653 13
 9340 0132 7B68     		ldr	r3, [r7, #4]
 9341 0134 1B68     		ldr	r3, [r3]
 9342 0136 1B68     		ldr	r3, [r3]
 9343 0138 03F01003 		and	r3, r3, #16
 9344              		.loc 1 3653 12
 9345 013c 102B     		cmp	r3, #16
 9346 013e 0AD1     		bne	.L463
 9347              	.LBB621:
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 9348              		.loc 1 3656 11
 9349 0140 0023     		movs	r3, #0
 9350 0142 FB60     		str	r3, [r7, #12]
 9351 0144 7B68     		ldr	r3, [r7, #4]
 9352 0146 1B68     		ldr	r3, [r3]
 9353 0148 1B68     		ldr	r3, [r3]
 9354 014a FB60     		str	r3, [r7, #12]
 9355 014c 7B68     		ldr	r3, [r7, #4]
 9356 014e 1B68     		ldr	r3, [r3]
 9357 0150 5B68     		ldr	r3, [r3, #4]
 9358 0152 FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 240


 9359 0154 FB68     		ldr	r3, [r7, #12]
 9360              	.L463:
 9361              	.LBE621:
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9362              		.loc 1 3664 9
 9363 0156 7B68     		ldr	r3, [r7, #4]
 9364 0158 9B8D     		ldrh	r3, [r3, #44]
 9365 015a 1946     		mov	r1, r3
 9366 015c 7868     		ldr	r0, [r7, #4]
 9367 015e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9368 0162 02E0     		b	.L464
 9369              	.L459:
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9370              		.loc 1 3675 9
 9371 0164 7868     		ldr	r0, [r7, #4]
 9372 0166 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9373              	.L464:
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 9374              		.loc 1 3679 14
 9375 016a 0023     		movs	r3, #0
 9376 016c 02E0     		b	.L465
 9377              	.L458:
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9378              		.loc 1 3681 12
 9379 016e 0023     		movs	r3, #0
 9380 0170 00E0     		b	.L465
 9381              	.L452:
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9382              		.loc 1 3685 12
 9383 0172 0223     		movs	r3, #2
 9384              	.L465:
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 241


 9385              		.loc 1 3687 1
 9386 0174 1846     		mov	r0, r3
 9387 0176 3037     		adds	r7, r7, #48
 9388              	.LCFI329:
 9389              		.cfi_def_cfa_offset 8
 9390 0178 BD46     		mov	sp, r7
 9391              	.LCFI330:
 9392              		.cfi_def_cfa_register 13
 9393              		@ sp needed
 9394 017a 80BD     		pop	{r7, pc}
 9395              		.cfi_endproc
 9396              	.LFE194:
 9398              		.global	__aeabi_uldivmod
 9399              		.section	.text.UART_SetConfig,"ax",%progbits
 9400              		.align	1
 9401              		.syntax unified
 9402              		.thumb
 9403              		.thumb_func
 9405              	UART_SetConfig:
 9406              	.LFB195:
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9407              		.loc 1 3696 1
 9408              		.cfi_startproc
 9409              		@ args = 0, pretend = 0, frame = 256
 9410              		@ frame_needed = 1, uses_anonymous_args = 0
 9411 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9412              	.LCFI331:
 9413              		.cfi_def_cfa_offset 32
 9414              		.cfi_offset 4, -32
 9415              		.cfi_offset 5, -28
 9416              		.cfi_offset 7, -24
 9417              		.cfi_offset 8, -20
 9418              		.cfi_offset 9, -16
 9419              		.cfi_offset 10, -12
 9420              		.cfi_offset 11, -8
 9421              		.cfi_offset 14, -4
 9422 0004 C0B0     		sub	sp, sp, #256
 9423              	.LCFI332:
 9424              		.cfi_def_cfa_offset 288
 9425 0006 00AF     		add	r7, sp, #0
 9426              	.LCFI333:
 9427              		.cfi_def_cfa_register 7
 9428 0008 C7F8F400 		str	r0, [r7, #244]
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 242


3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 9429              		.loc 1 3709 3
 9430 000c D7F8F430 		ldr	r3, [r7, #244]
 9431 0010 1B68     		ldr	r3, [r3]
 9432 0012 1B69     		ldr	r3, [r3, #16]
 9433 0014 23F44050 		bic	r0, r3, #12288
 9434 0018 D7F8F430 		ldr	r3, [r7, #244]
 9435 001c D968     		ldr	r1, [r3, #12]
 9436 001e D7F8F430 		ldr	r3, [r7, #244]
 9437 0022 1A68     		ldr	r2, [r3]
 9438 0024 40EA0103 		orr	r3, r0, r1
 9439 0028 1361     		str	r3, [r2, #16]
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 9440              		.loc 1 3718 33
 9441 002a D7F8F430 		ldr	r3, [r7, #244]
 9442 002e 9A68     		ldr	r2, [r3, #8]
 9443              		.loc 1 3718 58
 9444 0030 D7F8F430 		ldr	r3, [r7, #244]
 9445 0034 1B69     		ldr	r3, [r3, #16]
 9446              		.loc 1 3718 45
 9447 0036 1A43     		orrs	r2, r2, r3
 9448              		.loc 1 3718 79
 9449 0038 D7F8F430 		ldr	r3, [r7, #244]
 9450 003c 5B69     		ldr	r3, [r3, #20]
 9451              		.loc 1 3718 66
 9452 003e 1A43     		orrs	r2, r2, r3
 9453              		.loc 1 3718 98
 9454 0040 D7F8F430 		ldr	r3, [r7, #244]
 9455 0044 DB69     		ldr	r3, [r3, #28]
 9456              		.loc 1 3718 10
 9457 0046 1343     		orrs	r3, r3, r2
 9458 0048 C7F8F830 		str	r3, [r7, #248]
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 9459              		.loc 1 3719 3
 9460 004c D7F8F430 		ldr	r3, [r7, #244]
 9461 0050 1B68     		ldr	r3, [r3]
 9462 0052 DB68     		ldr	r3, [r3, #12]
 9463 0054 23F41641 		bic	r1, r3, #38400
 9464 0058 21F00C01 		bic	r1, r1, #12
 9465 005c D7F8F430 		ldr	r3, [r7, #244]
 9466 0060 1A68     		ldr	r2, [r3]
 9467 0062 D7F8F830 		ldr	r3, [r7, #248]
 9468 0066 0B43     		orrs	r3, r3, r1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 243


 9469 0068 D360     		str	r3, [r2, #12]
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 9470              		.loc 1 3725 3
 9471 006a D7F8F430 		ldr	r3, [r7, #244]
 9472 006e 1B68     		ldr	r3, [r3]
 9473 0070 5B69     		ldr	r3, [r3, #20]
 9474 0072 23F44070 		bic	r0, r3, #768
 9475 0076 D7F8F430 		ldr	r3, [r7, #244]
 9476 007a 9969     		ldr	r1, [r3, #24]
 9477 007c D7F8F430 		ldr	r3, [r7, #244]
 9478 0080 1A68     		ldr	r2, [r3]
 9479 0082 40EA0103 		orr	r3, r0, r1
 9480 0086 5361     		str	r3, [r2, #20]
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 9481              		.loc 1 3734 15
 9482 0088 D7F8F430 		ldr	r3, [r7, #244]
 9483 008c 1A68     		ldr	r2, [r3]
 9484              		.loc 1 3734 8
 9485 008e 8F4B     		ldr	r3, .L473
 9486 0090 9A42     		cmp	r2, r3
 9487 0092 05D0     		beq	.L467
 9488              		.loc 1 3734 46 discriminator 1
 9489 0094 D7F8F430 		ldr	r3, [r7, #244]
 9490 0098 1A68     		ldr	r2, [r3]
 9491              		.loc 1 3734 37 discriminator 1
 9492 009a 8D4B     		ldr	r3, .L473+4
 9493 009c 9A42     		cmp	r2, r3
 9494 009e 04D1     		bne	.L468
 9495              	.L467:
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 9496              		.loc 1 3736 14
 9497 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9498 00a4 C7F8FC00 		str	r0, [r7, #252]
 9499              		.loc 1 3736 12
 9500 00a8 03E0     		b	.L469
 9501              	.L468:
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 244


3744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 9502              		.loc 1 3746 14
 9503 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9504 00ae C7F8FC00 		str	r0, [r7, #252]
 9505              	.L469:
3747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9506              		.loc 1 3749 18
 9507 00b2 D7F8F430 		ldr	r3, [r7, #244]
 9508 00b6 DB69     		ldr	r3, [r3, #28]
 9509              		.loc 1 3749 6
 9510 00b8 B3F5004F 		cmp	r3, #32768
 9511 00bc 40F00C81 		bne	.L470
3750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 9512              		.loc 1 3751 28
 9513 00c0 D7F8FC30 		ldr	r3, [r7, #252]
 9514 00c4 0022     		movs	r2, #0
 9515 00c6 C7F8E830 		str	r3, [r7, #232]
 9516 00ca C7F8EC20 		str	r2, [r7, #236]
 9517 00ce D7E93A45 		ldrd	r4, [r7, #232]
 9518 00d2 2246     		mov	r2, r4
 9519 00d4 2B46     		mov	r3, r5
 9520 00d6 9118     		adds	r1, r2, r2
 9521 00d8 B965     		str	r1, [r7, #88]
 9522 00da 5B41     		adcs	r3, r3, r3
 9523 00dc FB65     		str	r3, [r7, #92]
 9524 00de D7E91623 		ldrd	r2, [r7, #88]
 9525 00e2 2146     		mov	r1, r4
 9526 00e4 12EB0108 		adds	r8, r2, r1
 9527 00e8 2946     		mov	r1, r5
 9528 00ea 43EB0109 		adc	r9, r3, r1
 9529 00ee 4FF00002 		mov	r2, #0
 9530 00f2 4FF00003 		mov	r3, #0
 9531 00f6 4FEAC903 		lsl	r3, r9, #3
 9532 00fa 43EA5873 		orr	r3, r3, r8, lsr #29
 9533 00fe 4FEAC802 		lsl	r2, r8, #3
 9534 0102 9046     		mov	r8, r2
 9535 0104 9946     		mov	r9, r3
 9536 0106 2346     		mov	r3, r4
 9537 0108 18EB0303 		adds	r3, r8, r3
 9538 010c C7F8E030 		str	r3, [r7, #224]
 9539 0110 2B46     		mov	r3, r5
 9540 0112 49EB0303 		adc	r3, r9, r3
 9541 0116 C7F8E430 		str	r3, [r7, #228]
 9542 011a D7F8F430 		ldr	r3, [r7, #244]
 9543 011e 5B68     		ldr	r3, [r3, #4]
 9544 0120 0022     		movs	r2, #0
 9545 0122 C7F8D830 		str	r3, [r7, #216]
 9546 0126 C7F8DC20 		str	r2, [r7, #220]
 9547 012a D7E93612 		ldrd	r1, [r7, #216]
 9548 012e 0B46     		mov	r3, r1
 9549 0130 DB18     		adds	r3, r3, r3
 9550 0132 3B65     		str	r3, [r7, #80]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 245


 9551 0134 1346     		mov	r3, r2
 9552 0136 42EB0303 		adc	r3, r2, r3
 9553 013a 7B65     		str	r3, [r7, #84]
 9554 013c D7E91423 		ldrd	r2, [r7, #80]
 9555 0140 D7E93801 		ldrd	r0, [r7, #224]
 9556 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 9557 0148 0246     		mov	r2, r0
 9558 014a 0B46     		mov	r3, r1
 9559 014c 614B     		ldr	r3, .L473+8
 9560 014e A3FB0223 		umull	r2, r3, r3, r2
 9561 0152 5B09     		lsrs	r3, r3, #5
 9562 0154 1C01     		lsls	r4, r3, #4
 9563 0156 D7F8FC30 		ldr	r3, [r7, #252]
 9564 015a 0022     		movs	r2, #0
 9565 015c C7F8D030 		str	r3, [r7, #208]
 9566 0160 C7F8D420 		str	r2, [r7, #212]
 9567 0164 D7E93489 		ldrd	r8, [r7, #208]
 9568 0168 4246     		mov	r2, r8
 9569 016a 4B46     		mov	r3, r9
 9570 016c 9118     		adds	r1, r2, r2
 9571 016e B964     		str	r1, [r7, #72]
 9572 0170 5B41     		adcs	r3, r3, r3
 9573 0172 FB64     		str	r3, [r7, #76]
 9574 0174 D7E91223 		ldrd	r2, [r7, #72]
 9575 0178 4146     		mov	r1, r8
 9576 017a 12EB010A 		adds	r10, r2, r1
 9577 017e 4946     		mov	r1, r9
 9578 0180 43EB010B 		adc	fp, r3, r1
 9579 0184 4FF00002 		mov	r2, #0
 9580 0188 4FF00003 		mov	r3, #0
 9581 018c 4FEACB03 		lsl	r3, fp, #3
 9582 0190 43EA5A73 		orr	r3, r3, r10, lsr #29
 9583 0194 4FEACA02 		lsl	r2, r10, #3
 9584 0198 9246     		mov	r10, r2
 9585 019a 9B46     		mov	fp, r3
 9586 019c 4346     		mov	r3, r8
 9587 019e 1AEB0303 		adds	r3, r10, r3
 9588 01a2 C7F8C830 		str	r3, [r7, #200]
 9589 01a6 4B46     		mov	r3, r9
 9590 01a8 4BEB0303 		adc	r3, fp, r3
 9591 01ac C7F8CC30 		str	r3, [r7, #204]
 9592 01b0 D7F8F430 		ldr	r3, [r7, #244]
 9593 01b4 5B68     		ldr	r3, [r3, #4]
 9594 01b6 0022     		movs	r2, #0
 9595 01b8 C7F8C030 		str	r3, [r7, #192]
 9596 01bc C7F8C420 		str	r2, [r7, #196]
 9597 01c0 D7E93012 		ldrd	r1, [r7, #192]
 9598 01c4 0B46     		mov	r3, r1
 9599 01c6 DB18     		adds	r3, r3, r3
 9600 01c8 3B64     		str	r3, [r7, #64]
 9601 01ca 1346     		mov	r3, r2
 9602 01cc 42EB0303 		adc	r3, r2, r3
 9603 01d0 7B64     		str	r3, [r7, #68]
 9604 01d2 D7E91023 		ldrd	r2, [r7, #64]
 9605 01d6 D7E93201 		ldrd	r0, [r7, #200]
 9606 01da FFF7FEFF 		bl	__aeabi_uldivmod
 9607 01de 0246     		mov	r2, r0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 246


 9608 01e0 0B46     		mov	r3, r1
 9609 01e2 1146     		mov	r1, r2
 9610 01e4 3B4B     		ldr	r3, .L473+8
 9611 01e6 A3FB0123 		umull	r2, r3, r3, r1
 9612 01ea 5B09     		lsrs	r3, r3, #5
 9613 01ec 6422     		movs	r2, #100
 9614 01ee 02FB03F3 		mul	r3, r2, r3
 9615 01f2 CB1A     		subs	r3, r1, r3
 9616 01f4 DB00     		lsls	r3, r3, #3
 9617 01f6 03F13202 		add	r2, r3, #50
 9618 01fa 364B     		ldr	r3, .L473+8
 9619 01fc A3FB0223 		umull	r2, r3, r3, r2
 9620 0200 5B09     		lsrs	r3, r3, #5
 9621 0202 5B00     		lsls	r3, r3, #1
 9622 0204 03F4F873 		and	r3, r3, #496
 9623 0208 1C44     		add	r4, r4, r3
 9624 020a D7F8FC30 		ldr	r3, [r7, #252]
 9625 020e 0022     		movs	r2, #0
 9626 0210 C7F8B830 		str	r3, [r7, #184]
 9627 0214 C7F8BC20 		str	r2, [r7, #188]
 9628 0218 D7E92E89 		ldrd	r8, [r7, #184]
 9629 021c 4246     		mov	r2, r8
 9630 021e 4B46     		mov	r3, r9
 9631 0220 9118     		adds	r1, r2, r2
 9632 0222 B963     		str	r1, [r7, #56]
 9633 0224 5B41     		adcs	r3, r3, r3
 9634 0226 FB63     		str	r3, [r7, #60]
 9635 0228 D7E90E23 		ldrd	r2, [r7, #56]
 9636 022c 4146     		mov	r1, r8
 9637 022e 5118     		adds	r1, r2, r1
 9638 0230 3963     		str	r1, [r7, #48]
 9639 0232 4946     		mov	r1, r9
 9640 0234 4B41     		adcs	r3, r3, r1
 9641 0236 7B63     		str	r3, [r7, #52]
 9642 0238 4FF00002 		mov	r2, #0
 9643 023c 4FF00003 		mov	r3, #0
 9644 0240 D7E90CAB 		ldrd	r10, [r7, #48]
 9645 0244 5946     		mov	r1, fp
 9646 0246 CB00     		lsls	r3, r1, #3
 9647 0248 5146     		mov	r1, r10
 9648 024a 43EA5173 		orr	r3, r3, r1, lsr #29
 9649 024e 5146     		mov	r1, r10
 9650 0250 CA00     		lsls	r2, r1, #3
 9651 0252 1046     		mov	r0, r2
 9652 0254 1946     		mov	r1, r3
 9653 0256 0346     		mov	r3, r0
 9654 0258 4246     		mov	r2, r8
 9655 025a 9B18     		adds	r3, r3, r2
 9656 025c C7F8B030 		str	r3, [r7, #176]
 9657 0260 4B46     		mov	r3, r9
 9658 0262 0A46     		mov	r2, r1
 9659 0264 42EB0303 		adc	r3, r2, r3
 9660 0268 C7F8B430 		str	r3, [r7, #180]
 9661 026c D7F8F430 		ldr	r3, [r7, #244]
 9662 0270 5B68     		ldr	r3, [r3, #4]
 9663 0272 0022     		movs	r2, #0
 9664 0274 C7F8A830 		str	r3, [r7, #168]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 247


 9665 0278 C7F8AC20 		str	r2, [r7, #172]
 9666 027c D7E92A12 		ldrd	r1, [r7, #168]
 9667 0280 0B46     		mov	r3, r1
 9668 0282 DB18     		adds	r3, r3, r3
 9669 0284 BB62     		str	r3, [r7, #40]
 9670 0286 1346     		mov	r3, r2
 9671 0288 42EB0303 		adc	r3, r2, r3
 9672 028c FB62     		str	r3, [r7, #44]
 9673 028e D7E90A23 		ldrd	r2, [r7, #40]
 9674 0292 D7E92C01 		ldrd	r0, [r7, #176]
 9675 0296 FFF7FEFF 		bl	__aeabi_uldivmod
 9676 029a 0246     		mov	r2, r0
 9677 029c 0B46     		mov	r3, r1
 9678 029e 0D4B     		ldr	r3, .L473+8
 9679 02a0 A3FB0213 		umull	r1, r3, r3, r2
 9680 02a4 5B09     		lsrs	r3, r3, #5
 9681 02a6 6421     		movs	r1, #100
 9682 02a8 01FB03F3 		mul	r3, r1, r3
 9683 02ac D31A     		subs	r3, r2, r3
 9684 02ae DB00     		lsls	r3, r3, #3
 9685 02b0 3233     		adds	r3, r3, #50
 9686 02b2 084A     		ldr	r2, .L473+8
 9687 02b4 A2FB0323 		umull	r2, r3, r2, r3
 9688 02b8 5B09     		lsrs	r3, r3, #5
 9689 02ba 03F00702 		and	r2, r3, #7
 9690              		.loc 1 3751 10
 9691 02be D7F8F430 		ldr	r3, [r7, #244]
 9692 02c2 1B68     		ldr	r3, [r3]
 9693              		.loc 1 3751 28
 9694 02c4 2244     		add	r2, r2, r4
 9695              		.loc 1 3751 26
 9696 02c6 9A60     		str	r2, [r3, #8]
3752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9697              		.loc 1 3757 1
 9698 02c8 06E1     		b	.L472
 9699              	.L474:
 9700 02ca 00BF     		.align	2
 9701              	.L473:
 9702 02cc 00100140 		.word	1073811456
 9703 02d0 00140140 		.word	1073812480
 9704 02d4 1F85EB51 		.word	1374389535
 9705              	.L470:
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9706              		.loc 1 3755 28
 9707 02d8 D7F8FC30 		ldr	r3, [r7, #252]
 9708 02dc 0022     		movs	r2, #0
 9709 02de C7F8A030 		str	r3, [r7, #160]
 9710 02e2 C7F8A420 		str	r2, [r7, #164]
 9711 02e6 D7E92889 		ldrd	r8, [r7, #160]
 9712 02ea 4246     		mov	r2, r8
 9713 02ec 4B46     		mov	r3, r9
 9714 02ee 9118     		adds	r1, r2, r2
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 248


 9715 02f0 3962     		str	r1, [r7, #32]
 9716 02f2 5B41     		adcs	r3, r3, r3
 9717 02f4 7B62     		str	r3, [r7, #36]
 9718 02f6 D7E90823 		ldrd	r2, [r7, #32]
 9719 02fa 4146     		mov	r1, r8
 9720 02fc 5418     		adds	r4, r2, r1
 9721 02fe 4946     		mov	r1, r9
 9722 0300 43EB0105 		adc	r5, r3, r1
 9723 0304 4FF00002 		mov	r2, #0
 9724 0308 4FF00003 		mov	r3, #0
 9725 030c EB00     		lsls	r3, r5, #3
 9726 030e 43EA5473 		orr	r3, r3, r4, lsr #29
 9727 0312 E200     		lsls	r2, r4, #3
 9728 0314 1446     		mov	r4, r2
 9729 0316 1D46     		mov	r5, r3
 9730 0318 4346     		mov	r3, r8
 9731 031a E318     		adds	r3, r4, r3
 9732 031c C7F89830 		str	r3, [r7, #152]
 9733 0320 4B46     		mov	r3, r9
 9734 0322 45EB0303 		adc	r3, r5, r3
 9735 0326 C7F89C30 		str	r3, [r7, #156]
 9736 032a D7F8F430 		ldr	r3, [r7, #244]
 9737 032e 5B68     		ldr	r3, [r3, #4]
 9738 0330 0022     		movs	r2, #0
 9739 0332 C7F89030 		str	r3, [r7, #144]
 9740 0336 C7F89420 		str	r2, [r7, #148]
 9741 033a 4FF00002 		mov	r2, #0
 9742 033e 4FF00003 		mov	r3, #0
 9743 0342 D7E92445 		ldrd	r4, [r7, #144]
 9744 0346 2946     		mov	r1, r5
 9745 0348 8B00     		lsls	r3, r1, #2
 9746 034a 2146     		mov	r1, r4
 9747 034c 43EA9173 		orr	r3, r3, r1, lsr #30
 9748 0350 2146     		mov	r1, r4
 9749 0352 8A00     		lsls	r2, r1, #2
 9750 0354 D7E92601 		ldrd	r0, [r7, #152]
 9751 0358 FFF7FEFF 		bl	__aeabi_uldivmod
 9752 035c 0246     		mov	r2, r0
 9753 035e 0B46     		mov	r3, r1
 9754 0360 604B     		ldr	r3, .L475
 9755 0362 A3FB0223 		umull	r2, r3, r3, r2
 9756 0366 5B09     		lsrs	r3, r3, #5
 9757 0368 1C01     		lsls	r4, r3, #4
 9758 036a D7F8FC30 		ldr	r3, [r7, #252]
 9759 036e 0022     		movs	r2, #0
 9760 0370 C7F88830 		str	r3, [r7, #136]
 9761 0374 C7F88C20 		str	r2, [r7, #140]
 9762 0378 D7E92289 		ldrd	r8, [r7, #136]
 9763 037c 4246     		mov	r2, r8
 9764 037e 4B46     		mov	r3, r9
 9765 0380 9118     		adds	r1, r2, r2
 9766 0382 B961     		str	r1, [r7, #24]
 9767 0384 5B41     		adcs	r3, r3, r3
 9768 0386 FB61     		str	r3, [r7, #28]
 9769 0388 D7E90623 		ldrd	r2, [r7, #24]
 9770 038c 4146     		mov	r1, r8
 9771 038e 5118     		adds	r1, r2, r1
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 249


 9772 0390 3961     		str	r1, [r7, #16]
 9773 0392 4946     		mov	r1, r9
 9774 0394 4B41     		adcs	r3, r3, r1
 9775 0396 7B61     		str	r3, [r7, #20]
 9776 0398 4FF00002 		mov	r2, #0
 9777 039c 4FF00003 		mov	r3, #0
 9778 03a0 D7E904AB 		ldrd	r10, [r7, #16]
 9779 03a4 5946     		mov	r1, fp
 9780 03a6 CB00     		lsls	r3, r1, #3
 9781 03a8 5146     		mov	r1, r10
 9782 03aa 43EA5173 		orr	r3, r3, r1, lsr #29
 9783 03ae 5146     		mov	r1, r10
 9784 03b0 CA00     		lsls	r2, r1, #3
 9785 03b2 1046     		mov	r0, r2
 9786 03b4 1946     		mov	r1, r3
 9787 03b6 0346     		mov	r3, r0
 9788 03b8 4246     		mov	r2, r8
 9789 03ba 9B18     		adds	r3, r3, r2
 9790 03bc C7F88030 		str	r3, [r7, #128]
 9791 03c0 4B46     		mov	r3, r9
 9792 03c2 0A46     		mov	r2, r1
 9793 03c4 42EB0303 		adc	r3, r2, r3
 9794 03c8 C7F88430 		str	r3, [r7, #132]
 9795 03cc D7F8F430 		ldr	r3, [r7, #244]
 9796 03d0 5B68     		ldr	r3, [r3, #4]
 9797 03d2 0022     		movs	r2, #0
 9798 03d4 BB67     		str	r3, [r7, #120]
 9799 03d6 FA67     		str	r2, [r7, #124]
 9800 03d8 4FF00002 		mov	r2, #0
 9801 03dc 4FF00003 		mov	r3, #0
 9802 03e0 D7E91E89 		ldrd	r8, [r7, #120]
 9803 03e4 4946     		mov	r1, r9
 9804 03e6 8B00     		lsls	r3, r1, #2
 9805 03e8 4146     		mov	r1, r8
 9806 03ea 43EA9173 		orr	r3, r3, r1, lsr #30
 9807 03ee 4146     		mov	r1, r8
 9808 03f0 8A00     		lsls	r2, r1, #2
 9809 03f2 D7E92001 		ldrd	r0, [r7, #128]
 9810 03f6 FFF7FEFF 		bl	__aeabi_uldivmod
 9811 03fa 0246     		mov	r2, r0
 9812 03fc 0B46     		mov	r3, r1
 9813 03fe 1146     		mov	r1, r2
 9814 0400 384B     		ldr	r3, .L475
 9815 0402 A3FB0123 		umull	r2, r3, r3, r1
 9816 0406 5B09     		lsrs	r3, r3, #5
 9817 0408 6422     		movs	r2, #100
 9818 040a 02FB03F3 		mul	r3, r2, r3
 9819 040e CB1A     		subs	r3, r1, r3
 9820 0410 1B01     		lsls	r3, r3, #4
 9821 0412 3233     		adds	r3, r3, #50
 9822 0414 334A     		ldr	r2, .L475
 9823 0416 A2FB0323 		umull	r2, r3, r2, r3
 9824 041a 5B09     		lsrs	r3, r3, #5
 9825 041c 03F0F003 		and	r3, r3, #240
 9826 0420 1C44     		add	r4, r4, r3
 9827 0422 D7F8FC30 		ldr	r3, [r7, #252]
 9828 0426 0022     		movs	r2, #0
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 250


 9829 0428 3B67     		str	r3, [r7, #112]
 9830 042a 7A67     		str	r2, [r7, #116]
 9831 042c D7E91C89 		ldrd	r8, [r7, #112]
 9832 0430 4246     		mov	r2, r8
 9833 0432 4B46     		mov	r3, r9
 9834 0434 9118     		adds	r1, r2, r2
 9835 0436 B960     		str	r1, [r7, #8]
 9836 0438 5B41     		adcs	r3, r3, r3
 9837 043a FB60     		str	r3, [r7, #12]
 9838 043c D7E90223 		ldrd	r2, [r7, #8]
 9839 0440 4146     		mov	r1, r8
 9840 0442 5118     		adds	r1, r2, r1
 9841 0444 3960     		str	r1, [r7]
 9842 0446 4946     		mov	r1, r9
 9843 0448 4B41     		adcs	r3, r3, r1
 9844 044a 7B60     		str	r3, [r7, #4]
 9845 044c 4FF00002 		mov	r2, #0
 9846 0450 4FF00003 		mov	r3, #0
 9847 0454 D7E900AB 		ldrd	r10, [r7]
 9848 0458 5946     		mov	r1, fp
 9849 045a CB00     		lsls	r3, r1, #3
 9850 045c 5146     		mov	r1, r10
 9851 045e 43EA5173 		orr	r3, r3, r1, lsr #29
 9852 0462 5146     		mov	r1, r10
 9853 0464 CA00     		lsls	r2, r1, #3
 9854 0466 1046     		mov	r0, r2
 9855 0468 1946     		mov	r1, r3
 9856 046a 0346     		mov	r3, r0
 9857 046c 4246     		mov	r2, r8
 9858 046e 9B18     		adds	r3, r3, r2
 9859 0470 BB66     		str	r3, [r7, #104]
 9860 0472 4B46     		mov	r3, r9
 9861 0474 0A46     		mov	r2, r1
 9862 0476 42EB0303 		adc	r3, r2, r3
 9863 047a FB66     		str	r3, [r7, #108]
 9864 047c D7F8F430 		ldr	r3, [r7, #244]
 9865 0480 5B68     		ldr	r3, [r3, #4]
 9866 0482 0022     		movs	r2, #0
 9867 0484 3B66     		str	r3, [r7, #96]
 9868 0486 7A66     		str	r2, [r7, #100]
 9869 0488 4FF00002 		mov	r2, #0
 9870 048c 4FF00003 		mov	r3, #0
 9871 0490 D7E91889 		ldrd	r8, [r7, #96]
 9872 0494 4946     		mov	r1, r9
 9873 0496 8B00     		lsls	r3, r1, #2
 9874 0498 4146     		mov	r1, r8
 9875 049a 43EA9173 		orr	r3, r3, r1, lsr #30
 9876 049e 4146     		mov	r1, r8
 9877 04a0 8A00     		lsls	r2, r1, #2
 9878 04a2 D7E91A01 		ldrd	r0, [r7, #104]
 9879 04a6 FFF7FEFF 		bl	__aeabi_uldivmod
 9880 04aa 0246     		mov	r2, r0
 9881 04ac 0B46     		mov	r3, r1
 9882 04ae 0D4B     		ldr	r3, .L475
 9883 04b0 A3FB0213 		umull	r1, r3, r3, r2
 9884 04b4 5B09     		lsrs	r3, r3, #5
 9885 04b6 6421     		movs	r1, #100
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 251


 9886 04b8 01FB03F3 		mul	r3, r1, r3
 9887 04bc D31A     		subs	r3, r2, r3
 9888 04be 1B01     		lsls	r3, r3, #4
 9889 04c0 3233     		adds	r3, r3, #50
 9890 04c2 084A     		ldr	r2, .L475
 9891 04c4 A2FB0323 		umull	r2, r3, r2, r3
 9892 04c8 5B09     		lsrs	r3, r3, #5
 9893 04ca 03F00F02 		and	r2, r3, #15
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9894              		.loc 1 3755 10
 9895 04ce D7F8F430 		ldr	r3, [r7, #244]
 9896 04d2 1B68     		ldr	r3, [r3]
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9897              		.loc 1 3755 28
 9898 04d4 2244     		add	r2, r2, r4
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9899              		.loc 1 3755 26
 9900 04d6 9A60     		str	r2, [r3, #8]
 9901              	.L472:
 9902              		.loc 1 3757 1
 9903 04d8 00BF     		nop
 9904 04da 07F58077 		add	r7, r7, #256
 9905              	.LCFI334:
 9906              		.cfi_def_cfa_offset 32
 9907 04de BD46     		mov	sp, r7
 9908              	.LCFI335:
 9909              		.cfi_def_cfa_register 13
 9910              		@ sp needed
 9911 04e0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9912              	.L476:
 9913              		.align	2
 9914              	.L475:
 9915 04e4 1F85EB51 		.word	1374389535
 9916              		.cfi_endproc
 9917              	.LFE195:
 9919              		.text
 9920              	.Letext0:
 9921              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 9922              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 9923              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 9924              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 9925              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 9926              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 9927              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 9928              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 9929              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 252


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:21     .text.HAL_UART_Init:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:27     .text.HAL_UART_Init:00000000 HAL_UART_Init
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:662    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9405   .text.UART_SetConfig:00000000 UART_SetConfig
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:140    .text.HAL_HalfDuplex_Init:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:146    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:267    .text.HAL_LIN_Init:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:273    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:412    .text.HAL_MultiProcessor_Init:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:418    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:568    .text.HAL_UART_DeInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:574    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:704    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:656    .text.HAL_UART_MspInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:698    .text.HAL_UART_MspDeInit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:740    .text.HAL_UART_Transmit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:746    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7749   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:957    .text.HAL_UART_Receive:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:963    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1194   .text.HAL_UART_Transmit_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1200   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1294   .text.HAL_UART_Receive_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1300   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7891   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1371   .text.HAL_UART_Transmit_DMA:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1377   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1557   .text.HAL_UART_Transmit_DMA:000000d4 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7065   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7229   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7633   .text.UART_DMAError:00000000 UART_DMAError
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1564   .text.HAL_UART_Receive_DMA:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1570   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7989   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1641   .text.HAL_UART_DMAPause:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1647   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1940   .text.HAL_UART_DMAResume:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:1946   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2224   .text.HAL_UART_DMAStop:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2230   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8267   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8363   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2447   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2453   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2765   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2771   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2930   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:2936   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3095   .text.HAL_UARTEx_GetRxEventType:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3101   .text.HAL_UARTEx_GetRxEventType:00000000 HAL_UARTEx_GetRxEventType
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3140   .text.HAL_UART_Abort:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3146   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3559   .text.HAL_UART_AbortTransmit:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3565   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3756   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 253


/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:3762   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4066   .text.HAL_UART_Abort_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4072   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6224   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4533   .text.HAL_UART_Abort_IT:00000220 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8624   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8717   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4539   .text.HAL_UART_AbortTransmit_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4545   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6266   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4748   .text.HAL_UART_AbortTransmit_IT:000000e4 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8810   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4753   .text.HAL_UART_AbortReceive_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:4759   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6308   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:5079   .text.HAL_UART_AbortReceive_IT:00000160 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8862   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:5084   .text.HAL_UART_IRQHandler:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:5090   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9109   .text.UART_Receive_IT:00000000 UART_Receive_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6182   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6350   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:5745   .text.HAL_UART_IRQHandler:000003e0 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8572   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:5750   .text.HAL_UART_IRQHandler:000003e4 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8918   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9055   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6008   .text.HAL_UART_TxCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6014   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6050   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6056   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6092   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6098   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6134   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6140   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6176   .text.HAL_UART_ErrorCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6218   .text.HAL_UART_AbortCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6260   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6302   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6344   .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6388   .text.HAL_LIN_SendBreak:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6394   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6510   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6516   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6636   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6642   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6762   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6768   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6855   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6861   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6948   .text.HAL_UART_GetState:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:6954   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7015   .text.HAL_UART_GetError:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7021   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7060   .text.UART_DMATransmitCplt:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7224   .text.UART_DMATxHalfCplt:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7268   .text.UART_DMAReceiveCplt:00000000 $t
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s 			page 254


/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7273   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7561   .text.UART_DMARxHalfCplt:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7566   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7628   .text.UART_DMAError:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7744   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7885   .text.UART_Start_Receive_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:7983   .text.UART_Start_Receive_DMA:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8255   .text.UART_Start_Receive_DMA:00000128 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8262   .text.UART_EndTxTransfer:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8358   .text.UART_EndRxTransfer:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8567   .text.UART_DMAAbortOnError:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8619   .text.UART_DMATxAbortCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8712   .text.UART_DMARxAbortCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8805   .text.UART_DMATxOnlyAbortCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8857   .text.UART_DMARxOnlyAbortCallback:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:8913   .text.UART_Transmit_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9050   .text.UART_EndTransmit_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9104   .text.UART_Receive_IT:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9400   .text.UART_SetConfig:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9702   .text.UART_SetConfig:000002cc $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9707   .text.UART_SetConfig:000002d8 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccfdabgt.s:9915   .text.UART_SetConfig:000004e4 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
