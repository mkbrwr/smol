ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"screen.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Game/Src/screen.c"
  20              		.section	.sdram,"aw"
  21              		.align	2
  24              	depthBuffer:
  25 0000 00000000 		.space	307200
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.align	2
  29              	colorBuffer:
  30 4b000 00000000 		.space	307200
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.section	.text.screen_write_pixel,"ax",%progbits
  32              		.align	1
  33              		.global	screen_write_pixel
  34              		.syntax unified
  35              		.thumb
  36              		.thumb_func
  38              	screen_write_pixel:
  39              	.LFB137:
   1:Game/Src/screen.c **** #include "screen.h"
   2:Game/Src/screen.c **** #include "dma2d.h"
   3:Game/Src/screen.c **** #include "stm32f4xx_hal.h"
   4:Game/Src/screen.c **** #include <stdint.h>
   5:Game/Src/screen.c **** 
   6:Game/Src/screen.c **** #define DEPTH_BUFFER_ZERO 0.0f;
   7:Game/Src/screen.c **** 
   8:Game/Src/screen.c **** static float depthBuffer[SCREEN_WIDHT][SCREEN_HEIGHT] __attribute__((section(".sdram")));
   9:Game/Src/screen.c **** static ScreenColor colorBuffer[SCREEN_WIDHT][SCREEN_HEIGHT] __attribute__((section(".sdram")));
  10:Game/Src/screen.c **** 
  11:Game/Src/screen.c **** void screen_write_pixel(unsigned int Xpos, unsigned int Ypos, ScreenColor color, float in_pixel_dep
  12:Game/Src/screen.c **** {
  40              		.loc 1 12 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 2


  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44              		@ link register save eliminated.
  45 0000 80B4     		push	{r7}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 7, -4
  49 0002 87B0     		sub	sp, sp, #28
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 32
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 F860     		str	r0, [r7, #12]
  56 0008 B960     		str	r1, [r7, #8]
  57 000a 7A60     		str	r2, [r7, #4]
  58 000c 87ED000A 		vstr.32	s0, [r7]
  13:Game/Src/screen.c ****   float current_pixel_depth = depthBuffer[Ypos][Xpos];
  59              		.loc 1 13 9
  60 0010 2849     		ldr	r1, .L7
  61 0012 BA68     		ldr	r2, [r7, #8]
  62 0014 1346     		mov	r3, r2
  63 0016 1B01     		lsls	r3, r3, #4
  64 0018 9B1A     		subs	r3, r3, r2
  65 001a 1B01     		lsls	r3, r3, #4
  66 001c FA68     		ldr	r2, [r7, #12]
  67 001e 1344     		add	r3, r3, r2
  68 0020 9B00     		lsls	r3, r3, #2
  69 0022 0B44     		add	r3, r3, r1
  70 0024 1B68     		ldr	r3, [r3]	@ float
  71 0026 7B61     		str	r3, [r7, #20]	@ float
  14:Game/Src/screen.c ****   if (current_pixel_depth == 0.0f) {
  72              		.loc 1 14 6
  73 0028 D7ED057A 		vldr.32	s15, [r7, #20]
  74 002c F5EE407A 		vcmp.f32	s15, #0
  75 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  76 0034 17D1     		bne	.L2
  15:Game/Src/screen.c ****     colorBuffer[Ypos][Xpos] = color;
  77              		.loc 1 15 29
  78 0036 2049     		ldr	r1, .L7+4
  79 0038 BA68     		ldr	r2, [r7, #8]
  80 003a 1346     		mov	r3, r2
  81 003c 1B01     		lsls	r3, r3, #4
  82 003e 9B1A     		subs	r3, r3, r2
  83 0040 1B01     		lsls	r3, r3, #4
  84 0042 FA68     		ldr	r2, [r7, #12]
  85 0044 1344     		add	r3, r3, r2
  86 0046 7A68     		ldr	r2, [r7, #4]
  87 0048 41F82320 		str	r2, [r1, r3, lsl #2]
  16:Game/Src/screen.c ****     depthBuffer[Ypos][Xpos] = in_pixel_depth;
  88              		.loc 1 16 29
  89 004c 1949     		ldr	r1, .L7
  90 004e BA68     		ldr	r2, [r7, #8]
  91 0050 1346     		mov	r3, r2
  92 0052 1B01     		lsls	r3, r3, #4
  93 0054 9B1A     		subs	r3, r3, r2
  94 0056 1B01     		lsls	r3, r3, #4
  95 0058 FA68     		ldr	r2, [r7, #12]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 3


  96 005a 1344     		add	r3, r3, r2
  97 005c 9B00     		lsls	r3, r3, #2
  98 005e 0B44     		add	r3, r3, r1
  99 0060 3A68     		ldr	r2, [r7]	@ float
 100 0062 1A60     		str	r2, [r3]	@ float
  17:Game/Src/screen.c ****   }
  18:Game/Src/screen.c ****   else if (current_pixel_depth > in_pixel_depth) {
  19:Game/Src/screen.c ****     colorBuffer[Ypos][Xpos] = color;
  20:Game/Src/screen.c ****     depthBuffer[Ypos][Xpos] = in_pixel_depth;
  21:Game/Src/screen.c ****   }
  22:Game/Src/screen.c **** }
 101              		.loc 1 22 1
 102 0064 20E0     		b	.L6
 103              	.L2:
  18:Game/Src/screen.c ****     colorBuffer[Ypos][Xpos] = color;
 104              		.loc 1 18 11
 105 0066 97ED057A 		vldr.32	s14, [r7, #20]
 106 006a D7ED007A 		vldr.32	s15, [r7]
 107 006e B4EEE77A 		vcmpe.f32	s14, s15
 108 0072 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 109 0076 00DC     		bgt	.L5
 110              		.loc 1 22 1
 111 0078 16E0     		b	.L6
 112              	.L5:
  19:Game/Src/screen.c ****     depthBuffer[Ypos][Xpos] = in_pixel_depth;
 113              		.loc 1 19 29
 114 007a 0F49     		ldr	r1, .L7+4
 115 007c BA68     		ldr	r2, [r7, #8]
 116 007e 1346     		mov	r3, r2
 117 0080 1B01     		lsls	r3, r3, #4
 118 0082 9B1A     		subs	r3, r3, r2
 119 0084 1B01     		lsls	r3, r3, #4
 120 0086 FA68     		ldr	r2, [r7, #12]
 121 0088 1344     		add	r3, r3, r2
 122 008a 7A68     		ldr	r2, [r7, #4]
 123 008c 41F82320 		str	r2, [r1, r3, lsl #2]
  20:Game/Src/screen.c ****   }
 124              		.loc 1 20 29
 125 0090 0849     		ldr	r1, .L7
 126 0092 BA68     		ldr	r2, [r7, #8]
 127 0094 1346     		mov	r3, r2
 128 0096 1B01     		lsls	r3, r3, #4
 129 0098 9B1A     		subs	r3, r3, r2
 130 009a 1B01     		lsls	r3, r3, #4
 131 009c FA68     		ldr	r2, [r7, #12]
 132 009e 1344     		add	r3, r3, r2
 133 00a0 9B00     		lsls	r3, r3, #2
 134 00a2 0B44     		add	r3, r3, r1
 135 00a4 3A68     		ldr	r2, [r7]	@ float
 136 00a6 1A60     		str	r2, [r3]	@ float
 137              	.L6:
 138              		.loc 1 22 1
 139 00a8 00BF     		nop
 140 00aa 1C37     		adds	r7, r7, #28
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 4
 143 00ac BD46     		mov	sp, r7
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 4


 144              	.LCFI4:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 00ae 5DF8047B 		ldr	r7, [sp], #4
 148              	.LCFI5:
 149              		.cfi_restore 7
 150              		.cfi_def_cfa_offset 0
 151 00b2 7047     		bx	lr
 152              	.L8:
 153              		.align	2
 154              	.L7:
 155 00b4 00000000 		.word	depthBuffer
 156 00b8 00B00400 		.word	colorBuffer
 157              		.cfi_endproc
 158              	.LFE137:
 160              		.section	.text.screen_flush,"ax",%progbits
 161              		.align	1
 162              		.global	screen_flush
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	screen_flush:
 168              	.LFB138:
  23:Game/Src/screen.c **** 
  24:Game/Src/screen.c **** void screen_flush(void)
  25:Game/Src/screen.c **** {
 169              		.loc 1 25 1
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 176
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 90B5     		push	{r4, r7, lr}
 174              	.LCFI6:
 175              		.cfi_def_cfa_offset 12
 176              		.cfi_offset 4, -12
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 AFB0     		sub	sp, sp, #188
 180              	.LCFI7:
 181              		.cfi_def_cfa_offset 200
 182 0004 02AF     		add	r7, sp, #8
 183              	.LCFI8:
 184              		.cfi_def_cfa 7, 192
  26:Game/Src/screen.c ****   hdma2d.Init.Mode = DMA2D_M2M;
 185              		.loc 1 26 20
 186 0006 274B     		ldr	r3, .L10
 187 0008 0022     		movs	r2, #0
 188 000a 5A60     		str	r2, [r3, #4]
  27:Game/Src/screen.c ****   hdma2d.Init.ColorMode = DMA2D_ARGB8888;
 189              		.loc 1 27 25
 190 000c 254B     		ldr	r3, .L10
 191 000e 0022     		movs	r2, #0
 192 0010 9A60     		str	r2, [r3, #8]
  28:Game/Src/screen.c **** 
  29:Game/Src/screen.c ****   MODIFY_REG(hdma2d.Instance->CR, DMA2D_CR_MODE, DMA2D_M2M);
 193              		.loc 1 29 3
 194 0012 244B     		ldr	r3, .L10
 195 0014 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 5


 196 0016 1A68     		ldr	r2, [r3]
 197 0018 224B     		ldr	r3, .L10
 198 001a 1B68     		ldr	r3, [r3]
 199 001c 22F44032 		bic	r2, r2, #196608
 200 0020 1A60     		str	r2, [r3]
  30:Game/Src/screen.c ****   MODIFY_REG(hdma2d.Instance->OPFCCR, DMA2D_OPFCCR_CM, DMA2D_ARGB8888);
 201              		.loc 1 30 3
 202 0022 204B     		ldr	r3, .L10
 203 0024 1B68     		ldr	r3, [r3]
 204 0026 5A6B     		ldr	r2, [r3, #52]
 205 0028 1E4B     		ldr	r3, .L10
 206 002a 1B68     		ldr	r3, [r3]
 207 002c 22F00702 		bic	r2, r2, #7
 208 0030 5A63     		str	r2, [r3, #52]
  31:Game/Src/screen.c ****   MODIFY_REG(hdma2d.Instance->OOR, DMA2D_OOR_LO, BSP_LCD_GetXSize() - 240);
 209              		.loc 1 31 3
 210 0032 1C4B     		ldr	r3, .L10
 211 0034 1B68     		ldr	r3, [r3]
 212 0036 1B6C     		ldr	r3, [r3, #64]
 213 0038 23F47F54 		bic	r4, r3, #16320
 214 003c 24F03F04 		bic	r4, r4, #63
 215 0040 FFF7FEFF 		bl	BSP_LCD_GetXSize
 216 0044 0346     		mov	r3, r0
 217              		.loc 1 31 3 is_stmt 0 discriminator 1
 218 0046 A3F1F002 		sub	r2, r3, #240
 219 004a 164B     		ldr	r3, .L10
 220 004c 1B68     		ldr	r3, [r3]
 221 004e 2243     		orrs	r2, r2, r4
 222 0050 1A64     		str	r2, [r3, #64]
  32:Game/Src/screen.c **** 
  33:Game/Src/screen.c ****   hdma2d.LayerCfg[1].InputColorMode = CM_ARGB8888;
 223              		.loc 1 33 37 is_stmt 1
 224 0052 144B     		ldr	r3, .L10
 225 0054 0022     		movs	r2, #0
 226 0056 DA62     		str	r2, [r3, #44]
  34:Game/Src/screen.c ****   hdma2d.LayerCfg[1].InputOffset = 0;
 227              		.loc 1 34 34
 228 0058 124B     		ldr	r3, .L10
 229 005a 0022     		movs	r2, #0
 230 005c 9A62     		str	r2, [r3, #40]
  35:Game/Src/screen.c **** 
  36:Game/Src/screen.c ****   HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 231              		.loc 1 36 3
 232 005e 0121     		movs	r1, #1
 233 0060 1048     		ldr	r0, .L10
 234 0062 FFF7FEFF 		bl	HAL_DMA2D_ConfigLayer
  37:Game/Src/screen.c **** 
  38:Game/Src/screen.c ****   unsigned int address = getLtdcHandler().LayerCfg[getActiveLayer()].FBStartAdress;
 235              		.loc 1 38 26
 236 0066 3B1D     		adds	r3, r7, #4
 237 0068 1846     		mov	r0, r3
 238 006a FFF7FEFF 		bl	getLtdcHandler
 239              		.loc 1 38 52 discriminator 1
 240 006e FFF7FEFF 		bl	getActiveLayer
 241 0072 0346     		mov	r3, r0
 242              		.loc 1 38 16 discriminator 2
 243 0074 3422     		movs	r2, #52
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 6


 244 0076 02FB03F3 		mul	r3, r2, r3
 245 007a B033     		adds	r3, r3, #176
 246 007c 3B44     		add	r3, r3, r7
 247 007e 503B     		subs	r3, r3, #80
 248 0080 1B68     		ldr	r3, [r3]
 249 0082 C7F8AC30 		str	r3, [r7, #172]
  39:Game/Src/screen.c **** 
  40:Game/Src/screen.c ****   HAL_DMA2D_Start_IT(&hdma2d, (uint32_t)colorBuffer, (unsigned int)address, 240, 320);
 250              		.loc 1 40 3
 251 0086 0849     		ldr	r1, .L10+4
 252 0088 4FF4A073 		mov	r3, #320
 253 008c 0093     		str	r3, [sp]
 254 008e F023     		movs	r3, #240
 255 0090 D7F8AC20 		ldr	r2, [r7, #172]
 256 0094 0348     		ldr	r0, .L10
 257 0096 FFF7FEFF 		bl	HAL_DMA2D_Start_IT
  41:Game/Src/screen.c **** }
 258              		.loc 1 41 1
 259 009a 00BF     		nop
 260 009c B437     		adds	r7, r7, #180
 261              	.LCFI9:
 262              		.cfi_def_cfa_offset 12
 263 009e BD46     		mov	sp, r7
 264              	.LCFI10:
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 00a0 90BD     		pop	{r4, r7, pc}
 268              	.L11:
 269 00a2 00BF     		.align	2
 270              	.L10:
 271 00a4 00000000 		.word	hdma2d
 272 00a8 00B00400 		.word	colorBuffer
 273              		.cfi_endproc
 274              	.LFE138:
 276              		.section	.text.screen_clear,"ax",%progbits
 277              		.align	1
 278              		.global	screen_clear
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	screen_clear:
 284              	.LFB139:
  42:Game/Src/screen.c **** 
  43:Game/Src/screen.c **** void screen_clear(ScreenColor color)
  44:Game/Src/screen.c **** {
 285              		.loc 1 44 1
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 16
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290 0000 80B4     		push	{r7}
 291              	.LCFI11:
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 7, -4
 294 0002 85B0     		sub	sp, sp, #20
 295              	.LCFI12:
 296              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 7


 297 0004 00AF     		add	r7, sp, #0
 298              	.LCFI13:
 299              		.cfi_def_cfa_register 7
 300 0006 7860     		str	r0, [r7, #4]
 301              	.LBB2:
  45:Game/Src/screen.c ****   for (int i = 0; i < SCREEN_WIDHT; i += 1) {
 302              		.loc 1 45 12
 303 0008 0023     		movs	r3, #0
 304 000a FB60     		str	r3, [r7, #12]
 305              		.loc 1 45 3
 306 000c 23E0     		b	.L13
 307              	.L16:
 308              	.LBB3:
  46:Game/Src/screen.c ****     for (int j = 0; j < SCREEN_HEIGHT; j += 1) {
 309              		.loc 1 46 14
 310 000e 0023     		movs	r3, #0
 311 0010 BB60     		str	r3, [r7, #8]
 312              		.loc 1 46 5
 313 0012 1AE0     		b	.L14
 314              	.L15:
  47:Game/Src/screen.c ****       depthBuffer[i][j] = DEPTH_BUFFER_ZERO;
 315              		.loc 1 47 25
 316 0014 1549     		ldr	r1, .L17
 317 0016 FA68     		ldr	r2, [r7, #12]
 318 0018 1346     		mov	r3, r2
 319 001a 1B01     		lsls	r3, r3, #4
 320 001c 9B1A     		subs	r3, r3, r2
 321 001e 1B01     		lsls	r3, r3, #4
 322 0020 BA68     		ldr	r2, [r7, #8]
 323 0022 1344     		add	r3, r3, r2
 324 0024 9B00     		lsls	r3, r3, #2
 325 0026 0B44     		add	r3, r3, r1
 326 0028 4FF00002 		mov	r2, #0
 327 002c 1A60     		str	r2, [r3]	@ float
  48:Game/Src/screen.c ****       colorBuffer[i][j] = color;
 328              		.loc 1 48 25
 329 002e 1049     		ldr	r1, .L17+4
 330 0030 FA68     		ldr	r2, [r7, #12]
 331 0032 1346     		mov	r3, r2
 332 0034 1B01     		lsls	r3, r3, #4
 333 0036 9B1A     		subs	r3, r3, r2
 334 0038 1B01     		lsls	r3, r3, #4
 335 003a BA68     		ldr	r2, [r7, #8]
 336 003c 1344     		add	r3, r3, r2
 337 003e 7A68     		ldr	r2, [r7, #4]
 338 0040 41F82320 		str	r2, [r1, r3, lsl #2]
  46:Game/Src/screen.c ****     for (int j = 0; j < SCREEN_HEIGHT; j += 1) {
 339              		.loc 1 46 42 discriminator 3
 340 0044 BB68     		ldr	r3, [r7, #8]
 341 0046 0133     		adds	r3, r3, #1
 342 0048 BB60     		str	r3, [r7, #8]
 343              	.L14:
  46:Game/Src/screen.c ****     for (int j = 0; j < SCREEN_HEIGHT; j += 1) {
 344              		.loc 1 46 23 discriminator 1
 345 004a BB68     		ldr	r3, [r7, #8]
 346 004c EF2B     		cmp	r3, #239
 347 004e E1DD     		ble	.L15
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 8


 348              	.LBE3:
  45:Game/Src/screen.c ****     for (int j = 0; j < SCREEN_HEIGHT; j += 1) {
 349              		.loc 1 45 39 discriminator 2
 350 0050 FB68     		ldr	r3, [r7, #12]
 351 0052 0133     		adds	r3, r3, #1
 352 0054 FB60     		str	r3, [r7, #12]
 353              	.L13:
  45:Game/Src/screen.c ****     for (int j = 0; j < SCREEN_HEIGHT; j += 1) {
 354              		.loc 1 45 21 discriminator 1
 355 0056 FB68     		ldr	r3, [r7, #12]
 356 0058 B3F5A07F 		cmp	r3, #320
 357 005c D7DB     		blt	.L16
 358              	.LBE2:
  49:Game/Src/screen.c ****     }
  50:Game/Src/screen.c ****   }
  51:Game/Src/screen.c **** }
 359              		.loc 1 51 1
 360 005e 00BF     		nop
 361 0060 00BF     		nop
 362 0062 1437     		adds	r7, r7, #20
 363              	.LCFI14:
 364              		.cfi_def_cfa_offset 4
 365 0064 BD46     		mov	sp, r7
 366              	.LCFI15:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0066 5DF8047B 		ldr	r7, [sp], #4
 370              	.LCFI16:
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 006a 7047     		bx	lr
 374              	.L18:
 375              		.align	2
 376              	.L17:
 377 006c 00000000 		.word	depthBuffer
 378 0070 00B00400 		.word	colorBuffer
 379              		.cfi_endproc
 380              	.LFE139:
 382              		.text
 383              	.Letext0:
 384              		.file 2 "Game/Inc/screen.h"
 385              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 386              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 387              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 388              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 389              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma2d.h"
 390              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_ltdc.h"
 391              		.file 9 "Drivers/BSP/STM32F429I-Discovery/stm32f429i_discovery_lcd.h"
 392              		.file 10 "Core/Inc/dma2d.h"
ARM GAS  /var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 screen.c
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:21     .sdram:00000000 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:24     .sdram:00000000 depthBuffer
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:29     .sdram:0004b000 colorBuffer
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:32     .text.screen_write_pixel:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:38     .text.screen_write_pixel:00000000 screen_write_pixel
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:155    .text.screen_write_pixel:000000b4 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:161    .text.screen_flush:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:167    .text.screen_flush:00000000 screen_flush
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:271    .text.screen_flush:000000a4 $d
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:277    .text.screen_clear:00000000 $t
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:283    .text.screen_clear:00000000 screen_clear
/var/folders/06/9k7gq4t13mj84z2yhw3grvhc0000gn/T//ccZjsEoM.s:377    .text.screen_clear:0000006c $d

UNDEFINED SYMBOLS
BSP_LCD_GetXSize
HAL_DMA2D_ConfigLayer
getLtdcHandler
getActiveLayer
HAL_DMA2D_Start_IT
hdma2d
